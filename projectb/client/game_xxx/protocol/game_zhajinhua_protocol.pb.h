// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_zhajinhua_protocol.proto

#ifndef PROTOBUF_game_5fzhajinhua_5fprotocol_2eproto__INCLUDED
#define PROTOBUF_game_5fzhajinhua_5fprotocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "game_zhajinhua_def.pb.h"
#include "msg_type_def.pb.h"
// @@protoc_insertion_point(includes)

namespace game_zhajinhua_protocols {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_game_5fzhajinhua_5fprotocol_2eproto();
void protobuf_AssignDesc_game_5fzhajinhua_5fprotocol_2eproto();
void protobuf_ShutdownFile_game_5fzhajinhua_5fprotocol_2eproto();

class packetc2l_get_room_info;
class packetl2c_get_room_info_result;
class packetc2l_check_state;
class packetl2c_check_state_result;
class packetc2l_join_table;
class packetl2c_join_table_result;
class packetl2c_bc_join_room;
class packetc2l_get_table_scene_info;
class packetl2c_get_table_scene_info_result;
class packetc2l_leave_table;
class packetl2c_leave_table_result;
class packetl2c_bc_leave_table;
class packetl2c_game_start;
class packetc2l_set_ready;
class packetl2c_set_ready_result;
class packetc2l_player_declare;
class packetl2c_player_declare_result;
class packetl2c_notify_declare;
class packetc2l_compare_cards;
class packetl2c_compare_cards_result;
class packetl2c_game_settlement;
class packetc2l_change_table;
class packetl2c_change_table_result;
class packetc2l_show_cards;
class packetl2c_notify_show_cards;

// ===================================================================

class packetc2l_get_room_info : public ::google::protobuf::Message {
 public:
  packetc2l_get_room_info();
  virtual ~packetc2l_get_room_info();

  packetc2l_get_room_info(const packetc2l_get_room_info& from);

  inline packetc2l_get_room_info& operator=(const packetc2l_get_room_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_get_room_info& default_instance();

  void Swap(packetc2l_get_room_info* other);

  // implements Message ----------------------------------------------

  packetc2l_get_room_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_get_room_info& from);
  void MergeFrom(const packetc2l_get_room_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_room_info];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_zhajinhua_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:game_zhajinhua_protocols.packetc2l_get_room_info)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fzhajinhua_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_get_room_info* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_get_room_info_result : public ::google::protobuf::Message {
 public:
  packetl2c_get_room_info_result();
  virtual ~packetl2c_get_room_info_result();

  packetl2c_get_room_info_result(const packetl2c_get_room_info_result& from);

  inline packetl2c_get_room_info_result& operator=(const packetl2c_get_room_info_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_get_room_info_result& default_instance();

  void Swap(packetl2c_get_room_info_result* other);

  // implements Message ----------------------------------------------

  packetl2c_get_room_info_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_get_room_info_result& from);
  void MergeFrom(const packetl2c_get_room_info_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_room_info_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_zhajinhua_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value);

  // repeated int32 room_list = 2;
  inline int room_list_size() const;
  inline void clear_room_list();
  static const int kRoomListFieldNumber = 2;
  inline ::google::protobuf::int32 room_list(int index) const;
  inline void set_room_list(int index, ::google::protobuf::int32 value);
  inline void add_room_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      room_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_room_list();

  // @@protoc_insertion_point(class_scope:game_zhajinhua_protocols.packetl2c_get_room_info_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > room_list_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fzhajinhua_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_get_room_info_result* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_check_state : public ::google::protobuf::Message {
 public:
  packetc2l_check_state();
  virtual ~packetc2l_check_state();

  packetc2l_check_state(const packetc2l_check_state& from);

  inline packetc2l_check_state& operator=(const packetc2l_check_state& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_check_state& default_instance();

  void Swap(packetc2l_check_state* other);

  // implements Message ----------------------------------------------

  packetc2l_check_state* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_check_state& from);
  void MergeFrom(const packetc2l_check_state& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_zhajinhua_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:game_zhajinhua_protocols.packetc2l_check_state)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fzhajinhua_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_check_state* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_check_state_result : public ::google::protobuf::Message {
 public:
  packetl2c_check_state_result();
  virtual ~packetl2c_check_state_result();

  packetl2c_check_state_result(const packetl2c_check_state_result& from);

  inline packetl2c_check_state_result& operator=(const packetl2c_check_state_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_check_state_result& default_instance();

  void Swap(packetl2c_check_state_result* other);

  // implements Message ----------------------------------------------

  packetl2c_check_state_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_check_state_result& from);
  void MergeFrom(const packetl2c_check_state_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_zhajinhua_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value);

  // optional bool is_intable = 2 [default = false];
  inline bool has_is_intable() const;
  inline void clear_is_intable();
  static const int kIsIntableFieldNumber = 2;
  inline bool is_intable() const;
  inline void set_is_intable(bool value);

  // @@protoc_insertion_point(class_scope:game_zhajinhua_protocols.packetl2c_check_state_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_is_intable();
  inline void clear_has_is_intable();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  bool is_intable_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fzhajinhua_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_check_state_result* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_join_table : public ::google::protobuf::Message {
 public:
  packetc2l_join_table();
  virtual ~packetc2l_join_table();

  packetc2l_join_table(const packetc2l_join_table& from);

  inline packetc2l_join_table& operator=(const packetc2l_join_table& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_join_table& default_instance();

  void Swap(packetc2l_join_table* other);

  // implements Message ----------------------------------------------

  packetc2l_join_table* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_join_table& from);
  void MergeFrom(const packetc2l_join_table& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_join_table];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_zhajinhua_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value);

  // optional int32 roomId = 2;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  inline ::google::protobuf::int32 roomid() const;
  inline void set_roomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_zhajinhua_protocols.packetc2l_join_table)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 roomid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fzhajinhua_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_join_table* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_join_table_result : public ::google::protobuf::Message {
 public:
  packetl2c_join_table_result();
  virtual ~packetl2c_join_table_result();

  packetl2c_join_table_result(const packetl2c_join_table_result& from);

  inline packetl2c_join_table_result& operator=(const packetl2c_join_table_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_join_table_result& default_instance();

  void Swap(packetl2c_join_table_result* other);

  // implements Message ----------------------------------------------

  packetl2c_join_table_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_join_table_result& from);
  void MergeFrom(const packetl2c_join_table_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_join_table_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_zhajinhua_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value);

  // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::msg_type_def::e_msg_result_def result() const;
  inline void set_result(::msg_type_def::e_msg_result_def value);

  // optional int32 table_id = 3;
  inline bool has_table_id() const;
  inline void clear_table_id();
  static const int kTableIdFieldNumber = 3;
  inline ::google::protobuf::int32 table_id() const;
  inline void set_table_id(::google::protobuf::int32 value);

  // optional .game_zhajinhua_protocols.e_table_state table_state = 4;
  inline bool has_table_state() const;
  inline void clear_table_state();
  static const int kTableStateFieldNumber = 4;
  inline ::game_zhajinhua_protocols::e_table_state table_state() const;
  inline void set_table_state(::game_zhajinhua_protocols::e_table_state value);

  // @@protoc_insertion_point(class_scope:game_zhajinhua_protocols.packetl2c_join_table_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_table_id();
  inline void clear_has_table_id();
  inline void set_has_table_state();
  inline void clear_has_table_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  int result_;
  ::google::protobuf::int32 table_id_;
  int table_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fzhajinhua_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_join_table_result* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_bc_join_room : public ::google::protobuf::Message {
 public:
  packetl2c_bc_join_room();
  virtual ~packetl2c_bc_join_room();

  packetl2c_bc_join_room(const packetl2c_bc_join_room& from);

  inline packetl2c_bc_join_room& operator=(const packetl2c_bc_join_room& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_bc_join_room& default_instance();

  void Swap(packetl2c_bc_join_room* other);

  // implements Message ----------------------------------------------

  packetl2c_bc_join_room* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_bc_join_room& from);
  void MergeFrom(const packetl2c_bc_join_room& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_join_room];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_zhajinhua_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value);

  // optional .game_zhajinhua_protocols.msg_player_info player_info = 2;
  inline bool has_player_info() const;
  inline void clear_player_info();
  static const int kPlayerInfoFieldNumber = 2;
  inline const ::game_zhajinhua_protocols::msg_player_info& player_info() const;
  inline ::game_zhajinhua_protocols::msg_player_info* mutable_player_info();
  inline ::game_zhajinhua_protocols::msg_player_info* release_player_info();
  inline void set_allocated_player_info(::game_zhajinhua_protocols::msg_player_info* player_info);

  // @@protoc_insertion_point(class_scope:game_zhajinhua_protocols.packetl2c_bc_join_room)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_player_info();
  inline void clear_has_player_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::game_zhajinhua_protocols::msg_player_info* player_info_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fzhajinhua_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_bc_join_room* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_get_table_scene_info : public ::google::protobuf::Message {
 public:
  packetc2l_get_table_scene_info();
  virtual ~packetc2l_get_table_scene_info();

  packetc2l_get_table_scene_info(const packetc2l_get_table_scene_info& from);

  inline packetc2l_get_table_scene_info& operator=(const packetc2l_get_table_scene_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_get_table_scene_info& default_instance();

  void Swap(packetc2l_get_table_scene_info* other);

  // implements Message ----------------------------------------------

  packetc2l_get_table_scene_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_get_table_scene_info& from);
  void MergeFrom(const packetc2l_get_table_scene_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_table_scene_info];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_zhajinhua_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:game_zhajinhua_protocols.packetc2l_get_table_scene_info)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fzhajinhua_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_get_table_scene_info* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_get_table_scene_info_result : public ::google::protobuf::Message {
 public:
  packetl2c_get_table_scene_info_result();
  virtual ~packetl2c_get_table_scene_info_result();

  packetl2c_get_table_scene_info_result(const packetl2c_get_table_scene_info_result& from);

  inline packetl2c_get_table_scene_info_result& operator=(const packetl2c_get_table_scene_info_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_get_table_scene_info_result& default_instance();

  void Swap(packetl2c_get_table_scene_info_result* other);

  // implements Message ----------------------------------------------

  packetl2c_get_table_scene_info_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_get_table_scene_info_result& from);
  void MergeFrom(const packetl2c_get_table_scene_info_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_table_scene_info_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_zhajinhua_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value);

  // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::msg_type_def::e_msg_result_def result() const;
  inline void set_result(::msg_type_def::e_msg_result_def value);

  // optional int32 room_id = 3;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 3;
  inline ::google::protobuf::int32 room_id() const;
  inline void set_room_id(::google::protobuf::int32 value);

  // optional int32 table_id = 4;
  inline bool has_table_id() const;
  inline void clear_table_id();
  static const int kTableIdFieldNumber = 4;
  inline ::google::protobuf::int32 table_id() const;
  inline void set_table_id(::google::protobuf::int32 value);

  // optional .game_zhajinhua_protocols.e_table_state table_state = 5;
  inline bool has_table_state() const;
  inline void clear_table_state();
  static const int kTableStateFieldNumber = 5;
  inline ::game_zhajinhua_protocols::e_table_state table_state() const;
  inline void set_table_state(::game_zhajinhua_protocols::e_table_state value);

  // optional int32 total_bet = 6;
  inline bool has_total_bet() const;
  inline void clear_total_bet();
  static const int kTotalBetFieldNumber = 6;
  inline ::google::protobuf::int32 total_bet() const;
  inline void set_total_bet(::google::protobuf::int32 value);

  // optional int32 cur_round = 7;
  inline bool has_cur_round() const;
  inline void clear_cur_round();
  static const int kCurRoundFieldNumber = 7;
  inline ::google::protobuf::int32 cur_round() const;
  inline void set_cur_round(::google::protobuf::int32 value);

  // optional int32 declare_player = 8 [default = 0];
  inline bool has_declare_player() const;
  inline void clear_declare_player();
  static const int kDeclarePlayerFieldNumber = 8;
  inline ::google::protobuf::int32 declare_player() const;
  inline void set_declare_player(::google::protobuf::int32 value);

  // optional int32 time = 9;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 9;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // repeated .game_zhajinhua_protocols.msg_player_info player_list = 10;
  inline int player_list_size() const;
  inline void clear_player_list();
  static const int kPlayerListFieldNumber = 10;
  inline const ::game_zhajinhua_protocols::msg_player_info& player_list(int index) const;
  inline ::game_zhajinhua_protocols::msg_player_info* mutable_player_list(int index);
  inline ::game_zhajinhua_protocols::msg_player_info* add_player_list();
  inline const ::google::protobuf::RepeatedPtrField< ::game_zhajinhua_protocols::msg_player_info >&
      player_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_zhajinhua_protocols::msg_player_info >*
      mutable_player_list();

  // repeated .game_zhajinhua_protocols.msg_player_cards player_card_list = 11;
  inline int player_card_list_size() const;
  inline void clear_player_card_list();
  static const int kPlayerCardListFieldNumber = 11;
  inline const ::game_zhajinhua_protocols::msg_player_cards& player_card_list(int index) const;
  inline ::game_zhajinhua_protocols::msg_player_cards* mutable_player_card_list(int index);
  inline ::game_zhajinhua_protocols::msg_player_cards* add_player_card_list();
  inline const ::google::protobuf::RepeatedPtrField< ::game_zhajinhua_protocols::msg_player_cards >&
      player_card_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_zhajinhua_protocols::msg_player_cards >*
      mutable_player_card_list();

  // optional int32 cur_bet = 12;
  inline bool has_cur_bet() const;
  inline void clear_cur_bet();
  static const int kCurBetFieldNumber = 12;
  inline ::google::protobuf::int32 cur_bet() const;
  inline void set_cur_bet(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_zhajinhua_protocols.packetl2c_get_table_scene_info_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_table_id();
  inline void clear_has_table_id();
  inline void set_has_table_state();
  inline void clear_has_table_state();
  inline void set_has_total_bet();
  inline void clear_has_total_bet();
  inline void set_has_cur_round();
  inline void clear_has_cur_round();
  inline void set_has_declare_player();
  inline void clear_has_declare_player();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_cur_bet();
  inline void clear_has_cur_bet();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  int result_;
  ::google::protobuf::int32 room_id_;
  ::google::protobuf::int32 table_id_;
  int table_state_;
  ::google::protobuf::int32 total_bet_;
  ::google::protobuf::int32 cur_round_;
  ::google::protobuf::int32 declare_player_;
  ::google::protobuf::RepeatedPtrField< ::game_zhajinhua_protocols::msg_player_info > player_list_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 cur_bet_;
  ::google::protobuf::RepeatedPtrField< ::game_zhajinhua_protocols::msg_player_cards > player_card_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fzhajinhua_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_get_table_scene_info_result* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_leave_table : public ::google::protobuf::Message {
 public:
  packetc2l_leave_table();
  virtual ~packetc2l_leave_table();

  packetc2l_leave_table(const packetc2l_leave_table& from);

  inline packetc2l_leave_table& operator=(const packetc2l_leave_table& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_leave_table& default_instance();

  void Swap(packetc2l_leave_table* other);

  // implements Message ----------------------------------------------

  packetc2l_leave_table* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_leave_table& from);
  void MergeFrom(const packetc2l_leave_table& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_table];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_zhajinhua_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:game_zhajinhua_protocols.packetc2l_leave_table)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fzhajinhua_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_leave_table* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_leave_table_result : public ::google::protobuf::Message {
 public:
  packetl2c_leave_table_result();
  virtual ~packetl2c_leave_table_result();

  packetl2c_leave_table_result(const packetl2c_leave_table_result& from);

  inline packetl2c_leave_table_result& operator=(const packetl2c_leave_table_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_leave_table_result& default_instance();

  void Swap(packetl2c_leave_table_result* other);

  // implements Message ----------------------------------------------

  packetl2c_leave_table_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_leave_table_result& from);
  void MergeFrom(const packetl2c_leave_table_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_table_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_zhajinhua_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value);

  // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::msg_type_def::e_msg_result_def result() const;
  inline void set_result(::msg_type_def::e_msg_result_def value);

  // optional int32 player_gold = 3;
  inline bool has_player_gold() const;
  inline void clear_player_gold();
  static const int kPlayerGoldFieldNumber = 3;
  inline ::google::protobuf::int32 player_gold() const;
  inline void set_player_gold(::google::protobuf::int32 value);

  // optional int32 type = 4 [default = 1];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_zhajinhua_protocols.packetl2c_leave_table_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_player_gold();
  inline void clear_has_player_gold();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  int result_;
  ::google::protobuf::int32 player_gold_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fzhajinhua_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_leave_table_result* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_bc_leave_table : public ::google::protobuf::Message {
 public:
  packetl2c_bc_leave_table();
  virtual ~packetl2c_bc_leave_table();

  packetl2c_bc_leave_table(const packetl2c_bc_leave_table& from);

  inline packetl2c_bc_leave_table& operator=(const packetl2c_bc_leave_table& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_bc_leave_table& default_instance();

  void Swap(packetl2c_bc_leave_table* other);

  // implements Message ----------------------------------------------

  packetl2c_bc_leave_table* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_bc_leave_table& from);
  void MergeFrom(const packetl2c_bc_leave_table& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_leave_table];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_zhajinhua_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value);

  // optional int32 player_id = 2;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_zhajinhua_protocols.packetl2c_bc_leave_table)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_player_id();
  inline void clear_has_player_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 player_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fzhajinhua_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_bc_leave_table* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_game_start : public ::google::protobuf::Message {
 public:
  packetl2c_game_start();
  virtual ~packetl2c_game_start();

  packetl2c_game_start(const packetl2c_game_start& from);

  inline packetl2c_game_start& operator=(const packetl2c_game_start& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_game_start& default_instance();

  void Swap(packetl2c_game_start* other);

  // implements Message ----------------------------------------------

  packetl2c_game_start* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_game_start& from);
  void MergeFrom(const packetl2c_game_start& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_game_start];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_zhajinhua_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:game_zhajinhua_protocols.packetl2c_game_start)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fzhajinhua_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_game_start* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_set_ready : public ::google::protobuf::Message {
 public:
  packetc2l_set_ready();
  virtual ~packetc2l_set_ready();

  packetc2l_set_ready(const packetc2l_set_ready& from);

  inline packetc2l_set_ready& operator=(const packetc2l_set_ready& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_set_ready& default_instance();

  void Swap(packetc2l_set_ready* other);

  // implements Message ----------------------------------------------

  packetc2l_set_ready* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_set_ready& from);
  void MergeFrom(const packetc2l_set_ready& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_set_ready];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_zhajinhua_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:game_zhajinhua_protocols.packetc2l_set_ready)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fzhajinhua_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_set_ready* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_set_ready_result : public ::google::protobuf::Message {
 public:
  packetl2c_set_ready_result();
  virtual ~packetl2c_set_ready_result();

  packetl2c_set_ready_result(const packetl2c_set_ready_result& from);

  inline packetl2c_set_ready_result& operator=(const packetl2c_set_ready_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_set_ready_result& default_instance();

  void Swap(packetl2c_set_ready_result* other);

  // implements Message ----------------------------------------------

  packetl2c_set_ready_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_set_ready_result& from);
  void MergeFrom(const packetl2c_set_ready_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_set_ready_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_zhajinhua_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value);

  // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::msg_type_def::e_msg_result_def result() const;
  inline void set_result(::msg_type_def::e_msg_result_def value);

  // optional int32 player_id = 3;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 3;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_zhajinhua_protocols.packetl2c_set_ready_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_player_id();
  inline void clear_has_player_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  int result_;
  ::google::protobuf::int32 player_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fzhajinhua_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_set_ready_result* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_player_declare : public ::google::protobuf::Message {
 public:
  packetc2l_player_declare();
  virtual ~packetc2l_player_declare();

  packetc2l_player_declare(const packetc2l_player_declare& from);

  inline packetc2l_player_declare& operator=(const packetc2l_player_declare& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_player_declare& default_instance();

  void Swap(packetc2l_player_declare* other);

  // implements Message ----------------------------------------------

  packetc2l_player_declare* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_player_declare& from);
  void MergeFrom(const packetc2l_player_declare& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_player_declare];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_zhajinhua_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value);

  // optional .game_zhajinhua_protocols.e_player_declare declare = 2;
  inline bool has_declare() const;
  inline void clear_declare();
  static const int kDeclareFieldNumber = 2;
  inline ::game_zhajinhua_protocols::e_player_declare declare() const;
  inline void set_declare(::game_zhajinhua_protocols::e_player_declare value);

  // optional int32 chips = 3;
  inline bool has_chips() const;
  inline void clear_chips();
  static const int kChipsFieldNumber = 3;
  inline ::google::protobuf::int32 chips() const;
  inline void set_chips(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_zhajinhua_protocols.packetc2l_player_declare)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_declare();
  inline void clear_has_declare();
  inline void set_has_chips();
  inline void clear_has_chips();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  int declare_;
  ::google::protobuf::int32 chips_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fzhajinhua_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_player_declare* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_player_declare_result : public ::google::protobuf::Message {
 public:
  packetl2c_player_declare_result();
  virtual ~packetl2c_player_declare_result();

  packetl2c_player_declare_result(const packetl2c_player_declare_result& from);

  inline packetl2c_player_declare_result& operator=(const packetl2c_player_declare_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_player_declare_result& default_instance();

  void Swap(packetl2c_player_declare_result* other);

  // implements Message ----------------------------------------------

  packetl2c_player_declare_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_player_declare_result& from);
  void MergeFrom(const packetl2c_player_declare_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_player_declare_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_zhajinhua_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value);

  // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::msg_type_def::e_msg_result_def result() const;
  inline void set_result(::msg_type_def::e_msg_result_def value);

  // optional .game_zhajinhua_protocols.e_player_declare declare = 3;
  inline bool has_declare() const;
  inline void clear_declare();
  static const int kDeclareFieldNumber = 3;
  inline ::game_zhajinhua_protocols::e_player_declare declare() const;
  inline void set_declare(::game_zhajinhua_protocols::e_player_declare value);

  // optional int32 chips = 4;
  inline bool has_chips() const;
  inline void clear_chips();
  static const int kChipsFieldNumber = 4;
  inline ::google::protobuf::int32 chips() const;
  inline void set_chips(::google::protobuf::int32 value);

  // optional int32 player_id = 5;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 5;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // repeated int32 cards = 6;
  inline int cards_size() const;
  inline void clear_cards();
  static const int kCardsFieldNumber = 6;
  inline ::google::protobuf::int32 cards(int index) const;
  inline void set_cards(int index, ::google::protobuf::int32 value);
  inline void add_cards(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cards() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cards();

  // optional int32 card_type = 7;
  inline bool has_card_type() const;
  inline void clear_card_type();
  static const int kCardTypeFieldNumber = 7;
  inline ::google::protobuf::int32 card_type() const;
  inline void set_card_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_zhajinhua_protocols.packetl2c_player_declare_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_declare();
  inline void clear_has_declare();
  inline void set_has_chips();
  inline void clear_has_chips();
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_card_type();
  inline void clear_has_card_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  int result_;
  int declare_;
  ::google::protobuf::int32 chips_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cards_;
  ::google::protobuf::int32 player_id_;
  ::google::protobuf::int32 card_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fzhajinhua_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_player_declare_result* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_notify_declare : public ::google::protobuf::Message {
 public:
  packetl2c_notify_declare();
  virtual ~packetl2c_notify_declare();

  packetl2c_notify_declare(const packetl2c_notify_declare& from);

  inline packetl2c_notify_declare& operator=(const packetl2c_notify_declare& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_notify_declare& default_instance();

  void Swap(packetl2c_notify_declare* other);

  // implements Message ----------------------------------------------

  packetl2c_notify_declare* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_notify_declare& from);
  void MergeFrom(const packetl2c_notify_declare& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_12c_notify_declare];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_zhajinhua_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value);

  // optional int32 player_id = 2;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // optional int32 cur_round = 3;
  inline bool has_cur_round() const;
  inline void clear_cur_round();
  static const int kCurRoundFieldNumber = 3;
  inline ::google::protobuf::int32 cur_round() const;
  inline void set_cur_round(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_zhajinhua_protocols.packetl2c_notify_declare)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_cur_round();
  inline void clear_has_cur_round();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 player_id_;
  ::google::protobuf::int32 cur_round_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fzhajinhua_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_notify_declare* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_compare_cards : public ::google::protobuf::Message {
 public:
  packetc2l_compare_cards();
  virtual ~packetc2l_compare_cards();

  packetc2l_compare_cards(const packetc2l_compare_cards& from);

  inline packetc2l_compare_cards& operator=(const packetc2l_compare_cards& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_compare_cards& default_instance();

  void Swap(packetc2l_compare_cards* other);

  // implements Message ----------------------------------------------

  packetc2l_compare_cards* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_compare_cards& from);
  void MergeFrom(const packetc2l_compare_cards& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_compare_cards];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_zhajinhua_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value);

  // optional int32 player_id = 2;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_zhajinhua_protocols.packetc2l_compare_cards)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_player_id();
  inline void clear_has_player_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 player_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fzhajinhua_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_compare_cards* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_compare_cards_result : public ::google::protobuf::Message {
 public:
  packetl2c_compare_cards_result();
  virtual ~packetl2c_compare_cards_result();

  packetl2c_compare_cards_result(const packetl2c_compare_cards_result& from);

  inline packetl2c_compare_cards_result& operator=(const packetl2c_compare_cards_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_compare_cards_result& default_instance();

  void Swap(packetl2c_compare_cards_result* other);

  // implements Message ----------------------------------------------

  packetl2c_compare_cards_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_compare_cards_result& from);
  void MergeFrom(const packetl2c_compare_cards_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_compare_cards_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_zhajinhua_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value);

  // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::msg_type_def::e_msg_result_def result() const;
  inline void set_result(::msg_type_def::e_msg_result_def value);

  // optional int32 chips = 3;
  inline bool has_chips() const;
  inline void clear_chips();
  static const int kChipsFieldNumber = 3;
  inline ::google::protobuf::int32 chips() const;
  inline void set_chips(::google::protobuf::int32 value);

  // optional int32 player_id = 4;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 4;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // optional int32 win_player = 5;
  inline bool has_win_player() const;
  inline void clear_win_player();
  static const int kWinPlayerFieldNumber = 5;
  inline ::google::protobuf::int32 win_player() const;
  inline void set_win_player(::google::protobuf::int32 value);

  // repeated .game_zhajinhua_protocols.msg_compare_cards compare_result = 6;
  inline int compare_result_size() const;
  inline void clear_compare_result();
  static const int kCompareResultFieldNumber = 6;
  inline const ::game_zhajinhua_protocols::msg_compare_cards& compare_result(int index) const;
  inline ::game_zhajinhua_protocols::msg_compare_cards* mutable_compare_result(int index);
  inline ::game_zhajinhua_protocols::msg_compare_cards* add_compare_result();
  inline const ::google::protobuf::RepeatedPtrField< ::game_zhajinhua_protocols::msg_compare_cards >&
      compare_result() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_zhajinhua_protocols::msg_compare_cards >*
      mutable_compare_result();

  // @@protoc_insertion_point(class_scope:game_zhajinhua_protocols.packetl2c_compare_cards_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_chips();
  inline void clear_has_chips();
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_win_player();
  inline void clear_has_win_player();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  int result_;
  ::google::protobuf::int32 chips_;
  ::google::protobuf::int32 player_id_;
  ::google::protobuf::RepeatedPtrField< ::game_zhajinhua_protocols::msg_compare_cards > compare_result_;
  ::google::protobuf::int32 win_player_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fzhajinhua_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_compare_cards_result* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_game_settlement : public ::google::protobuf::Message {
 public:
  packetl2c_game_settlement();
  virtual ~packetl2c_game_settlement();

  packetl2c_game_settlement(const packetl2c_game_settlement& from);

  inline packetl2c_game_settlement& operator=(const packetl2c_game_settlement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_game_settlement& default_instance();

  void Swap(packetl2c_game_settlement* other);

  // implements Message ----------------------------------------------

  packetl2c_game_settlement* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_game_settlement& from);
  void MergeFrom(const packetl2c_game_settlement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_game_settlement];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_zhajinhua_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value);

  // repeated .game_zhajinhua_protocols.msg_player_settlement player_settlement_info = 2;
  inline int player_settlement_info_size() const;
  inline void clear_player_settlement_info();
  static const int kPlayerSettlementInfoFieldNumber = 2;
  inline const ::game_zhajinhua_protocols::msg_player_settlement& player_settlement_info(int index) const;
  inline ::game_zhajinhua_protocols::msg_player_settlement* mutable_player_settlement_info(int index);
  inline ::game_zhajinhua_protocols::msg_player_settlement* add_player_settlement_info();
  inline const ::google::protobuf::RepeatedPtrField< ::game_zhajinhua_protocols::msg_player_settlement >&
      player_settlement_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_zhajinhua_protocols::msg_player_settlement >*
      mutable_player_settlement_info();

  // @@protoc_insertion_point(class_scope:game_zhajinhua_protocols.packetl2c_game_settlement)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::game_zhajinhua_protocols::msg_player_settlement > player_settlement_info_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fzhajinhua_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_game_settlement* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_change_table : public ::google::protobuf::Message {
 public:
  packetc2l_change_table();
  virtual ~packetc2l_change_table();

  packetc2l_change_table(const packetc2l_change_table& from);

  inline packetc2l_change_table& operator=(const packetc2l_change_table& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_change_table& default_instance();

  void Swap(packetc2l_change_table* other);

  // implements Message ----------------------------------------------

  packetc2l_change_table* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_change_table& from);
  void MergeFrom(const packetc2l_change_table& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_change_table];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_zhajinhua_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:game_zhajinhua_protocols.packetc2l_change_table)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fzhajinhua_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_change_table* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_change_table_result : public ::google::protobuf::Message {
 public:
  packetl2c_change_table_result();
  virtual ~packetl2c_change_table_result();

  packetl2c_change_table_result(const packetl2c_change_table_result& from);

  inline packetl2c_change_table_result& operator=(const packetl2c_change_table_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_change_table_result& default_instance();

  void Swap(packetl2c_change_table_result* other);

  // implements Message ----------------------------------------------

  packetl2c_change_table_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_change_table_result& from);
  void MergeFrom(const packetl2c_change_table_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_change_table_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_zhajinhua_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value);

  // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::msg_type_def::e_msg_result_def result() const;
  inline void set_result(::msg_type_def::e_msg_result_def value);

  // @@protoc_insertion_point(class_scope:game_zhajinhua_protocols.packetl2c_change_table_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  int result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fzhajinhua_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_change_table_result* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_show_cards : public ::google::protobuf::Message {
 public:
  packetc2l_show_cards();
  virtual ~packetc2l_show_cards();

  packetc2l_show_cards(const packetc2l_show_cards& from);

  inline packetc2l_show_cards& operator=(const packetc2l_show_cards& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_show_cards& default_instance();

  void Swap(packetc2l_show_cards* other);

  // implements Message ----------------------------------------------

  packetc2l_show_cards* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_show_cards& from);
  void MergeFrom(const packetc2l_show_cards& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_show_cards];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_zhajinhua_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:game_zhajinhua_protocols.packetc2l_show_cards)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fzhajinhua_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_show_cards* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_notify_show_cards : public ::google::protobuf::Message {
 public:
  packetl2c_notify_show_cards();
  virtual ~packetl2c_notify_show_cards();

  packetl2c_notify_show_cards(const packetl2c_notify_show_cards& from);

  inline packetl2c_notify_show_cards& operator=(const packetl2c_notify_show_cards& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_notify_show_cards& default_instance();

  void Swap(packetl2c_notify_show_cards* other);

  // implements Message ----------------------------------------------

  packetl2c_notify_show_cards* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_notify_show_cards& from);
  void MergeFrom(const packetl2c_notify_show_cards& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_notify_show_cards];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_zhajinhua_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value);

  // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::msg_type_def::e_msg_result_def result() const;
  inline void set_result(::msg_type_def::e_msg_result_def value);

  // optional int32 player_id = 3;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 3;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // repeated int32 cards = 4;
  inline int cards_size() const;
  inline void clear_cards();
  static const int kCardsFieldNumber = 4;
  inline ::google::protobuf::int32 cards(int index) const;
  inline void set_cards(int index, ::google::protobuf::int32 value);
  inline void add_cards(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cards() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cards();

  // @@protoc_insertion_point(class_scope:game_zhajinhua_protocols.packetl2c_notify_show_cards)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_player_id();
  inline void clear_has_player_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  int result_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cards_;
  ::google::protobuf::int32 player_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fzhajinhua_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fzhajinhua_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_notify_show_cards* default_instance_;
};
// ===================================================================


// ===================================================================

// packetc2l_get_room_info

// optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_room_info];
inline bool packetc2l_get_room_info::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_get_room_info::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_get_room_info::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_get_room_info::clear_packet_id() {
  packet_id_ = 10001;
  clear_has_packet_id();
}
inline ::game_zhajinhua_protocols::e_server_msg_type packetc2l_get_room_info::packet_id() const {
  return static_cast< ::game_zhajinhua_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_get_room_info::set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value) {
  assert(::game_zhajinhua_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetl2c_get_room_info_result

// optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_room_info_result];
inline bool packetl2c_get_room_info_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_get_room_info_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_get_room_info_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_get_room_info_result::clear_packet_id() {
  packet_id_ = 15001;
  clear_has_packet_id();
}
inline ::game_zhajinhua_protocols::e_server_msg_type packetl2c_get_room_info_result::packet_id() const {
  return static_cast< ::game_zhajinhua_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_get_room_info_result::set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value) {
  assert(::game_zhajinhua_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// repeated int32 room_list = 2;
inline int packetl2c_get_room_info_result::room_list_size() const {
  return room_list_.size();
}
inline void packetl2c_get_room_info_result::clear_room_list() {
  room_list_.Clear();
}
inline ::google::protobuf::int32 packetl2c_get_room_info_result::room_list(int index) const {
  return room_list_.Get(index);
}
inline void packetl2c_get_room_info_result::set_room_list(int index, ::google::protobuf::int32 value) {
  room_list_.Set(index, value);
}
inline void packetl2c_get_room_info_result::add_room_list(::google::protobuf::int32 value) {
  room_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
packetl2c_get_room_info_result::room_list() const {
  return room_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
packetl2c_get_room_info_result::mutable_room_list() {
  return &room_list_;
}

// -------------------------------------------------------------------

// packetc2l_check_state

// optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];
inline bool packetc2l_check_state::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_check_state::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_check_state::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_check_state::clear_packet_id() {
  packet_id_ = 10012;
  clear_has_packet_id();
}
inline ::game_zhajinhua_protocols::e_server_msg_type packetc2l_check_state::packet_id() const {
  return static_cast< ::game_zhajinhua_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_check_state::set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value) {
  assert(::game_zhajinhua_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetl2c_check_state_result

// optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];
inline bool packetl2c_check_state_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_check_state_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_check_state_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_check_state_result::clear_packet_id() {
  packet_id_ = 15017;
  clear_has_packet_id();
}
inline ::game_zhajinhua_protocols::e_server_msg_type packetl2c_check_state_result::packet_id() const {
  return static_cast< ::game_zhajinhua_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_check_state_result::set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value) {
  assert(::game_zhajinhua_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional bool is_intable = 2 [default = false];
inline bool packetl2c_check_state_result::has_is_intable() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_check_state_result::set_has_is_intable() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_check_state_result::clear_has_is_intable() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_check_state_result::clear_is_intable() {
  is_intable_ = false;
  clear_has_is_intable();
}
inline bool packetl2c_check_state_result::is_intable() const {
  return is_intable_;
}
inline void packetl2c_check_state_result::set_is_intable(bool value) {
  set_has_is_intable();
  is_intable_ = value;
}

// -------------------------------------------------------------------

// packetc2l_join_table

// optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_join_table];
inline bool packetc2l_join_table::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_join_table::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_join_table::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_join_table::clear_packet_id() {
  packet_id_ = 10002;
  clear_has_packet_id();
}
inline ::game_zhajinhua_protocols::e_server_msg_type packetc2l_join_table::packet_id() const {
  return static_cast< ::game_zhajinhua_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_join_table::set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value) {
  assert(::game_zhajinhua_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 roomId = 2;
inline bool packetc2l_join_table::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetc2l_join_table::set_has_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetc2l_join_table::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetc2l_join_table::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google::protobuf::int32 packetc2l_join_table::roomid() const {
  return roomid_;
}
inline void packetc2l_join_table::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
}

// -------------------------------------------------------------------

// packetl2c_join_table_result

// optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_join_table_result];
inline bool packetl2c_join_table_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_join_table_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_join_table_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_join_table_result::clear_packet_id() {
  packet_id_ = 15002;
  clear_has_packet_id();
}
inline ::game_zhajinhua_protocols::e_server_msg_type packetl2c_join_table_result::packet_id() const {
  return static_cast< ::game_zhajinhua_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_join_table_result::set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value) {
  assert(::game_zhajinhua_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
inline bool packetl2c_join_table_result::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_join_table_result::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_join_table_result::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_join_table_result::clear_result() {
  result_ = 2;
  clear_has_result();
}
inline ::msg_type_def::e_msg_result_def packetl2c_join_table_result::result() const {
  return static_cast< ::msg_type_def::e_msg_result_def >(result_);
}
inline void packetl2c_join_table_result::set_result(::msg_type_def::e_msg_result_def value) {
  assert(::msg_type_def::e_msg_result_def_IsValid(value));
  set_has_result();
  result_ = value;
}

// optional int32 table_id = 3;
inline bool packetl2c_join_table_result::has_table_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetl2c_join_table_result::set_has_table_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetl2c_join_table_result::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetl2c_join_table_result::clear_table_id() {
  table_id_ = 0;
  clear_has_table_id();
}
inline ::google::protobuf::int32 packetl2c_join_table_result::table_id() const {
  return table_id_;
}
inline void packetl2c_join_table_result::set_table_id(::google::protobuf::int32 value) {
  set_has_table_id();
  table_id_ = value;
}

// optional .game_zhajinhua_protocols.e_table_state table_state = 4;
inline bool packetl2c_join_table_result::has_table_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void packetl2c_join_table_result::set_has_table_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void packetl2c_join_table_result::clear_has_table_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void packetl2c_join_table_result::clear_table_state() {
  table_state_ = 0;
  clear_has_table_state();
}
inline ::game_zhajinhua_protocols::e_table_state packetl2c_join_table_result::table_state() const {
  return static_cast< ::game_zhajinhua_protocols::e_table_state >(table_state_);
}
inline void packetl2c_join_table_result::set_table_state(::game_zhajinhua_protocols::e_table_state value) {
  assert(::game_zhajinhua_protocols::e_table_state_IsValid(value));
  set_has_table_state();
  table_state_ = value;
}

// -------------------------------------------------------------------

// packetl2c_bc_join_room

// optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_join_room];
inline bool packetl2c_bc_join_room::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_bc_join_room::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_bc_join_room::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_bc_join_room::clear_packet_id() {
  packet_id_ = 15013;
  clear_has_packet_id();
}
inline ::game_zhajinhua_protocols::e_server_msg_type packetl2c_bc_join_room::packet_id() const {
  return static_cast< ::game_zhajinhua_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_bc_join_room::set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value) {
  assert(::game_zhajinhua_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional .game_zhajinhua_protocols.msg_player_info player_info = 2;
inline bool packetl2c_bc_join_room::has_player_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_bc_join_room::set_has_player_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_bc_join_room::clear_has_player_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_bc_join_room::clear_player_info() {
  if (player_info_ != NULL) player_info_->::game_zhajinhua_protocols::msg_player_info::Clear();
  clear_has_player_info();
}
inline const ::game_zhajinhua_protocols::msg_player_info& packetl2c_bc_join_room::player_info() const {
  return player_info_ != NULL ? *player_info_ : *default_instance_->player_info_;
}
inline ::game_zhajinhua_protocols::msg_player_info* packetl2c_bc_join_room::mutable_player_info() {
  set_has_player_info();
  if (player_info_ == NULL) player_info_ = new ::game_zhajinhua_protocols::msg_player_info;
  return player_info_;
}
inline ::game_zhajinhua_protocols::msg_player_info* packetl2c_bc_join_room::release_player_info() {
  clear_has_player_info();
  ::game_zhajinhua_protocols::msg_player_info* temp = player_info_;
  player_info_ = NULL;
  return temp;
}
inline void packetl2c_bc_join_room::set_allocated_player_info(::game_zhajinhua_protocols::msg_player_info* player_info) {
  delete player_info_;
  player_info_ = player_info;
  if (player_info) {
    set_has_player_info();
  } else {
    clear_has_player_info();
  }
}

// -------------------------------------------------------------------

// packetc2l_get_table_scene_info

// optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_table_scene_info];
inline bool packetc2l_get_table_scene_info::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_get_table_scene_info::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_get_table_scene_info::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_get_table_scene_info::clear_packet_id() {
  packet_id_ = 10009;
  clear_has_packet_id();
}
inline ::game_zhajinhua_protocols::e_server_msg_type packetc2l_get_table_scene_info::packet_id() const {
  return static_cast< ::game_zhajinhua_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_get_table_scene_info::set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value) {
  assert(::game_zhajinhua_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetl2c_get_table_scene_info_result

// optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_table_scene_info_result];
inline bool packetl2c_get_table_scene_info_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_get_table_scene_info_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_get_table_scene_info_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_get_table_scene_info_result::clear_packet_id() {
  packet_id_ = 15011;
  clear_has_packet_id();
}
inline ::game_zhajinhua_protocols::e_server_msg_type packetl2c_get_table_scene_info_result::packet_id() const {
  return static_cast< ::game_zhajinhua_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_get_table_scene_info_result::set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value) {
  assert(::game_zhajinhua_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
inline bool packetl2c_get_table_scene_info_result::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_get_table_scene_info_result::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_get_table_scene_info_result::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_get_table_scene_info_result::clear_result() {
  result_ = 2;
  clear_has_result();
}
inline ::msg_type_def::e_msg_result_def packetl2c_get_table_scene_info_result::result() const {
  return static_cast< ::msg_type_def::e_msg_result_def >(result_);
}
inline void packetl2c_get_table_scene_info_result::set_result(::msg_type_def::e_msg_result_def value) {
  assert(::msg_type_def::e_msg_result_def_IsValid(value));
  set_has_result();
  result_ = value;
}

// optional int32 room_id = 3;
inline bool packetl2c_get_table_scene_info_result::has_room_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetl2c_get_table_scene_info_result::set_has_room_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetl2c_get_table_scene_info_result::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetl2c_get_table_scene_info_result::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 packetl2c_get_table_scene_info_result::room_id() const {
  return room_id_;
}
inline void packetl2c_get_table_scene_info_result::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional int32 table_id = 4;
inline bool packetl2c_get_table_scene_info_result::has_table_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void packetl2c_get_table_scene_info_result::set_has_table_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void packetl2c_get_table_scene_info_result::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void packetl2c_get_table_scene_info_result::clear_table_id() {
  table_id_ = 0;
  clear_has_table_id();
}
inline ::google::protobuf::int32 packetl2c_get_table_scene_info_result::table_id() const {
  return table_id_;
}
inline void packetl2c_get_table_scene_info_result::set_table_id(::google::protobuf::int32 value) {
  set_has_table_id();
  table_id_ = value;
}

// optional .game_zhajinhua_protocols.e_table_state table_state = 5;
inline bool packetl2c_get_table_scene_info_result::has_table_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void packetl2c_get_table_scene_info_result::set_has_table_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void packetl2c_get_table_scene_info_result::clear_has_table_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void packetl2c_get_table_scene_info_result::clear_table_state() {
  table_state_ = 0;
  clear_has_table_state();
}
inline ::game_zhajinhua_protocols::e_table_state packetl2c_get_table_scene_info_result::table_state() const {
  return static_cast< ::game_zhajinhua_protocols::e_table_state >(table_state_);
}
inline void packetl2c_get_table_scene_info_result::set_table_state(::game_zhajinhua_protocols::e_table_state value) {
  assert(::game_zhajinhua_protocols::e_table_state_IsValid(value));
  set_has_table_state();
  table_state_ = value;
}

// optional int32 total_bet = 6;
inline bool packetl2c_get_table_scene_info_result::has_total_bet() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void packetl2c_get_table_scene_info_result::set_has_total_bet() {
  _has_bits_[0] |= 0x00000020u;
}
inline void packetl2c_get_table_scene_info_result::clear_has_total_bet() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void packetl2c_get_table_scene_info_result::clear_total_bet() {
  total_bet_ = 0;
  clear_has_total_bet();
}
inline ::google::protobuf::int32 packetl2c_get_table_scene_info_result::total_bet() const {
  return total_bet_;
}
inline void packetl2c_get_table_scene_info_result::set_total_bet(::google::protobuf::int32 value) {
  set_has_total_bet();
  total_bet_ = value;
}

// optional int32 cur_round = 7;
inline bool packetl2c_get_table_scene_info_result::has_cur_round() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void packetl2c_get_table_scene_info_result::set_has_cur_round() {
  _has_bits_[0] |= 0x00000040u;
}
inline void packetl2c_get_table_scene_info_result::clear_has_cur_round() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void packetl2c_get_table_scene_info_result::clear_cur_round() {
  cur_round_ = 0;
  clear_has_cur_round();
}
inline ::google::protobuf::int32 packetl2c_get_table_scene_info_result::cur_round() const {
  return cur_round_;
}
inline void packetl2c_get_table_scene_info_result::set_cur_round(::google::protobuf::int32 value) {
  set_has_cur_round();
  cur_round_ = value;
}

// optional int32 declare_player = 8 [default = 0];
inline bool packetl2c_get_table_scene_info_result::has_declare_player() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void packetl2c_get_table_scene_info_result::set_has_declare_player() {
  _has_bits_[0] |= 0x00000080u;
}
inline void packetl2c_get_table_scene_info_result::clear_has_declare_player() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void packetl2c_get_table_scene_info_result::clear_declare_player() {
  declare_player_ = 0;
  clear_has_declare_player();
}
inline ::google::protobuf::int32 packetl2c_get_table_scene_info_result::declare_player() const {
  return declare_player_;
}
inline void packetl2c_get_table_scene_info_result::set_declare_player(::google::protobuf::int32 value) {
  set_has_declare_player();
  declare_player_ = value;
}

// optional int32 time = 9;
inline bool packetl2c_get_table_scene_info_result::has_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void packetl2c_get_table_scene_info_result::set_has_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void packetl2c_get_table_scene_info_result::clear_has_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void packetl2c_get_table_scene_info_result::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 packetl2c_get_table_scene_info_result::time() const {
  return time_;
}
inline void packetl2c_get_table_scene_info_result::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// repeated .game_zhajinhua_protocols.msg_player_info player_list = 10;
inline int packetl2c_get_table_scene_info_result::player_list_size() const {
  return player_list_.size();
}
inline void packetl2c_get_table_scene_info_result::clear_player_list() {
  player_list_.Clear();
}
inline const ::game_zhajinhua_protocols::msg_player_info& packetl2c_get_table_scene_info_result::player_list(int index) const {
  return player_list_.Get(index);
}
inline ::game_zhajinhua_protocols::msg_player_info* packetl2c_get_table_scene_info_result::mutable_player_list(int index) {
  return player_list_.Mutable(index);
}
inline ::game_zhajinhua_protocols::msg_player_info* packetl2c_get_table_scene_info_result::add_player_list() {
  return player_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_zhajinhua_protocols::msg_player_info >&
packetl2c_get_table_scene_info_result::player_list() const {
  return player_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_zhajinhua_protocols::msg_player_info >*
packetl2c_get_table_scene_info_result::mutable_player_list() {
  return &player_list_;
}

// repeated .game_zhajinhua_protocols.msg_player_cards player_card_list = 11;
inline int packetl2c_get_table_scene_info_result::player_card_list_size() const {
  return player_card_list_.size();
}
inline void packetl2c_get_table_scene_info_result::clear_player_card_list() {
  player_card_list_.Clear();
}
inline const ::game_zhajinhua_protocols::msg_player_cards& packetl2c_get_table_scene_info_result::player_card_list(int index) const {
  return player_card_list_.Get(index);
}
inline ::game_zhajinhua_protocols::msg_player_cards* packetl2c_get_table_scene_info_result::mutable_player_card_list(int index) {
  return player_card_list_.Mutable(index);
}
inline ::game_zhajinhua_protocols::msg_player_cards* packetl2c_get_table_scene_info_result::add_player_card_list() {
  return player_card_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_zhajinhua_protocols::msg_player_cards >&
packetl2c_get_table_scene_info_result::player_card_list() const {
  return player_card_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_zhajinhua_protocols::msg_player_cards >*
packetl2c_get_table_scene_info_result::mutable_player_card_list() {
  return &player_card_list_;
}

// optional int32 cur_bet = 12;
inline bool packetl2c_get_table_scene_info_result::has_cur_bet() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void packetl2c_get_table_scene_info_result::set_has_cur_bet() {
  _has_bits_[0] |= 0x00000800u;
}
inline void packetl2c_get_table_scene_info_result::clear_has_cur_bet() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void packetl2c_get_table_scene_info_result::clear_cur_bet() {
  cur_bet_ = 0;
  clear_has_cur_bet();
}
inline ::google::protobuf::int32 packetl2c_get_table_scene_info_result::cur_bet() const {
  return cur_bet_;
}
inline void packetl2c_get_table_scene_info_result::set_cur_bet(::google::protobuf::int32 value) {
  set_has_cur_bet();
  cur_bet_ = value;
}

// -------------------------------------------------------------------

// packetc2l_leave_table

// optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_table];
inline bool packetc2l_leave_table::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_leave_table::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_leave_table::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_leave_table::clear_packet_id() {
  packet_id_ = 10003;
  clear_has_packet_id();
}
inline ::game_zhajinhua_protocols::e_server_msg_type packetc2l_leave_table::packet_id() const {
  return static_cast< ::game_zhajinhua_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_leave_table::set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value) {
  assert(::game_zhajinhua_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetl2c_leave_table_result

// optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_table_result];
inline bool packetl2c_leave_table_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_leave_table_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_leave_table_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_leave_table_result::clear_packet_id() {
  packet_id_ = 15003;
  clear_has_packet_id();
}
inline ::game_zhajinhua_protocols::e_server_msg_type packetl2c_leave_table_result::packet_id() const {
  return static_cast< ::game_zhajinhua_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_leave_table_result::set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value) {
  assert(::game_zhajinhua_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
inline bool packetl2c_leave_table_result::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_leave_table_result::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_leave_table_result::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_leave_table_result::clear_result() {
  result_ = 2;
  clear_has_result();
}
inline ::msg_type_def::e_msg_result_def packetl2c_leave_table_result::result() const {
  return static_cast< ::msg_type_def::e_msg_result_def >(result_);
}
inline void packetl2c_leave_table_result::set_result(::msg_type_def::e_msg_result_def value) {
  assert(::msg_type_def::e_msg_result_def_IsValid(value));
  set_has_result();
  result_ = value;
}

// optional int32 player_gold = 3;
inline bool packetl2c_leave_table_result::has_player_gold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetl2c_leave_table_result::set_has_player_gold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetl2c_leave_table_result::clear_has_player_gold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetl2c_leave_table_result::clear_player_gold() {
  player_gold_ = 0;
  clear_has_player_gold();
}
inline ::google::protobuf::int32 packetl2c_leave_table_result::player_gold() const {
  return player_gold_;
}
inline void packetl2c_leave_table_result::set_player_gold(::google::protobuf::int32 value) {
  set_has_player_gold();
  player_gold_ = value;
}

// optional int32 type = 4 [default = 1];
inline bool packetl2c_leave_table_result::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void packetl2c_leave_table_result::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void packetl2c_leave_table_result::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void packetl2c_leave_table_result::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::google::protobuf::int32 packetl2c_leave_table_result::type() const {
  return type_;
}
inline void packetl2c_leave_table_result::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// packetl2c_bc_leave_table

// optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_leave_table];
inline bool packetl2c_bc_leave_table::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_bc_leave_table::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_bc_leave_table::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_bc_leave_table::clear_packet_id() {
  packet_id_ = 15015;
  clear_has_packet_id();
}
inline ::game_zhajinhua_protocols::e_server_msg_type packetl2c_bc_leave_table::packet_id() const {
  return static_cast< ::game_zhajinhua_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_bc_leave_table::set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value) {
  assert(::game_zhajinhua_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 player_id = 2;
inline bool packetl2c_bc_leave_table::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_bc_leave_table::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_bc_leave_table::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_bc_leave_table::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 packetl2c_bc_leave_table::player_id() const {
  return player_id_;
}
inline void packetl2c_bc_leave_table::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// -------------------------------------------------------------------

// packetl2c_game_start

// optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_game_start];
inline bool packetl2c_game_start::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_game_start::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_game_start::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_game_start::clear_packet_id() {
  packet_id_ = 15006;
  clear_has_packet_id();
}
inline ::game_zhajinhua_protocols::e_server_msg_type packetl2c_game_start::packet_id() const {
  return static_cast< ::game_zhajinhua_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_game_start::set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value) {
  assert(::game_zhajinhua_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetc2l_set_ready

// optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_set_ready];
inline bool packetc2l_set_ready::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_set_ready::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_set_ready::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_set_ready::clear_packet_id() {
  packet_id_ = 10005;
  clear_has_packet_id();
}
inline ::game_zhajinhua_protocols::e_server_msg_type packetc2l_set_ready::packet_id() const {
  return static_cast< ::game_zhajinhua_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_set_ready::set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value) {
  assert(::game_zhajinhua_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetl2c_set_ready_result

// optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_set_ready_result];
inline bool packetl2c_set_ready_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_set_ready_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_set_ready_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_set_ready_result::clear_packet_id() {
  packet_id_ = 15005;
  clear_has_packet_id();
}
inline ::game_zhajinhua_protocols::e_server_msg_type packetl2c_set_ready_result::packet_id() const {
  return static_cast< ::game_zhajinhua_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_set_ready_result::set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value) {
  assert(::game_zhajinhua_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
inline bool packetl2c_set_ready_result::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_set_ready_result::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_set_ready_result::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_set_ready_result::clear_result() {
  result_ = 2;
  clear_has_result();
}
inline ::msg_type_def::e_msg_result_def packetl2c_set_ready_result::result() const {
  return static_cast< ::msg_type_def::e_msg_result_def >(result_);
}
inline void packetl2c_set_ready_result::set_result(::msg_type_def::e_msg_result_def value) {
  assert(::msg_type_def::e_msg_result_def_IsValid(value));
  set_has_result();
  result_ = value;
}

// optional int32 player_id = 3;
inline bool packetl2c_set_ready_result::has_player_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetl2c_set_ready_result::set_has_player_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetl2c_set_ready_result::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetl2c_set_ready_result::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 packetl2c_set_ready_result::player_id() const {
  return player_id_;
}
inline void packetl2c_set_ready_result::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// -------------------------------------------------------------------

// packetc2l_player_declare

// optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_player_declare];
inline bool packetc2l_player_declare::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_player_declare::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_player_declare::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_player_declare::clear_packet_id() {
  packet_id_ = 10006;
  clear_has_packet_id();
}
inline ::game_zhajinhua_protocols::e_server_msg_type packetc2l_player_declare::packet_id() const {
  return static_cast< ::game_zhajinhua_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_player_declare::set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value) {
  assert(::game_zhajinhua_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional .game_zhajinhua_protocols.e_player_declare declare = 2;
inline bool packetc2l_player_declare::has_declare() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetc2l_player_declare::set_has_declare() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetc2l_player_declare::clear_has_declare() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetc2l_player_declare::clear_declare() {
  declare_ = 0;
  clear_has_declare();
}
inline ::game_zhajinhua_protocols::e_player_declare packetc2l_player_declare::declare() const {
  return static_cast< ::game_zhajinhua_protocols::e_player_declare >(declare_);
}
inline void packetc2l_player_declare::set_declare(::game_zhajinhua_protocols::e_player_declare value) {
  assert(::game_zhajinhua_protocols::e_player_declare_IsValid(value));
  set_has_declare();
  declare_ = value;
}

// optional int32 chips = 3;
inline bool packetc2l_player_declare::has_chips() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetc2l_player_declare::set_has_chips() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetc2l_player_declare::clear_has_chips() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetc2l_player_declare::clear_chips() {
  chips_ = 0;
  clear_has_chips();
}
inline ::google::protobuf::int32 packetc2l_player_declare::chips() const {
  return chips_;
}
inline void packetc2l_player_declare::set_chips(::google::protobuf::int32 value) {
  set_has_chips();
  chips_ = value;
}

// -------------------------------------------------------------------

// packetl2c_player_declare_result

// optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_player_declare_result];
inline bool packetl2c_player_declare_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_player_declare_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_player_declare_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_player_declare_result::clear_packet_id() {
  packet_id_ = 15007;
  clear_has_packet_id();
}
inline ::game_zhajinhua_protocols::e_server_msg_type packetl2c_player_declare_result::packet_id() const {
  return static_cast< ::game_zhajinhua_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_player_declare_result::set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value) {
  assert(::game_zhajinhua_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
inline bool packetl2c_player_declare_result::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_player_declare_result::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_player_declare_result::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_player_declare_result::clear_result() {
  result_ = 2;
  clear_has_result();
}
inline ::msg_type_def::e_msg_result_def packetl2c_player_declare_result::result() const {
  return static_cast< ::msg_type_def::e_msg_result_def >(result_);
}
inline void packetl2c_player_declare_result::set_result(::msg_type_def::e_msg_result_def value) {
  assert(::msg_type_def::e_msg_result_def_IsValid(value));
  set_has_result();
  result_ = value;
}

// optional .game_zhajinhua_protocols.e_player_declare declare = 3;
inline bool packetl2c_player_declare_result::has_declare() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetl2c_player_declare_result::set_has_declare() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetl2c_player_declare_result::clear_has_declare() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetl2c_player_declare_result::clear_declare() {
  declare_ = 0;
  clear_has_declare();
}
inline ::game_zhajinhua_protocols::e_player_declare packetl2c_player_declare_result::declare() const {
  return static_cast< ::game_zhajinhua_protocols::e_player_declare >(declare_);
}
inline void packetl2c_player_declare_result::set_declare(::game_zhajinhua_protocols::e_player_declare value) {
  assert(::game_zhajinhua_protocols::e_player_declare_IsValid(value));
  set_has_declare();
  declare_ = value;
}

// optional int32 chips = 4;
inline bool packetl2c_player_declare_result::has_chips() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void packetl2c_player_declare_result::set_has_chips() {
  _has_bits_[0] |= 0x00000008u;
}
inline void packetl2c_player_declare_result::clear_has_chips() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void packetl2c_player_declare_result::clear_chips() {
  chips_ = 0;
  clear_has_chips();
}
inline ::google::protobuf::int32 packetl2c_player_declare_result::chips() const {
  return chips_;
}
inline void packetl2c_player_declare_result::set_chips(::google::protobuf::int32 value) {
  set_has_chips();
  chips_ = value;
}

// optional int32 player_id = 5;
inline bool packetl2c_player_declare_result::has_player_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void packetl2c_player_declare_result::set_has_player_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void packetl2c_player_declare_result::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void packetl2c_player_declare_result::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 packetl2c_player_declare_result::player_id() const {
  return player_id_;
}
inline void packetl2c_player_declare_result::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// repeated int32 cards = 6;
inline int packetl2c_player_declare_result::cards_size() const {
  return cards_.size();
}
inline void packetl2c_player_declare_result::clear_cards() {
  cards_.Clear();
}
inline ::google::protobuf::int32 packetl2c_player_declare_result::cards(int index) const {
  return cards_.Get(index);
}
inline void packetl2c_player_declare_result::set_cards(int index, ::google::protobuf::int32 value) {
  cards_.Set(index, value);
}
inline void packetl2c_player_declare_result::add_cards(::google::protobuf::int32 value) {
  cards_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
packetl2c_player_declare_result::cards() const {
  return cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
packetl2c_player_declare_result::mutable_cards() {
  return &cards_;
}

// optional int32 card_type = 7;
inline bool packetl2c_player_declare_result::has_card_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void packetl2c_player_declare_result::set_has_card_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void packetl2c_player_declare_result::clear_has_card_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void packetl2c_player_declare_result::clear_card_type() {
  card_type_ = 0;
  clear_has_card_type();
}
inline ::google::protobuf::int32 packetl2c_player_declare_result::card_type() const {
  return card_type_;
}
inline void packetl2c_player_declare_result::set_card_type(::google::protobuf::int32 value) {
  set_has_card_type();
  card_type_ = value;
}

// -------------------------------------------------------------------

// packetl2c_notify_declare

// optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_12c_notify_declare];
inline bool packetl2c_notify_declare::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_notify_declare::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_notify_declare::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_notify_declare::clear_packet_id() {
  packet_id_ = 15012;
  clear_has_packet_id();
}
inline ::game_zhajinhua_protocols::e_server_msg_type packetl2c_notify_declare::packet_id() const {
  return static_cast< ::game_zhajinhua_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_notify_declare::set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value) {
  assert(::game_zhajinhua_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 player_id = 2;
inline bool packetl2c_notify_declare::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_notify_declare::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_notify_declare::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_notify_declare::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 packetl2c_notify_declare::player_id() const {
  return player_id_;
}
inline void packetl2c_notify_declare::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional int32 cur_round = 3;
inline bool packetl2c_notify_declare::has_cur_round() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetl2c_notify_declare::set_has_cur_round() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetl2c_notify_declare::clear_has_cur_round() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetl2c_notify_declare::clear_cur_round() {
  cur_round_ = 0;
  clear_has_cur_round();
}
inline ::google::protobuf::int32 packetl2c_notify_declare::cur_round() const {
  return cur_round_;
}
inline void packetl2c_notify_declare::set_cur_round(::google::protobuf::int32 value) {
  set_has_cur_round();
  cur_round_ = value;
}

// -------------------------------------------------------------------

// packetc2l_compare_cards

// optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_compare_cards];
inline bool packetc2l_compare_cards::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_compare_cards::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_compare_cards::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_compare_cards::clear_packet_id() {
  packet_id_ = 10008;
  clear_has_packet_id();
}
inline ::game_zhajinhua_protocols::e_server_msg_type packetc2l_compare_cards::packet_id() const {
  return static_cast< ::game_zhajinhua_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_compare_cards::set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value) {
  assert(::game_zhajinhua_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 player_id = 2;
inline bool packetc2l_compare_cards::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetc2l_compare_cards::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetc2l_compare_cards::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetc2l_compare_cards::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 packetc2l_compare_cards::player_id() const {
  return player_id_;
}
inline void packetc2l_compare_cards::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// -------------------------------------------------------------------

// packetl2c_compare_cards_result

// optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_compare_cards_result];
inline bool packetl2c_compare_cards_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_compare_cards_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_compare_cards_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_compare_cards_result::clear_packet_id() {
  packet_id_ = 15009;
  clear_has_packet_id();
}
inline ::game_zhajinhua_protocols::e_server_msg_type packetl2c_compare_cards_result::packet_id() const {
  return static_cast< ::game_zhajinhua_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_compare_cards_result::set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value) {
  assert(::game_zhajinhua_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
inline bool packetl2c_compare_cards_result::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_compare_cards_result::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_compare_cards_result::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_compare_cards_result::clear_result() {
  result_ = 2;
  clear_has_result();
}
inline ::msg_type_def::e_msg_result_def packetl2c_compare_cards_result::result() const {
  return static_cast< ::msg_type_def::e_msg_result_def >(result_);
}
inline void packetl2c_compare_cards_result::set_result(::msg_type_def::e_msg_result_def value) {
  assert(::msg_type_def::e_msg_result_def_IsValid(value));
  set_has_result();
  result_ = value;
}

// optional int32 chips = 3;
inline bool packetl2c_compare_cards_result::has_chips() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetl2c_compare_cards_result::set_has_chips() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetl2c_compare_cards_result::clear_has_chips() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetl2c_compare_cards_result::clear_chips() {
  chips_ = 0;
  clear_has_chips();
}
inline ::google::protobuf::int32 packetl2c_compare_cards_result::chips() const {
  return chips_;
}
inline void packetl2c_compare_cards_result::set_chips(::google::protobuf::int32 value) {
  set_has_chips();
  chips_ = value;
}

// optional int32 player_id = 4;
inline bool packetl2c_compare_cards_result::has_player_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void packetl2c_compare_cards_result::set_has_player_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void packetl2c_compare_cards_result::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void packetl2c_compare_cards_result::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 packetl2c_compare_cards_result::player_id() const {
  return player_id_;
}
inline void packetl2c_compare_cards_result::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional int32 win_player = 5;
inline bool packetl2c_compare_cards_result::has_win_player() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void packetl2c_compare_cards_result::set_has_win_player() {
  _has_bits_[0] |= 0x00000010u;
}
inline void packetl2c_compare_cards_result::clear_has_win_player() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void packetl2c_compare_cards_result::clear_win_player() {
  win_player_ = 0;
  clear_has_win_player();
}
inline ::google::protobuf::int32 packetl2c_compare_cards_result::win_player() const {
  return win_player_;
}
inline void packetl2c_compare_cards_result::set_win_player(::google::protobuf::int32 value) {
  set_has_win_player();
  win_player_ = value;
}

// repeated .game_zhajinhua_protocols.msg_compare_cards compare_result = 6;
inline int packetl2c_compare_cards_result::compare_result_size() const {
  return compare_result_.size();
}
inline void packetl2c_compare_cards_result::clear_compare_result() {
  compare_result_.Clear();
}
inline const ::game_zhajinhua_protocols::msg_compare_cards& packetl2c_compare_cards_result::compare_result(int index) const {
  return compare_result_.Get(index);
}
inline ::game_zhajinhua_protocols::msg_compare_cards* packetl2c_compare_cards_result::mutable_compare_result(int index) {
  return compare_result_.Mutable(index);
}
inline ::game_zhajinhua_protocols::msg_compare_cards* packetl2c_compare_cards_result::add_compare_result() {
  return compare_result_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_zhajinhua_protocols::msg_compare_cards >&
packetl2c_compare_cards_result::compare_result() const {
  return compare_result_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_zhajinhua_protocols::msg_compare_cards >*
packetl2c_compare_cards_result::mutable_compare_result() {
  return &compare_result_;
}

// -------------------------------------------------------------------

// packetl2c_game_settlement

// optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_game_settlement];
inline bool packetl2c_game_settlement::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_game_settlement::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_game_settlement::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_game_settlement::clear_packet_id() {
  packet_id_ = 15010;
  clear_has_packet_id();
}
inline ::game_zhajinhua_protocols::e_server_msg_type packetl2c_game_settlement::packet_id() const {
  return static_cast< ::game_zhajinhua_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_game_settlement::set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value) {
  assert(::game_zhajinhua_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// repeated .game_zhajinhua_protocols.msg_player_settlement player_settlement_info = 2;
inline int packetl2c_game_settlement::player_settlement_info_size() const {
  return player_settlement_info_.size();
}
inline void packetl2c_game_settlement::clear_player_settlement_info() {
  player_settlement_info_.Clear();
}
inline const ::game_zhajinhua_protocols::msg_player_settlement& packetl2c_game_settlement::player_settlement_info(int index) const {
  return player_settlement_info_.Get(index);
}
inline ::game_zhajinhua_protocols::msg_player_settlement* packetl2c_game_settlement::mutable_player_settlement_info(int index) {
  return player_settlement_info_.Mutable(index);
}
inline ::game_zhajinhua_protocols::msg_player_settlement* packetl2c_game_settlement::add_player_settlement_info() {
  return player_settlement_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_zhajinhua_protocols::msg_player_settlement >&
packetl2c_game_settlement::player_settlement_info() const {
  return player_settlement_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_zhajinhua_protocols::msg_player_settlement >*
packetl2c_game_settlement::mutable_player_settlement_info() {
  return &player_settlement_info_;
}

// -------------------------------------------------------------------

// packetc2l_change_table

// optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_change_table];
inline bool packetc2l_change_table::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_change_table::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_change_table::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_change_table::clear_packet_id() {
  packet_id_ = 10010;
  clear_has_packet_id();
}
inline ::game_zhajinhua_protocols::e_server_msg_type packetc2l_change_table::packet_id() const {
  return static_cast< ::game_zhajinhua_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_change_table::set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value) {
  assert(::game_zhajinhua_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetl2c_change_table_result

// optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_change_table_result];
inline bool packetl2c_change_table_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_change_table_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_change_table_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_change_table_result::clear_packet_id() {
  packet_id_ = 15014;
  clear_has_packet_id();
}
inline ::game_zhajinhua_protocols::e_server_msg_type packetl2c_change_table_result::packet_id() const {
  return static_cast< ::game_zhajinhua_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_change_table_result::set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value) {
  assert(::game_zhajinhua_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
inline bool packetl2c_change_table_result::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_change_table_result::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_change_table_result::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_change_table_result::clear_result() {
  result_ = 2;
  clear_has_result();
}
inline ::msg_type_def::e_msg_result_def packetl2c_change_table_result::result() const {
  return static_cast< ::msg_type_def::e_msg_result_def >(result_);
}
inline void packetl2c_change_table_result::set_result(::msg_type_def::e_msg_result_def value) {
  assert(::msg_type_def::e_msg_result_def_IsValid(value));
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// packetc2l_show_cards

// optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_show_cards];
inline bool packetc2l_show_cards::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_show_cards::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_show_cards::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_show_cards::clear_packet_id() {
  packet_id_ = 10011;
  clear_has_packet_id();
}
inline ::game_zhajinhua_protocols::e_server_msg_type packetc2l_show_cards::packet_id() const {
  return static_cast< ::game_zhajinhua_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_show_cards::set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value) {
  assert(::game_zhajinhua_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetl2c_notify_show_cards

// optional .game_zhajinhua_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_notify_show_cards];
inline bool packetl2c_notify_show_cards::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_notify_show_cards::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_notify_show_cards::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_notify_show_cards::clear_packet_id() {
  packet_id_ = 15016;
  clear_has_packet_id();
}
inline ::game_zhajinhua_protocols::e_server_msg_type packetl2c_notify_show_cards::packet_id() const {
  return static_cast< ::game_zhajinhua_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_notify_show_cards::set_packet_id(::game_zhajinhua_protocols::e_server_msg_type value) {
  assert(::game_zhajinhua_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
inline bool packetl2c_notify_show_cards::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_notify_show_cards::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_notify_show_cards::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_notify_show_cards::clear_result() {
  result_ = 2;
  clear_has_result();
}
inline ::msg_type_def::e_msg_result_def packetl2c_notify_show_cards::result() const {
  return static_cast< ::msg_type_def::e_msg_result_def >(result_);
}
inline void packetl2c_notify_show_cards::set_result(::msg_type_def::e_msg_result_def value) {
  assert(::msg_type_def::e_msg_result_def_IsValid(value));
  set_has_result();
  result_ = value;
}

// optional int32 player_id = 3;
inline bool packetl2c_notify_show_cards::has_player_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetl2c_notify_show_cards::set_has_player_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetl2c_notify_show_cards::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetl2c_notify_show_cards::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 packetl2c_notify_show_cards::player_id() const {
  return player_id_;
}
inline void packetl2c_notify_show_cards::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// repeated int32 cards = 4;
inline int packetl2c_notify_show_cards::cards_size() const {
  return cards_.size();
}
inline void packetl2c_notify_show_cards::clear_cards() {
  cards_.Clear();
}
inline ::google::protobuf::int32 packetl2c_notify_show_cards::cards(int index) const {
  return cards_.Get(index);
}
inline void packetl2c_notify_show_cards::set_cards(int index, ::google::protobuf::int32 value) {
  cards_.Set(index, value);
}
inline void packetl2c_notify_show_cards::add_cards(::google::protobuf::int32 value) {
  cards_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
packetl2c_notify_show_cards::cards() const {
  return cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
packetl2c_notify_show_cards::mutable_cards() {
  return &cards_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace game_zhajinhua_protocols

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_game_5fzhajinhua_5fprotocol_2eproto__INCLUDED
