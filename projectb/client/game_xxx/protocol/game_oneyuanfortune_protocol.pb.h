// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_oneyuanfortune_protocol.proto

#ifndef PROTOBUF_game_5foneyuanfortune_5fprotocol_2eproto__INCLUDED
#define PROTOBUF_game_5foneyuanfortune_5fprotocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "game_oneyuanfortune_def.pb.h"
#include "msg_type_def.pb.h"
// @@protoc_insertion_point(includes)

namespace game_oneyuanfortune_protocols {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_game_5foneyuanfortune_5fprotocol_2eproto();
void protobuf_AssignDesc_game_5foneyuanfortune_5fprotocol_2eproto();
void protobuf_ShutdownFile_game_5foneyuanfortune_5fprotocol_2eproto();

class msg_room_info;
class msg_bet_info;
class msg_bet_info2;
class packetc2l_get_room_info;
class packetl2c_get_room_info_result;
class packetc2l_enter_room;
class packetl2c_enter_room_result;
class history_info;
class packetc2l_get_room_scene_info;
class packetl2c_get_room_scene_info_result;
class packetc2l_leave_room;
class packetl2c_leave_room_result;
class packetc2l_add_bet;
class packetl2c_add_bet_result;
class player_info;
class packetc2l_ask_for_player_list;
class packetl2c_ask_for_player_list_result;
class packetc2l_ask_for_history_list;
class packetl2c_ask_for_history_list_result;
class packetl2c_bc_begin_bet;
class packetl2c_timing_starts;
class packetl2c_bc_begin_award;
class packetl2c_bc_bet_info;
class packetc2l_check_state;
class packetl2c_check_state_result;
class packetc2l_gm;
class packetc2l_game_control;
class packetl2c_game_control;
class packetl2c_bc_debuginfo;
class packetl2c_notice_all_bet_info;

// ===================================================================

class msg_room_info : public ::google::protobuf::Message {
 public:
  msg_room_info();
  virtual ~msg_room_info();

  msg_room_info(const msg_room_info& from);

  inline msg_room_info& operator=(const msg_room_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_room_info& default_instance();

  void Swap(msg_room_info* other);

  // implements Message ----------------------------------------------

  msg_room_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_room_info& from);
  void MergeFrom(const msg_room_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 roomid = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  inline ::google::protobuf::int32 roomid() const;
  inline void set_roomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_oneyuanfortune_protocols.msg_room_info)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roomid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5foneyuanfortune_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static msg_room_info* default_instance_;
};
// -------------------------------------------------------------------

class msg_bet_info : public ::google::protobuf::Message {
 public:
  msg_bet_info();
  virtual ~msg_bet_info();

  msg_bet_info(const msg_bet_info& from);

  inline msg_bet_info& operator=(const msg_bet_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_bet_info& default_instance();

  void Swap(msg_bet_info* other);

  // implements Message ----------------------------------------------

  msg_bet_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_bet_info& from);
  void MergeFrom(const msg_bet_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // optional int64 bet_gold = 2;
  inline bool has_bet_gold() const;
  inline void clear_bet_gold();
  static const int kBetGoldFieldNumber = 2;
  inline ::google::protobuf::int64 bet_gold() const;
  inline void set_bet_gold(::google::protobuf::int64 value);

  // optional int32 rate = 3;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 3;
  inline ::google::protobuf::int32 rate() const;
  inline void set_rate(::google::protobuf::int32 value);

  // optional int32 bet_count = 4;
  inline bool has_bet_count() const;
  inline void clear_bet_count();
  static const int kBetCountFieldNumber = 4;
  inline ::google::protobuf::int32 bet_count() const;
  inline void set_bet_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_oneyuanfortune_protocols.msg_bet_info)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_bet_gold();
  inline void clear_has_bet_gold();
  inline void set_has_rate();
  inline void clear_has_rate();
  inline void set_has_bet_count();
  inline void clear_has_bet_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 bet_gold_;
  ::google::protobuf::int32 player_id_;
  ::google::protobuf::int32 rate_;
  ::google::protobuf::int32 bet_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5foneyuanfortune_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static msg_bet_info* default_instance_;
};
// -------------------------------------------------------------------

class msg_bet_info2 : public ::google::protobuf::Message {
 public:
  msg_bet_info2();
  virtual ~msg_bet_info2();

  msg_bet_info2(const msg_bet_info2& from);

  inline msg_bet_info2& operator=(const msg_bet_info2& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_bet_info2& default_instance();

  void Swap(msg_bet_info2* other);

  // implements Message ----------------------------------------------

  msg_bet_info2* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_bet_info2& from);
  void MergeFrom(const msg_bet_info2& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // optional int64 bet_gold = 2;
  inline bool has_bet_gold() const;
  inline void clear_bet_gold();
  static const int kBetGoldFieldNumber = 2;
  inline ::google::protobuf::int64 bet_gold() const;
  inline void set_bet_gold(::google::protobuf::int64 value);

  // optional int32 rate = 3;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 3;
  inline ::google::protobuf::int32 rate() const;
  inline void set_rate(::google::protobuf::int32 value);

  // optional int32 bet_count = 4;
  inline bool has_bet_count() const;
  inline void clear_bet_count();
  static const int kBetCountFieldNumber = 4;
  inline ::google::protobuf::int32 bet_count() const;
  inline void set_bet_count(::google::protobuf::int32 value);

  // optional int64 gold = 5;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 5;
  inline ::google::protobuf::int64 gold() const;
  inline void set_gold(::google::protobuf::int64 value);

  // optional int32 table_id = 6;
  inline bool has_table_id() const;
  inline void clear_table_id();
  static const int kTableIdFieldNumber = 6;
  inline ::google::protobuf::int32 table_id() const;
  inline void set_table_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_oneyuanfortune_protocols.msg_bet_info2)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_bet_gold();
  inline void clear_has_bet_gold();
  inline void set_has_rate();
  inline void clear_has_rate();
  inline void set_has_bet_count();
  inline void clear_has_bet_count();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_table_id();
  inline void clear_has_table_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 bet_gold_;
  ::google::protobuf::int32 player_id_;
  ::google::protobuf::int32 rate_;
  ::google::protobuf::int64 gold_;
  ::google::protobuf::int32 bet_count_;
  ::google::protobuf::int32 table_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5foneyuanfortune_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static msg_bet_info2* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_get_room_info : public ::google::protobuf::Message {
 public:
  packetc2l_get_room_info();
  virtual ~packetc2l_get_room_info();

  packetc2l_get_room_info(const packetc2l_get_room_info& from);

  inline packetc2l_get_room_info& operator=(const packetc2l_get_room_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_get_room_info& default_instance();

  void Swap(packetc2l_get_room_info* other);

  // implements Message ----------------------------------------------

  packetc2l_get_room_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_get_room_info& from);
  void MergeFrom(const packetc2l_get_room_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_room_info];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_oneyuanfortune_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:game_oneyuanfortune_protocols.packetc2l_get_room_info)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5foneyuanfortune_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_get_room_info* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_get_room_info_result : public ::google::protobuf::Message {
 public:
  packetl2c_get_room_info_result();
  virtual ~packetl2c_get_room_info_result();

  packetl2c_get_room_info_result(const packetl2c_get_room_info_result& from);

  inline packetl2c_get_room_info_result& operator=(const packetl2c_get_room_info_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_get_room_info_result& default_instance();

  void Swap(packetl2c_get_room_info_result* other);

  // implements Message ----------------------------------------------

  packetl2c_get_room_info_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_get_room_info_result& from);
  void MergeFrom(const packetl2c_get_room_info_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_room_info_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_oneyuanfortune_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value);

  // repeated .game_oneyuanfortune_protocols.msg_room_info room_list = 2;
  inline int room_list_size() const;
  inline void clear_room_list();
  static const int kRoomListFieldNumber = 2;
  inline const ::game_oneyuanfortune_protocols::msg_room_info& room_list(int index) const;
  inline ::game_oneyuanfortune_protocols::msg_room_info* mutable_room_list(int index);
  inline ::game_oneyuanfortune_protocols::msg_room_info* add_room_list();
  inline const ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::msg_room_info >&
      room_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::msg_room_info >*
      mutable_room_list();

  // @@protoc_insertion_point(class_scope:game_oneyuanfortune_protocols.packetl2c_get_room_info_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::msg_room_info > room_list_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5foneyuanfortune_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_get_room_info_result* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_enter_room : public ::google::protobuf::Message {
 public:
  packetc2l_enter_room();
  virtual ~packetc2l_enter_room();

  packetc2l_enter_room(const packetc2l_enter_room& from);

  inline packetc2l_enter_room& operator=(const packetc2l_enter_room& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_enter_room& default_instance();

  void Swap(packetc2l_enter_room* other);

  // implements Message ----------------------------------------------

  packetc2l_enter_room* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_enter_room& from);
  void MergeFrom(const packetc2l_enter_room& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_enter_room];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_oneyuanfortune_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value);

  // optional int32 roomid = 2;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  inline ::google::protobuf::int32 roomid() const;
  inline void set_roomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_oneyuanfortune_protocols.packetc2l_enter_room)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 roomid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5foneyuanfortune_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_enter_room* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_enter_room_result : public ::google::protobuf::Message {
 public:
  packetl2c_enter_room_result();
  virtual ~packetl2c_enter_room_result();

  packetl2c_enter_room_result(const packetl2c_enter_room_result& from);

  inline packetl2c_enter_room_result& operator=(const packetl2c_enter_room_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_enter_room_result& default_instance();

  void Swap(packetl2c_enter_room_result* other);

  // implements Message ----------------------------------------------

  packetl2c_enter_room_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_enter_room_result& from);
  void MergeFrom(const packetl2c_enter_room_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_enter_room_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_oneyuanfortune_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value);

  // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::msg_type_def::e_msg_result_def result() const;
  inline void set_result(::msg_type_def::e_msg_result_def value);

  // @@protoc_insertion_point(class_scope:game_oneyuanfortune_protocols.packetl2c_enter_room_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  int result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5foneyuanfortune_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_enter_room_result* default_instance_;
};
// -------------------------------------------------------------------

class history_info : public ::google::protobuf::Message {
 public:
  history_info();
  virtual ~history_info();

  history_info(const history_info& from);

  inline history_info& operator=(const history_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const history_info& default_instance();

  void Swap(history_info* other);

  // implements Message ----------------------------------------------

  history_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const history_info& from);
  void MergeFrom(const history_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string nickname = 1;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 1;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional int32 rate = 2;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 2;
  inline ::google::protobuf::int32 rate() const;
  inline void set_rate(::google::protobuf::int32 value);

  // optional int64 gold = 3;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 3;
  inline ::google::protobuf::int64 gold() const;
  inline void set_gold(::google::protobuf::int64 value);

  // optional int32 viplevel = 4;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kViplevelFieldNumber = 4;
  inline ::google::protobuf::int32 viplevel() const;
  inline void set_viplevel(::google::protobuf::int32 value);

  // optional int32 player_id = 5;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 5;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // optional string player_head = 6;
  inline bool has_player_head() const;
  inline void clear_player_head();
  static const int kPlayerHeadFieldNumber = 6;
  inline const ::std::string& player_head() const;
  inline void set_player_head(const ::std::string& value);
  inline void set_player_head(const char* value);
  inline void set_player_head(const char* value, size_t size);
  inline ::std::string* mutable_player_head();
  inline ::std::string* release_player_head();
  inline void set_allocated_player_head(::std::string* player_head);

  // optional int32 player_head_frame = 7;
  inline bool has_player_head_frame() const;
  inline void clear_player_head_frame();
  static const int kPlayerHeadFrameFieldNumber = 7;
  inline ::google::protobuf::int32 player_head_frame() const;
  inline void set_player_head_frame(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_oneyuanfortune_protocols.history_info)
 private:
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_rate();
  inline void clear_has_rate();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_player_head();
  inline void clear_has_player_head();
  inline void set_has_player_head_frame();
  inline void clear_has_player_head_frame();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* nickname_;
  ::google::protobuf::int64 gold_;
  ::google::protobuf::int32 rate_;
  ::google::protobuf::int32 viplevel_;
  ::std::string* player_head_;
  ::google::protobuf::int32 player_id_;
  ::google::protobuf::int32 player_head_frame_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5foneyuanfortune_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static history_info* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_get_room_scene_info : public ::google::protobuf::Message {
 public:
  packetc2l_get_room_scene_info();
  virtual ~packetc2l_get_room_scene_info();

  packetc2l_get_room_scene_info(const packetc2l_get_room_scene_info& from);

  inline packetc2l_get_room_scene_info& operator=(const packetc2l_get_room_scene_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_get_room_scene_info& default_instance();

  void Swap(packetc2l_get_room_scene_info* other);

  // implements Message ----------------------------------------------

  packetc2l_get_room_scene_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_get_room_scene_info& from);
  void MergeFrom(const packetc2l_get_room_scene_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_room_scene_info];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_oneyuanfortune_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:game_oneyuanfortune_protocols.packetc2l_get_room_scene_info)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5foneyuanfortune_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_get_room_scene_info* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_get_room_scene_info_result : public ::google::protobuf::Message {
 public:
  packetl2c_get_room_scene_info_result();
  virtual ~packetl2c_get_room_scene_info_result();

  packetl2c_get_room_scene_info_result(const packetl2c_get_room_scene_info_result& from);

  inline packetl2c_get_room_scene_info_result& operator=(const packetl2c_get_room_scene_info_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_get_room_scene_info_result& default_instance();

  void Swap(packetl2c_get_room_scene_info_result* other);

  // implements Message ----------------------------------------------

  packetl2c_get_room_scene_info_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_get_room_scene_info_result& from);
  void MergeFrom(const packetl2c_get_room_scene_info_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_room_scene_info];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_oneyuanfortune_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value);

  // optional int32 room_id = 2;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  inline ::google::protobuf::int32 room_id() const;
  inline void set_room_id(::google::protobuf::int32 value);

  // optional .game_oneyuanfortune_protocols.e_game_state room_state = 3;
  inline bool has_room_state() const;
  inline void clear_room_state();
  static const int kRoomStateFieldNumber = 3;
  inline ::game_oneyuanfortune_protocols::e_game_state room_state() const;
  inline void set_room_state(::game_oneyuanfortune_protocols::e_game_state value);

  // optional int32 cd_time = 4;
  inline bool has_cd_time() const;
  inline void clear_cd_time();
  static const int kCdTimeFieldNumber = 4;
  inline ::google::protobuf::int32 cd_time() const;
  inline void set_cd_time(::google::protobuf::int32 value);

  // repeated .game_oneyuanfortune_protocols.msg_bet_info bet_info_list = 5;
  inline int bet_info_list_size() const;
  inline void clear_bet_info_list();
  static const int kBetInfoListFieldNumber = 5;
  inline const ::game_oneyuanfortune_protocols::msg_bet_info& bet_info_list(int index) const;
  inline ::game_oneyuanfortune_protocols::msg_bet_info* mutable_bet_info_list(int index);
  inline ::game_oneyuanfortune_protocols::msg_bet_info* add_bet_info_list();
  inline const ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::msg_bet_info >&
      bet_info_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::msg_bet_info >*
      mutable_bet_info_list();

  // optional int32 remain_bet_count = 6;
  inline bool has_remain_bet_count() const;
  inline void clear_remain_bet_count();
  static const int kRemainBetCountFieldNumber = 6;
  inline ::google::protobuf::int32 remain_bet_count() const;
  inline void set_remain_bet_count(::google::protobuf::int32 value);

  // optional int32 self_remain_count = 7;
  inline bool has_self_remain_count() const;
  inline void clear_self_remain_count();
  static const int kSelfRemainCountFieldNumber = 7;
  inline ::google::protobuf::int32 self_remain_count() const;
  inline void set_self_remain_count(::google::protobuf::int32 value);

  // repeated .game_oneyuanfortune_protocols.player_info player_list = 8;
  inline int player_list_size() const;
  inline void clear_player_list();
  static const int kPlayerListFieldNumber = 8;
  inline const ::game_oneyuanfortune_protocols::player_info& player_list(int index) const;
  inline ::game_oneyuanfortune_protocols::player_info* mutable_player_list(int index);
  inline ::game_oneyuanfortune_protocols::player_info* add_player_list();
  inline const ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::player_info >&
      player_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::player_info >*
      mutable_player_list();

  // optional bool timing = 9 [default = false];
  inline bool has_timing() const;
  inline void clear_timing();
  static const int kTimingFieldNumber = 9;
  inline bool timing() const;
  inline void set_timing(bool value);

  // @@protoc_insertion_point(class_scope:game_oneyuanfortune_protocols.packetl2c_get_room_scene_info_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_room_state();
  inline void clear_has_room_state();
  inline void set_has_cd_time();
  inline void clear_has_cd_time();
  inline void set_has_remain_bet_count();
  inline void clear_has_remain_bet_count();
  inline void set_has_self_remain_count();
  inline void clear_has_self_remain_count();
  inline void set_has_timing();
  inline void clear_has_timing();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 room_id_;
  int room_state_;
  ::google::protobuf::int32 cd_time_;
  ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::msg_bet_info > bet_info_list_;
  ::google::protobuf::int32 remain_bet_count_;
  ::google::protobuf::int32 self_remain_count_;
  ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::player_info > player_list_;
  bool timing_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5foneyuanfortune_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_get_room_scene_info_result* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_leave_room : public ::google::protobuf::Message {
 public:
  packetc2l_leave_room();
  virtual ~packetc2l_leave_room();

  packetc2l_leave_room(const packetc2l_leave_room& from);

  inline packetc2l_leave_room& operator=(const packetc2l_leave_room& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_leave_room& default_instance();

  void Swap(packetc2l_leave_room* other);

  // implements Message ----------------------------------------------

  packetc2l_leave_room* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_leave_room& from);
  void MergeFrom(const packetc2l_leave_room& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_room];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_oneyuanfortune_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:game_oneyuanfortune_protocols.packetc2l_leave_room)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5foneyuanfortune_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_leave_room* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_leave_room_result : public ::google::protobuf::Message {
 public:
  packetl2c_leave_room_result();
  virtual ~packetl2c_leave_room_result();

  packetl2c_leave_room_result(const packetl2c_leave_room_result& from);

  inline packetl2c_leave_room_result& operator=(const packetl2c_leave_room_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_leave_room_result& default_instance();

  void Swap(packetl2c_leave_room_result* other);

  // implements Message ----------------------------------------------

  packetl2c_leave_room_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_leave_room_result& from);
  void MergeFrom(const packetl2c_leave_room_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_room_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_oneyuanfortune_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value);

  // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::msg_type_def::e_msg_result_def result() const;
  inline void set_result(::msg_type_def::e_msg_result_def value);

  // optional int64 player_gold = 3;
  inline bool has_player_gold() const;
  inline void clear_player_gold();
  static const int kPlayerGoldFieldNumber = 3;
  inline ::google::protobuf::int64 player_gold() const;
  inline void set_player_gold(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:game_oneyuanfortune_protocols.packetl2c_leave_room_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_player_gold();
  inline void clear_has_player_gold();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  int result_;
  ::google::protobuf::int64 player_gold_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5foneyuanfortune_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_leave_room_result* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_add_bet : public ::google::protobuf::Message {
 public:
  packetc2l_add_bet();
  virtual ~packetc2l_add_bet();

  packetc2l_add_bet(const packetc2l_add_bet& from);

  inline packetc2l_add_bet& operator=(const packetc2l_add_bet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_add_bet& default_instance();

  void Swap(packetc2l_add_bet* other);

  // implements Message ----------------------------------------------

  packetc2l_add_bet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_add_bet& from);
  void MergeFrom(const packetc2l_add_bet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_add_bet];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_oneyuanfortune_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value);

  // optional int32 bet_count = 2;
  inline bool has_bet_count() const;
  inline void clear_bet_count();
  static const int kBetCountFieldNumber = 2;
  inline ::google::protobuf::int32 bet_count() const;
  inline void set_bet_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_oneyuanfortune_protocols.packetc2l_add_bet)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_bet_count();
  inline void clear_has_bet_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 bet_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5foneyuanfortune_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_add_bet* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_add_bet_result : public ::google::protobuf::Message {
 public:
  packetl2c_add_bet_result();
  virtual ~packetl2c_add_bet_result();

  packetl2c_add_bet_result(const packetl2c_add_bet_result& from);

  inline packetl2c_add_bet_result& operator=(const packetl2c_add_bet_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_add_bet_result& default_instance();

  void Swap(packetl2c_add_bet_result* other);

  // implements Message ----------------------------------------------

  packetl2c_add_bet_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_add_bet_result& from);
  void MergeFrom(const packetl2c_add_bet_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_add_bet];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_oneyuanfortune_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value);

  // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::msg_type_def::e_msg_result_def result() const;
  inline void set_result(::msg_type_def::e_msg_result_def value);

  // optional int32 bet_count = 3;
  inline bool has_bet_count() const;
  inline void clear_bet_count();
  static const int kBetCountFieldNumber = 3;
  inline ::google::protobuf::int32 bet_count() const;
  inline void set_bet_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_oneyuanfortune_protocols.packetl2c_add_bet_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_bet_count();
  inline void clear_has_bet_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  int result_;
  ::google::protobuf::int32 bet_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5foneyuanfortune_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_add_bet_result* default_instance_;
};
// -------------------------------------------------------------------

class player_info : public ::google::protobuf::Message {
 public:
  player_info();
  virtual ~player_info();

  player_info(const player_info& from);

  inline player_info& operator=(const player_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const player_info& default_instance();

  void Swap(player_info* other);

  // implements Message ----------------------------------------------

  player_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const player_info& from);
  void MergeFrom(const player_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // optional string player_nickname = 2;
  inline bool has_player_nickname() const;
  inline void clear_player_nickname();
  static const int kPlayerNicknameFieldNumber = 2;
  inline const ::std::string& player_nickname() const;
  inline void set_player_nickname(const ::std::string& value);
  inline void set_player_nickname(const char* value);
  inline void set_player_nickname(const char* value, size_t size);
  inline ::std::string* mutable_player_nickname();
  inline ::std::string* release_player_nickname();
  inline void set_allocated_player_nickname(::std::string* player_nickname);

  // optional int32 player_head_frame = 3;
  inline bool has_player_head_frame() const;
  inline void clear_player_head_frame();
  static const int kPlayerHeadFrameFieldNumber = 3;
  inline ::google::protobuf::int32 player_head_frame() const;
  inline void set_player_head_frame(::google::protobuf::int32 value);

  // optional string player_head_custom = 4;
  inline bool has_player_head_custom() const;
  inline void clear_player_head_custom();
  static const int kPlayerHeadCustomFieldNumber = 4;
  inline const ::std::string& player_head_custom() const;
  inline void set_player_head_custom(const ::std::string& value);
  inline void set_player_head_custom(const char* value);
  inline void set_player_head_custom(const char* value, size_t size);
  inline ::std::string* mutable_player_head_custom();
  inline ::std::string* release_player_head_custom();
  inline void set_allocated_player_head_custom(::std::string* player_head_custom);

  // optional int64 player_gold = 5;
  inline bool has_player_gold() const;
  inline void clear_player_gold();
  static const int kPlayerGoldFieldNumber = 5;
  inline ::google::protobuf::int64 player_gold() const;
  inline void set_player_gold(::google::protobuf::int64 value);

  // optional int32 player_sex = 6;
  inline bool has_player_sex() const;
  inline void clear_player_sex();
  static const int kPlayerSexFieldNumber = 6;
  inline ::google::protobuf::int32 player_sex() const;
  inline void set_player_sex(::google::protobuf::int32 value);

  // optional int32 player_vip_lv = 7;
  inline bool has_player_vip_lv() const;
  inline void clear_player_vip_lv();
  static const int kPlayerVipLvFieldNumber = 7;
  inline ::google::protobuf::int32 player_vip_lv() const;
  inline void set_player_vip_lv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_oneyuanfortune_protocols.player_info)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_player_nickname();
  inline void clear_has_player_nickname();
  inline void set_has_player_head_frame();
  inline void clear_has_player_head_frame();
  inline void set_has_player_head_custom();
  inline void clear_has_player_head_custom();
  inline void set_has_player_gold();
  inline void clear_has_player_gold();
  inline void set_has_player_sex();
  inline void clear_has_player_sex();
  inline void set_has_player_vip_lv();
  inline void clear_has_player_vip_lv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* player_nickname_;
  ::google::protobuf::int32 player_id_;
  ::google::protobuf::int32 player_head_frame_;
  ::std::string* player_head_custom_;
  ::google::protobuf::int64 player_gold_;
  ::google::protobuf::int32 player_sex_;
  ::google::protobuf::int32 player_vip_lv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5foneyuanfortune_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static player_info* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_ask_for_player_list : public ::google::protobuf::Message {
 public:
  packetc2l_ask_for_player_list();
  virtual ~packetc2l_ask_for_player_list();

  packetc2l_ask_for_player_list(const packetc2l_ask_for_player_list& from);

  inline packetc2l_ask_for_player_list& operator=(const packetc2l_ask_for_player_list& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_ask_for_player_list& default_instance();

  void Swap(packetc2l_ask_for_player_list* other);

  // implements Message ----------------------------------------------

  packetc2l_ask_for_player_list* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_ask_for_player_list& from);
  void MergeFrom(const packetc2l_ask_for_player_list& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_ask_player_list];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_oneyuanfortune_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:game_oneyuanfortune_protocols.packetc2l_ask_for_player_list)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5foneyuanfortune_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_ask_for_player_list* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_ask_for_player_list_result : public ::google::protobuf::Message {
 public:
  packetl2c_ask_for_player_list_result();
  virtual ~packetl2c_ask_for_player_list_result();

  packetl2c_ask_for_player_list_result(const packetl2c_ask_for_player_list_result& from);

  inline packetl2c_ask_for_player_list_result& operator=(const packetl2c_ask_for_player_list_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_ask_for_player_list_result& default_instance();

  void Swap(packetl2c_ask_for_player_list_result* other);

  // implements Message ----------------------------------------------

  packetl2c_ask_for_player_list_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_ask_for_player_list_result& from);
  void MergeFrom(const packetl2c_ask_for_player_list_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_ask_player_list];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_oneyuanfortune_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value);

  // repeated .game_oneyuanfortune_protocols.player_info player_list = 2;
  inline int player_list_size() const;
  inline void clear_player_list();
  static const int kPlayerListFieldNumber = 2;
  inline const ::game_oneyuanfortune_protocols::player_info& player_list(int index) const;
  inline ::game_oneyuanfortune_protocols::player_info* mutable_player_list(int index);
  inline ::game_oneyuanfortune_protocols::player_info* add_player_list();
  inline const ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::player_info >&
      player_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::player_info >*
      mutable_player_list();

  // @@protoc_insertion_point(class_scope:game_oneyuanfortune_protocols.packetl2c_ask_for_player_list_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::player_info > player_list_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5foneyuanfortune_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_ask_for_player_list_result* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_ask_for_history_list : public ::google::protobuf::Message {
 public:
  packetc2l_ask_for_history_list();
  virtual ~packetc2l_ask_for_history_list();

  packetc2l_ask_for_history_list(const packetc2l_ask_for_history_list& from);

  inline packetc2l_ask_for_history_list& operator=(const packetc2l_ask_for_history_list& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_ask_for_history_list& default_instance();

  void Swap(packetc2l_ask_for_history_list* other);

  // implements Message ----------------------------------------------

  packetc2l_ask_for_history_list* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_ask_for_history_list& from);
  void MergeFrom(const packetc2l_ask_for_history_list& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_ask_history_list];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_oneyuanfortune_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:game_oneyuanfortune_protocols.packetc2l_ask_for_history_list)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5foneyuanfortune_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_ask_for_history_list* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_ask_for_history_list_result : public ::google::protobuf::Message {
 public:
  packetl2c_ask_for_history_list_result();
  virtual ~packetl2c_ask_for_history_list_result();

  packetl2c_ask_for_history_list_result(const packetl2c_ask_for_history_list_result& from);

  inline packetl2c_ask_for_history_list_result& operator=(const packetl2c_ask_for_history_list_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_ask_for_history_list_result& default_instance();

  void Swap(packetl2c_ask_for_history_list_result* other);

  // implements Message ----------------------------------------------

  packetl2c_ask_for_history_list_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_ask_for_history_list_result& from);
  void MergeFrom(const packetl2c_ask_for_history_list_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_ask_history_list];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_oneyuanfortune_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value);

  // repeated .game_oneyuanfortune_protocols.history_info history_list = 2;
  inline int history_list_size() const;
  inline void clear_history_list();
  static const int kHistoryListFieldNumber = 2;
  inline const ::game_oneyuanfortune_protocols::history_info& history_list(int index) const;
  inline ::game_oneyuanfortune_protocols::history_info* mutable_history_list(int index);
  inline ::game_oneyuanfortune_protocols::history_info* add_history_list();
  inline const ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::history_info >&
      history_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::history_info >*
      mutable_history_list();

  // optional .game_oneyuanfortune_protocols.history_info lucky_player = 3;
  inline bool has_lucky_player() const;
  inline void clear_lucky_player();
  static const int kLuckyPlayerFieldNumber = 3;
  inline const ::game_oneyuanfortune_protocols::history_info& lucky_player() const;
  inline ::game_oneyuanfortune_protocols::history_info* mutable_lucky_player();
  inline ::game_oneyuanfortune_protocols::history_info* release_lucky_player();
  inline void set_allocated_lucky_player(::game_oneyuanfortune_protocols::history_info* lucky_player);

  // @@protoc_insertion_point(class_scope:game_oneyuanfortune_protocols.packetl2c_ask_for_history_list_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_lucky_player();
  inline void clear_has_lucky_player();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::history_info > history_list_;
  ::game_oneyuanfortune_protocols::history_info* lucky_player_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5foneyuanfortune_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_ask_for_history_list_result* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_bc_begin_bet : public ::google::protobuf::Message {
 public:
  packetl2c_bc_begin_bet();
  virtual ~packetl2c_bc_begin_bet();

  packetl2c_bc_begin_bet(const packetl2c_bc_begin_bet& from);

  inline packetl2c_bc_begin_bet& operator=(const packetl2c_bc_begin_bet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_bc_begin_bet& default_instance();

  void Swap(packetl2c_bc_begin_bet* other);

  // implements Message ----------------------------------------------

  packetl2c_bc_begin_bet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_bc_begin_bet& from);
  void MergeFrom(const packetl2c_bc_begin_bet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_begin_bet];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_oneyuanfortune_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:game_oneyuanfortune_protocols.packetl2c_bc_begin_bet)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5foneyuanfortune_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_bc_begin_bet* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_timing_starts : public ::google::protobuf::Message {
 public:
  packetl2c_timing_starts();
  virtual ~packetl2c_timing_starts();

  packetl2c_timing_starts(const packetl2c_timing_starts& from);

  inline packetl2c_timing_starts& operator=(const packetl2c_timing_starts& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_timing_starts& default_instance();

  void Swap(packetl2c_timing_starts* other);

  // implements Message ----------------------------------------------

  packetl2c_timing_starts* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_timing_starts& from);
  void MergeFrom(const packetl2c_timing_starts& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_l2c_timing_starts];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_oneyuanfortune_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value);

  // optional int32 cd_time = 2;
  inline bool has_cd_time() const;
  inline void clear_cd_time();
  static const int kCdTimeFieldNumber = 2;
  inline ::google::protobuf::int32 cd_time() const;
  inline void set_cd_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_oneyuanfortune_protocols.packetl2c_timing_starts)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_cd_time();
  inline void clear_has_cd_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 cd_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5foneyuanfortune_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_timing_starts* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_bc_begin_award : public ::google::protobuf::Message {
 public:
  packetl2c_bc_begin_award();
  virtual ~packetl2c_bc_begin_award();

  packetl2c_bc_begin_award(const packetl2c_bc_begin_award& from);

  inline packetl2c_bc_begin_award& operator=(const packetl2c_bc_begin_award& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_bc_begin_award& default_instance();

  void Swap(packetl2c_bc_begin_award* other);

  // implements Message ----------------------------------------------

  packetl2c_bc_begin_award* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_bc_begin_award& from);
  void MergeFrom(const packetl2c_bc_begin_award& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_begin_award];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_oneyuanfortune_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value);

  // optional int32 winner_id = 2;
  inline bool has_winner_id() const;
  inline void clear_winner_id();
  static const int kWinnerIdFieldNumber = 2;
  inline ::google::protobuf::int32 winner_id() const;
  inline void set_winner_id(::google::protobuf::int32 value);

  // optional int64 total_bet = 3;
  inline bool has_total_bet() const;
  inline void clear_total_bet();
  static const int kTotalBetFieldNumber = 3;
  inline ::google::protobuf::int64 total_bet() const;
  inline void set_total_bet(::google::protobuf::int64 value);

  // repeated .game_oneyuanfortune_protocols.player_info player_list = 4;
  inline int player_list_size() const;
  inline void clear_player_list();
  static const int kPlayerListFieldNumber = 4;
  inline const ::game_oneyuanfortune_protocols::player_info& player_list(int index) const;
  inline ::game_oneyuanfortune_protocols::player_info* mutable_player_list(int index);
  inline ::game_oneyuanfortune_protocols::player_info* add_player_list();
  inline const ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::player_info >&
      player_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::player_info >*
      mutable_player_list();

  // optional int32 cd_time = 5;
  inline bool has_cd_time() const;
  inline void clear_cd_time();
  static const int kCdTimeFieldNumber = 5;
  inline ::google::protobuf::int32 cd_time() const;
  inline void set_cd_time(::google::protobuf::int32 value);

  // optional int32 random_seed = 6;
  inline bool has_random_seed() const;
  inline void clear_random_seed();
  static const int kRandomSeedFieldNumber = 6;
  inline ::google::protobuf::int32 random_seed() const;
  inline void set_random_seed(::google::protobuf::int32 value);

  // optional int32 reward_gold = 7;
  inline bool has_reward_gold() const;
  inline void clear_reward_gold();
  static const int kRewardGoldFieldNumber = 7;
  inline ::google::protobuf::int32 reward_gold() const;
  inline void set_reward_gold(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_oneyuanfortune_protocols.packetl2c_bc_begin_award)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_winner_id();
  inline void clear_has_winner_id();
  inline void set_has_total_bet();
  inline void clear_has_total_bet();
  inline void set_has_cd_time();
  inline void clear_has_cd_time();
  inline void set_has_random_seed();
  inline void clear_has_random_seed();
  inline void set_has_reward_gold();
  inline void clear_has_reward_gold();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 winner_id_;
  ::google::protobuf::int64 total_bet_;
  ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::player_info > player_list_;
  ::google::protobuf::int32 cd_time_;
  ::google::protobuf::int32 random_seed_;
  ::google::protobuf::int32 reward_gold_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5foneyuanfortune_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_bc_begin_award* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_bc_bet_info : public ::google::protobuf::Message {
 public:
  packetl2c_bc_bet_info();
  virtual ~packetl2c_bc_bet_info();

  packetl2c_bc_bet_info(const packetl2c_bc_bet_info& from);

  inline packetl2c_bc_bet_info& operator=(const packetl2c_bc_bet_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_bc_bet_info& default_instance();

  void Swap(packetl2c_bc_bet_info* other);

  // implements Message ----------------------------------------------

  packetl2c_bc_bet_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_bc_bet_info& from);
  void MergeFrom(const packetl2c_bc_bet_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_bet_info];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_oneyuanfortune_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value);

  // optional .game_oneyuanfortune_protocols.msg_bet_info bet_info_list = 2;
  inline bool has_bet_info_list() const;
  inline void clear_bet_info_list();
  static const int kBetInfoListFieldNumber = 2;
  inline const ::game_oneyuanfortune_protocols::msg_bet_info& bet_info_list() const;
  inline ::game_oneyuanfortune_protocols::msg_bet_info* mutable_bet_info_list();
  inline ::game_oneyuanfortune_protocols::msg_bet_info* release_bet_info_list();
  inline void set_allocated_bet_info_list(::game_oneyuanfortune_protocols::msg_bet_info* bet_info_list);

  // optional .game_oneyuanfortune_protocols.player_info pinfo = 3;
  inline bool has_pinfo() const;
  inline void clear_pinfo();
  static const int kPinfoFieldNumber = 3;
  inline const ::game_oneyuanfortune_protocols::player_info& pinfo() const;
  inline ::game_oneyuanfortune_protocols::player_info* mutable_pinfo();
  inline ::game_oneyuanfortune_protocols::player_info* release_pinfo();
  inline void set_allocated_pinfo(::game_oneyuanfortune_protocols::player_info* pinfo);

  // @@protoc_insertion_point(class_scope:game_oneyuanfortune_protocols.packetl2c_bc_bet_info)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_bet_info_list();
  inline void clear_has_bet_info_list();
  inline void set_has_pinfo();
  inline void clear_has_pinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::game_oneyuanfortune_protocols::msg_bet_info* bet_info_list_;
  ::game_oneyuanfortune_protocols::player_info* pinfo_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5foneyuanfortune_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_bc_bet_info* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_check_state : public ::google::protobuf::Message {
 public:
  packetc2l_check_state();
  virtual ~packetc2l_check_state();

  packetc2l_check_state(const packetc2l_check_state& from);

  inline packetc2l_check_state& operator=(const packetc2l_check_state& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_check_state& default_instance();

  void Swap(packetc2l_check_state* other);

  // implements Message ----------------------------------------------

  packetc2l_check_state* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_check_state& from);
  void MergeFrom(const packetc2l_check_state& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_oneyuanfortune_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:game_oneyuanfortune_protocols.packetc2l_check_state)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5foneyuanfortune_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_check_state* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_check_state_result : public ::google::protobuf::Message {
 public:
  packetl2c_check_state_result();
  virtual ~packetl2c_check_state_result();

  packetl2c_check_state_result(const packetl2c_check_state_result& from);

  inline packetl2c_check_state_result& operator=(const packetl2c_check_state_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_check_state_result& default_instance();

  void Swap(packetl2c_check_state_result* other);

  // implements Message ----------------------------------------------

  packetl2c_check_state_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_check_state_result& from);
  void MergeFrom(const packetl2c_check_state_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_oneyuanfortune_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value);

  // optional bool is_intable = 2 [default = false];
  inline bool has_is_intable() const;
  inline void clear_is_intable();
  static const int kIsIntableFieldNumber = 2;
  inline bool is_intable() const;
  inline void set_is_intable(bool value);

  // @@protoc_insertion_point(class_scope:game_oneyuanfortune_protocols.packetl2c_check_state_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_is_intable();
  inline void clear_has_is_intable();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  bool is_intable_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5foneyuanfortune_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_check_state_result* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_gm : public ::google::protobuf::Message {
 public:
  packetc2l_gm();
  virtual ~packetc2l_gm();

  packetc2l_gm(const packetc2l_gm& from);

  inline packetc2l_gm& operator=(const packetc2l_gm& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_gm& default_instance();

  void Swap(packetc2l_gm* other);

  // implements Message ----------------------------------------------

  packetc2l_gm* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_gm& from);
  void MergeFrom(const packetc2l_gm& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_gm];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_oneyuanfortune_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value);

  // optional int32 gm_max = 2;
  inline bool has_gm_max() const;
  inline void clear_gm_max();
  static const int kGmMaxFieldNumber = 2;
  inline ::google::protobuf::int32 gm_max() const;
  inline void set_gm_max(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_oneyuanfortune_protocols.packetc2l_gm)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_gm_max();
  inline void clear_has_gm_max();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 gm_max_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5foneyuanfortune_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_gm* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_game_control : public ::google::protobuf::Message {
 public:
  packetc2l_game_control();
  virtual ~packetc2l_game_control();

  packetc2l_game_control(const packetc2l_game_control& from);

  inline packetc2l_game_control& operator=(const packetc2l_game_control& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_game_control& default_instance();

  void Swap(packetc2l_game_control* other);

  // implements Message ----------------------------------------------

  packetc2l_game_control* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_game_control& from);
  void MergeFrom(const packetc2l_game_control& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_game_control];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_oneyuanfortune_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:game_oneyuanfortune_protocols.packetc2l_game_control)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5foneyuanfortune_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_game_control* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_game_control : public ::google::protobuf::Message {
 public:
  packetl2c_game_control();
  virtual ~packetl2c_game_control();

  packetl2c_game_control(const packetl2c_game_control& from);

  inline packetl2c_game_control& operator=(const packetl2c_game_control& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_game_control& default_instance();

  void Swap(packetl2c_game_control* other);

  // implements Message ----------------------------------------------

  packetl2c_game_control* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_game_control& from);
  void MergeFrom(const packetl2c_game_control& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_game_control];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_oneyuanfortune_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value);

  // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::msg_type_def::e_msg_result_def result() const;
  inline void set_result(::msg_type_def::e_msg_result_def value);

  // @@protoc_insertion_point(class_scope:game_oneyuanfortune_protocols.packetl2c_game_control)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  int result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5foneyuanfortune_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_game_control* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_bc_debuginfo : public ::google::protobuf::Message {
 public:
  packetl2c_bc_debuginfo();
  virtual ~packetl2c_bc_debuginfo();

  packetl2c_bc_debuginfo(const packetl2c_bc_debuginfo& from);

  inline packetl2c_bc_debuginfo& operator=(const packetl2c_bc_debuginfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_bc_debuginfo& default_instance();

  void Swap(packetl2c_bc_debuginfo* other);

  // implements Message ----------------------------------------------

  packetl2c_bc_debuginfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_bc_debuginfo& from);
  void MergeFrom(const packetl2c_bc_debuginfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_debuginfo];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_oneyuanfortune_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value);

  // optional int32 player_id = 2;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // optional int64 total_profit = 3 [default = 0];
  inline bool has_total_profit() const;
  inline void clear_total_profit();
  static const int kTotalProfitFieldNumber = 3;
  inline ::google::protobuf::int64 total_profit() const;
  inline void set_total_profit(::google::protobuf::int64 value);

  // optional int64 total_stock = 4 [default = 0];
  inline bool has_total_stock() const;
  inline void clear_total_stock();
  static const int kTotalStockFieldNumber = 4;
  inline ::google::protobuf::int64 total_stock() const;
  inline void set_total_stock(::google::protobuf::int64 value);

  // optional int64 total_Rate = 6 [default = 0];
  inline bool has_total_rate() const;
  inline void clear_total_rate();
  static const int kTotalRateFieldNumber = 6;
  inline ::google::protobuf::int64 total_rate() const;
  inline void set_total_rate(::google::protobuf::int64 value);

  // optional string debug_infos = 5;
  inline bool has_debug_infos() const;
  inline void clear_debug_infos();
  static const int kDebugInfosFieldNumber = 5;
  inline const ::std::string& debug_infos() const;
  inline void set_debug_infos(const ::std::string& value);
  inline void set_debug_infos(const char* value);
  inline void set_debug_infos(const char* value, size_t size);
  inline ::std::string* mutable_debug_infos();
  inline ::std::string* release_debug_infos();
  inline void set_allocated_debug_infos(::std::string* debug_infos);

  // @@protoc_insertion_point(class_scope:game_oneyuanfortune_protocols.packetl2c_bc_debuginfo)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_total_profit();
  inline void clear_has_total_profit();
  inline void set_has_total_stock();
  inline void clear_has_total_stock();
  inline void set_has_total_rate();
  inline void clear_has_total_rate();
  inline void set_has_debug_infos();
  inline void clear_has_debug_infos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 player_id_;
  ::google::protobuf::int64 total_profit_;
  ::google::protobuf::int64 total_stock_;
  ::google::protobuf::int64 total_rate_;
  ::std::string* debug_infos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5foneyuanfortune_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_bc_debuginfo* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_notice_all_bet_info : public ::google::protobuf::Message {
 public:
  packetl2c_notice_all_bet_info();
  virtual ~packetl2c_notice_all_bet_info();

  packetl2c_notice_all_bet_info(const packetl2c_notice_all_bet_info& from);

  inline packetl2c_notice_all_bet_info& operator=(const packetl2c_notice_all_bet_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_notice_all_bet_info& default_instance();

  void Swap(packetl2c_notice_all_bet_info* other);

  // implements Message ----------------------------------------------

  packetl2c_notice_all_bet_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_notice_all_bet_info& from);
  void MergeFrom(const packetl2c_notice_all_bet_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_notice_gm_all_bet_info];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_oneyuanfortune_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value);

  // repeated .game_oneyuanfortune_protocols.msg_bet_info2 bet_info_list = 2;
  inline int bet_info_list_size() const;
  inline void clear_bet_info_list();
  static const int kBetInfoListFieldNumber = 2;
  inline const ::game_oneyuanfortune_protocols::msg_bet_info2& bet_info_list(int index) const;
  inline ::game_oneyuanfortune_protocols::msg_bet_info2* mutable_bet_info_list(int index);
  inline ::game_oneyuanfortune_protocols::msg_bet_info2* add_bet_info_list();
  inline const ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::msg_bet_info2 >&
      bet_info_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::msg_bet_info2 >*
      mutable_bet_info_list();

  // @@protoc_insertion_point(class_scope:game_oneyuanfortune_protocols.packetl2c_notice_all_bet_info)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::msg_bet_info2 > bet_info_list_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5foneyuanfortune_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5foneyuanfortune_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_notice_all_bet_info* default_instance_;
};
// ===================================================================


// ===================================================================

// msg_room_info

// optional int32 roomid = 1;
inline bool msg_room_info::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_room_info::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_room_info::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_room_info::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google::protobuf::int32 msg_room_info::roomid() const {
  return roomid_;
}
inline void msg_room_info::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
}

// -------------------------------------------------------------------

// msg_bet_info

// optional int32 player_id = 1;
inline bool msg_bet_info::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_bet_info::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_bet_info::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_bet_info::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 msg_bet_info::player_id() const {
  return player_id_;
}
inline void msg_bet_info::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional int64 bet_gold = 2;
inline bool msg_bet_info::has_bet_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_bet_info::set_has_bet_gold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_bet_info::clear_has_bet_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_bet_info::clear_bet_gold() {
  bet_gold_ = GOOGLE_LONGLONG(0);
  clear_has_bet_gold();
}
inline ::google::protobuf::int64 msg_bet_info::bet_gold() const {
  return bet_gold_;
}
inline void msg_bet_info::set_bet_gold(::google::protobuf::int64 value) {
  set_has_bet_gold();
  bet_gold_ = value;
}

// optional int32 rate = 3;
inline bool msg_bet_info::has_rate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_bet_info::set_has_rate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_bet_info::clear_has_rate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_bet_info::clear_rate() {
  rate_ = 0;
  clear_has_rate();
}
inline ::google::protobuf::int32 msg_bet_info::rate() const {
  return rate_;
}
inline void msg_bet_info::set_rate(::google::protobuf::int32 value) {
  set_has_rate();
  rate_ = value;
}

// optional int32 bet_count = 4;
inline bool msg_bet_info::has_bet_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void msg_bet_info::set_has_bet_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void msg_bet_info::clear_has_bet_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void msg_bet_info::clear_bet_count() {
  bet_count_ = 0;
  clear_has_bet_count();
}
inline ::google::protobuf::int32 msg_bet_info::bet_count() const {
  return bet_count_;
}
inline void msg_bet_info::set_bet_count(::google::protobuf::int32 value) {
  set_has_bet_count();
  bet_count_ = value;
}

// -------------------------------------------------------------------

// msg_bet_info2

// optional int32 player_id = 1;
inline bool msg_bet_info2::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_bet_info2::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_bet_info2::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_bet_info2::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 msg_bet_info2::player_id() const {
  return player_id_;
}
inline void msg_bet_info2::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional int64 bet_gold = 2;
inline bool msg_bet_info2::has_bet_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_bet_info2::set_has_bet_gold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_bet_info2::clear_has_bet_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_bet_info2::clear_bet_gold() {
  bet_gold_ = GOOGLE_LONGLONG(0);
  clear_has_bet_gold();
}
inline ::google::protobuf::int64 msg_bet_info2::bet_gold() const {
  return bet_gold_;
}
inline void msg_bet_info2::set_bet_gold(::google::protobuf::int64 value) {
  set_has_bet_gold();
  bet_gold_ = value;
}

// optional int32 rate = 3;
inline bool msg_bet_info2::has_rate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_bet_info2::set_has_rate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_bet_info2::clear_has_rate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_bet_info2::clear_rate() {
  rate_ = 0;
  clear_has_rate();
}
inline ::google::protobuf::int32 msg_bet_info2::rate() const {
  return rate_;
}
inline void msg_bet_info2::set_rate(::google::protobuf::int32 value) {
  set_has_rate();
  rate_ = value;
}

// optional int32 bet_count = 4;
inline bool msg_bet_info2::has_bet_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void msg_bet_info2::set_has_bet_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void msg_bet_info2::clear_has_bet_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void msg_bet_info2::clear_bet_count() {
  bet_count_ = 0;
  clear_has_bet_count();
}
inline ::google::protobuf::int32 msg_bet_info2::bet_count() const {
  return bet_count_;
}
inline void msg_bet_info2::set_bet_count(::google::protobuf::int32 value) {
  set_has_bet_count();
  bet_count_ = value;
}

// optional int64 gold = 5;
inline bool msg_bet_info2::has_gold() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void msg_bet_info2::set_has_gold() {
  _has_bits_[0] |= 0x00000010u;
}
inline void msg_bet_info2::clear_has_gold() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void msg_bet_info2::clear_gold() {
  gold_ = GOOGLE_LONGLONG(0);
  clear_has_gold();
}
inline ::google::protobuf::int64 msg_bet_info2::gold() const {
  return gold_;
}
inline void msg_bet_info2::set_gold(::google::protobuf::int64 value) {
  set_has_gold();
  gold_ = value;
}

// optional int32 table_id = 6;
inline bool msg_bet_info2::has_table_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void msg_bet_info2::set_has_table_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void msg_bet_info2::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void msg_bet_info2::clear_table_id() {
  table_id_ = 0;
  clear_has_table_id();
}
inline ::google::protobuf::int32 msg_bet_info2::table_id() const {
  return table_id_;
}
inline void msg_bet_info2::set_table_id(::google::protobuf::int32 value) {
  set_has_table_id();
  table_id_ = value;
}

// -------------------------------------------------------------------

// packetc2l_get_room_info

// optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_room_info];
inline bool packetc2l_get_room_info::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_get_room_info::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_get_room_info::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_get_room_info::clear_packet_id() {
  packet_id_ = 10001;
  clear_has_packet_id();
}
inline ::game_oneyuanfortune_protocols::e_server_msg_type packetc2l_get_room_info::packet_id() const {
  return static_cast< ::game_oneyuanfortune_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_get_room_info::set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value) {
  assert(::game_oneyuanfortune_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetl2c_get_room_info_result

// optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_room_info_result];
inline bool packetl2c_get_room_info_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_get_room_info_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_get_room_info_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_get_room_info_result::clear_packet_id() {
  packet_id_ = 15001;
  clear_has_packet_id();
}
inline ::game_oneyuanfortune_protocols::e_server_msg_type packetl2c_get_room_info_result::packet_id() const {
  return static_cast< ::game_oneyuanfortune_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_get_room_info_result::set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value) {
  assert(::game_oneyuanfortune_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// repeated .game_oneyuanfortune_protocols.msg_room_info room_list = 2;
inline int packetl2c_get_room_info_result::room_list_size() const {
  return room_list_.size();
}
inline void packetl2c_get_room_info_result::clear_room_list() {
  room_list_.Clear();
}
inline const ::game_oneyuanfortune_protocols::msg_room_info& packetl2c_get_room_info_result::room_list(int index) const {
  return room_list_.Get(index);
}
inline ::game_oneyuanfortune_protocols::msg_room_info* packetl2c_get_room_info_result::mutable_room_list(int index) {
  return room_list_.Mutable(index);
}
inline ::game_oneyuanfortune_protocols::msg_room_info* packetl2c_get_room_info_result::add_room_list() {
  return room_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::msg_room_info >&
packetl2c_get_room_info_result::room_list() const {
  return room_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::msg_room_info >*
packetl2c_get_room_info_result::mutable_room_list() {
  return &room_list_;
}

// -------------------------------------------------------------------

// packetc2l_enter_room

// optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_enter_room];
inline bool packetc2l_enter_room::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_enter_room::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_enter_room::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_enter_room::clear_packet_id() {
  packet_id_ = 10002;
  clear_has_packet_id();
}
inline ::game_oneyuanfortune_protocols::e_server_msg_type packetc2l_enter_room::packet_id() const {
  return static_cast< ::game_oneyuanfortune_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_enter_room::set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value) {
  assert(::game_oneyuanfortune_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 roomid = 2;
inline bool packetc2l_enter_room::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetc2l_enter_room::set_has_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetc2l_enter_room::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetc2l_enter_room::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google::protobuf::int32 packetc2l_enter_room::roomid() const {
  return roomid_;
}
inline void packetc2l_enter_room::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
}

// -------------------------------------------------------------------

// packetl2c_enter_room_result

// optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_enter_room_result];
inline bool packetl2c_enter_room_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_enter_room_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_enter_room_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_enter_room_result::clear_packet_id() {
  packet_id_ = 15002;
  clear_has_packet_id();
}
inline ::game_oneyuanfortune_protocols::e_server_msg_type packetl2c_enter_room_result::packet_id() const {
  return static_cast< ::game_oneyuanfortune_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_enter_room_result::set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value) {
  assert(::game_oneyuanfortune_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
inline bool packetl2c_enter_room_result::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_enter_room_result::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_enter_room_result::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_enter_room_result::clear_result() {
  result_ = 2;
  clear_has_result();
}
inline ::msg_type_def::e_msg_result_def packetl2c_enter_room_result::result() const {
  return static_cast< ::msg_type_def::e_msg_result_def >(result_);
}
inline void packetl2c_enter_room_result::set_result(::msg_type_def::e_msg_result_def value) {
  assert(::msg_type_def::e_msg_result_def_IsValid(value));
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// history_info

// optional string nickname = 1;
inline bool history_info::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void history_info::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void history_info::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void history_info::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::kEmptyString) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& history_info::nickname() const {
  return *nickname_;
}
inline void history_info::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
}
inline void history_info::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
}
inline void history_info::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* history_info::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    nickname_ = new ::std::string;
  }
  return nickname_;
}
inline ::std::string* history_info::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void history_info::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::kEmptyString) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 rate = 2;
inline bool history_info::has_rate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void history_info::set_has_rate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void history_info::clear_has_rate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void history_info::clear_rate() {
  rate_ = 0;
  clear_has_rate();
}
inline ::google::protobuf::int32 history_info::rate() const {
  return rate_;
}
inline void history_info::set_rate(::google::protobuf::int32 value) {
  set_has_rate();
  rate_ = value;
}

// optional int64 gold = 3;
inline bool history_info::has_gold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void history_info::set_has_gold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void history_info::clear_has_gold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void history_info::clear_gold() {
  gold_ = GOOGLE_LONGLONG(0);
  clear_has_gold();
}
inline ::google::protobuf::int64 history_info::gold() const {
  return gold_;
}
inline void history_info::set_gold(::google::protobuf::int64 value) {
  set_has_gold();
  gold_ = value;
}

// optional int32 viplevel = 4;
inline bool history_info::has_viplevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void history_info::set_has_viplevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void history_info::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void history_info::clear_viplevel() {
  viplevel_ = 0;
  clear_has_viplevel();
}
inline ::google::protobuf::int32 history_info::viplevel() const {
  return viplevel_;
}
inline void history_info::set_viplevel(::google::protobuf::int32 value) {
  set_has_viplevel();
  viplevel_ = value;
}

// optional int32 player_id = 5;
inline bool history_info::has_player_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void history_info::set_has_player_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void history_info::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void history_info::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 history_info::player_id() const {
  return player_id_;
}
inline void history_info::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional string player_head = 6;
inline bool history_info::has_player_head() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void history_info::set_has_player_head() {
  _has_bits_[0] |= 0x00000020u;
}
inline void history_info::clear_has_player_head() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void history_info::clear_player_head() {
  if (player_head_ != &::google::protobuf::internal::kEmptyString) {
    player_head_->clear();
  }
  clear_has_player_head();
}
inline const ::std::string& history_info::player_head() const {
  return *player_head_;
}
inline void history_info::set_player_head(const ::std::string& value) {
  set_has_player_head();
  if (player_head_ == &::google::protobuf::internal::kEmptyString) {
    player_head_ = new ::std::string;
  }
  player_head_->assign(value);
}
inline void history_info::set_player_head(const char* value) {
  set_has_player_head();
  if (player_head_ == &::google::protobuf::internal::kEmptyString) {
    player_head_ = new ::std::string;
  }
  player_head_->assign(value);
}
inline void history_info::set_player_head(const char* value, size_t size) {
  set_has_player_head();
  if (player_head_ == &::google::protobuf::internal::kEmptyString) {
    player_head_ = new ::std::string;
  }
  player_head_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* history_info::mutable_player_head() {
  set_has_player_head();
  if (player_head_ == &::google::protobuf::internal::kEmptyString) {
    player_head_ = new ::std::string;
  }
  return player_head_;
}
inline ::std::string* history_info::release_player_head() {
  clear_has_player_head();
  if (player_head_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = player_head_;
    player_head_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void history_info::set_allocated_player_head(::std::string* player_head) {
  if (player_head_ != &::google::protobuf::internal::kEmptyString) {
    delete player_head_;
  }
  if (player_head) {
    set_has_player_head();
    player_head_ = player_head;
  } else {
    clear_has_player_head();
    player_head_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 player_head_frame = 7;
inline bool history_info::has_player_head_frame() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void history_info::set_has_player_head_frame() {
  _has_bits_[0] |= 0x00000040u;
}
inline void history_info::clear_has_player_head_frame() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void history_info::clear_player_head_frame() {
  player_head_frame_ = 0;
  clear_has_player_head_frame();
}
inline ::google::protobuf::int32 history_info::player_head_frame() const {
  return player_head_frame_;
}
inline void history_info::set_player_head_frame(::google::protobuf::int32 value) {
  set_has_player_head_frame();
  player_head_frame_ = value;
}

// -------------------------------------------------------------------

// packetc2l_get_room_scene_info

// optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_room_scene_info];
inline bool packetc2l_get_room_scene_info::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_get_room_scene_info::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_get_room_scene_info::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_get_room_scene_info::clear_packet_id() {
  packet_id_ = 10007;
  clear_has_packet_id();
}
inline ::game_oneyuanfortune_protocols::e_server_msg_type packetc2l_get_room_scene_info::packet_id() const {
  return static_cast< ::game_oneyuanfortune_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_get_room_scene_info::set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value) {
  assert(::game_oneyuanfortune_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetl2c_get_room_scene_info_result

// optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_room_scene_info];
inline bool packetl2c_get_room_scene_info_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_get_room_scene_info_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_get_room_scene_info_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_get_room_scene_info_result::clear_packet_id() {
  packet_id_ = 15010;
  clear_has_packet_id();
}
inline ::game_oneyuanfortune_protocols::e_server_msg_type packetl2c_get_room_scene_info_result::packet_id() const {
  return static_cast< ::game_oneyuanfortune_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_get_room_scene_info_result::set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value) {
  assert(::game_oneyuanfortune_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 room_id = 2;
inline bool packetl2c_get_room_scene_info_result::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_get_room_scene_info_result::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_get_room_scene_info_result::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_get_room_scene_info_result::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 packetl2c_get_room_scene_info_result::room_id() const {
  return room_id_;
}
inline void packetl2c_get_room_scene_info_result::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional .game_oneyuanfortune_protocols.e_game_state room_state = 3;
inline bool packetl2c_get_room_scene_info_result::has_room_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetl2c_get_room_scene_info_result::set_has_room_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetl2c_get_room_scene_info_result::clear_has_room_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetl2c_get_room_scene_info_result::clear_room_state() {
  room_state_ = 0;
  clear_has_room_state();
}
inline ::game_oneyuanfortune_protocols::e_game_state packetl2c_get_room_scene_info_result::room_state() const {
  return static_cast< ::game_oneyuanfortune_protocols::e_game_state >(room_state_);
}
inline void packetl2c_get_room_scene_info_result::set_room_state(::game_oneyuanfortune_protocols::e_game_state value) {
  assert(::game_oneyuanfortune_protocols::e_game_state_IsValid(value));
  set_has_room_state();
  room_state_ = value;
}

// optional int32 cd_time = 4;
inline bool packetl2c_get_room_scene_info_result::has_cd_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void packetl2c_get_room_scene_info_result::set_has_cd_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void packetl2c_get_room_scene_info_result::clear_has_cd_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void packetl2c_get_room_scene_info_result::clear_cd_time() {
  cd_time_ = 0;
  clear_has_cd_time();
}
inline ::google::protobuf::int32 packetl2c_get_room_scene_info_result::cd_time() const {
  return cd_time_;
}
inline void packetl2c_get_room_scene_info_result::set_cd_time(::google::protobuf::int32 value) {
  set_has_cd_time();
  cd_time_ = value;
}

// repeated .game_oneyuanfortune_protocols.msg_bet_info bet_info_list = 5;
inline int packetl2c_get_room_scene_info_result::bet_info_list_size() const {
  return bet_info_list_.size();
}
inline void packetl2c_get_room_scene_info_result::clear_bet_info_list() {
  bet_info_list_.Clear();
}
inline const ::game_oneyuanfortune_protocols::msg_bet_info& packetl2c_get_room_scene_info_result::bet_info_list(int index) const {
  return bet_info_list_.Get(index);
}
inline ::game_oneyuanfortune_protocols::msg_bet_info* packetl2c_get_room_scene_info_result::mutable_bet_info_list(int index) {
  return bet_info_list_.Mutable(index);
}
inline ::game_oneyuanfortune_protocols::msg_bet_info* packetl2c_get_room_scene_info_result::add_bet_info_list() {
  return bet_info_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::msg_bet_info >&
packetl2c_get_room_scene_info_result::bet_info_list() const {
  return bet_info_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::msg_bet_info >*
packetl2c_get_room_scene_info_result::mutable_bet_info_list() {
  return &bet_info_list_;
}

// optional int32 remain_bet_count = 6;
inline bool packetl2c_get_room_scene_info_result::has_remain_bet_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void packetl2c_get_room_scene_info_result::set_has_remain_bet_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void packetl2c_get_room_scene_info_result::clear_has_remain_bet_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void packetl2c_get_room_scene_info_result::clear_remain_bet_count() {
  remain_bet_count_ = 0;
  clear_has_remain_bet_count();
}
inline ::google::protobuf::int32 packetl2c_get_room_scene_info_result::remain_bet_count() const {
  return remain_bet_count_;
}
inline void packetl2c_get_room_scene_info_result::set_remain_bet_count(::google::protobuf::int32 value) {
  set_has_remain_bet_count();
  remain_bet_count_ = value;
}

// optional int32 self_remain_count = 7;
inline bool packetl2c_get_room_scene_info_result::has_self_remain_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void packetl2c_get_room_scene_info_result::set_has_self_remain_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void packetl2c_get_room_scene_info_result::clear_has_self_remain_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void packetl2c_get_room_scene_info_result::clear_self_remain_count() {
  self_remain_count_ = 0;
  clear_has_self_remain_count();
}
inline ::google::protobuf::int32 packetl2c_get_room_scene_info_result::self_remain_count() const {
  return self_remain_count_;
}
inline void packetl2c_get_room_scene_info_result::set_self_remain_count(::google::protobuf::int32 value) {
  set_has_self_remain_count();
  self_remain_count_ = value;
}

// repeated .game_oneyuanfortune_protocols.player_info player_list = 8;
inline int packetl2c_get_room_scene_info_result::player_list_size() const {
  return player_list_.size();
}
inline void packetl2c_get_room_scene_info_result::clear_player_list() {
  player_list_.Clear();
}
inline const ::game_oneyuanfortune_protocols::player_info& packetl2c_get_room_scene_info_result::player_list(int index) const {
  return player_list_.Get(index);
}
inline ::game_oneyuanfortune_protocols::player_info* packetl2c_get_room_scene_info_result::mutable_player_list(int index) {
  return player_list_.Mutable(index);
}
inline ::game_oneyuanfortune_protocols::player_info* packetl2c_get_room_scene_info_result::add_player_list() {
  return player_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::player_info >&
packetl2c_get_room_scene_info_result::player_list() const {
  return player_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::player_info >*
packetl2c_get_room_scene_info_result::mutable_player_list() {
  return &player_list_;
}

// optional bool timing = 9 [default = false];
inline bool packetl2c_get_room_scene_info_result::has_timing() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void packetl2c_get_room_scene_info_result::set_has_timing() {
  _has_bits_[0] |= 0x00000100u;
}
inline void packetl2c_get_room_scene_info_result::clear_has_timing() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void packetl2c_get_room_scene_info_result::clear_timing() {
  timing_ = false;
  clear_has_timing();
}
inline bool packetl2c_get_room_scene_info_result::timing() const {
  return timing_;
}
inline void packetl2c_get_room_scene_info_result::set_timing(bool value) {
  set_has_timing();
  timing_ = value;
}

// -------------------------------------------------------------------

// packetc2l_leave_room

// optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_room];
inline bool packetc2l_leave_room::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_leave_room::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_leave_room::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_leave_room::clear_packet_id() {
  packet_id_ = 10003;
  clear_has_packet_id();
}
inline ::game_oneyuanfortune_protocols::e_server_msg_type packetc2l_leave_room::packet_id() const {
  return static_cast< ::game_oneyuanfortune_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_leave_room::set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value) {
  assert(::game_oneyuanfortune_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetl2c_leave_room_result

// optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_room_result];
inline bool packetl2c_leave_room_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_leave_room_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_leave_room_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_leave_room_result::clear_packet_id() {
  packet_id_ = 15003;
  clear_has_packet_id();
}
inline ::game_oneyuanfortune_protocols::e_server_msg_type packetl2c_leave_room_result::packet_id() const {
  return static_cast< ::game_oneyuanfortune_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_leave_room_result::set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value) {
  assert(::game_oneyuanfortune_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];
inline bool packetl2c_leave_room_result::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_leave_room_result::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_leave_room_result::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_leave_room_result::clear_result() {
  result_ = 1;
  clear_has_result();
}
inline ::msg_type_def::e_msg_result_def packetl2c_leave_room_result::result() const {
  return static_cast< ::msg_type_def::e_msg_result_def >(result_);
}
inline void packetl2c_leave_room_result::set_result(::msg_type_def::e_msg_result_def value) {
  assert(::msg_type_def::e_msg_result_def_IsValid(value));
  set_has_result();
  result_ = value;
}

// optional int64 player_gold = 3;
inline bool packetl2c_leave_room_result::has_player_gold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetl2c_leave_room_result::set_has_player_gold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetl2c_leave_room_result::clear_has_player_gold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetl2c_leave_room_result::clear_player_gold() {
  player_gold_ = GOOGLE_LONGLONG(0);
  clear_has_player_gold();
}
inline ::google::protobuf::int64 packetl2c_leave_room_result::player_gold() const {
  return player_gold_;
}
inline void packetl2c_leave_room_result::set_player_gold(::google::protobuf::int64 value) {
  set_has_player_gold();
  player_gold_ = value;
}

// -------------------------------------------------------------------

// packetc2l_add_bet

// optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_add_bet];
inline bool packetc2l_add_bet::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_add_bet::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_add_bet::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_add_bet::clear_packet_id() {
  packet_id_ = 10004;
  clear_has_packet_id();
}
inline ::game_oneyuanfortune_protocols::e_server_msg_type packetc2l_add_bet::packet_id() const {
  return static_cast< ::game_oneyuanfortune_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_add_bet::set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value) {
  assert(::game_oneyuanfortune_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 bet_count = 2;
inline bool packetc2l_add_bet::has_bet_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetc2l_add_bet::set_has_bet_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetc2l_add_bet::clear_has_bet_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetc2l_add_bet::clear_bet_count() {
  bet_count_ = 0;
  clear_has_bet_count();
}
inline ::google::protobuf::int32 packetc2l_add_bet::bet_count() const {
  return bet_count_;
}
inline void packetc2l_add_bet::set_bet_count(::google::protobuf::int32 value) {
  set_has_bet_count();
  bet_count_ = value;
}

// -------------------------------------------------------------------

// packetl2c_add_bet_result

// optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_add_bet];
inline bool packetl2c_add_bet_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_add_bet_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_add_bet_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_add_bet_result::clear_packet_id() {
  packet_id_ = 15004;
  clear_has_packet_id();
}
inline ::game_oneyuanfortune_protocols::e_server_msg_type packetl2c_add_bet_result::packet_id() const {
  return static_cast< ::game_oneyuanfortune_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_add_bet_result::set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value) {
  assert(::game_oneyuanfortune_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
inline bool packetl2c_add_bet_result::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_add_bet_result::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_add_bet_result::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_add_bet_result::clear_result() {
  result_ = 2;
  clear_has_result();
}
inline ::msg_type_def::e_msg_result_def packetl2c_add_bet_result::result() const {
  return static_cast< ::msg_type_def::e_msg_result_def >(result_);
}
inline void packetl2c_add_bet_result::set_result(::msg_type_def::e_msg_result_def value) {
  assert(::msg_type_def::e_msg_result_def_IsValid(value));
  set_has_result();
  result_ = value;
}

// optional int32 bet_count = 3;
inline bool packetl2c_add_bet_result::has_bet_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetl2c_add_bet_result::set_has_bet_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetl2c_add_bet_result::clear_has_bet_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetl2c_add_bet_result::clear_bet_count() {
  bet_count_ = 0;
  clear_has_bet_count();
}
inline ::google::protobuf::int32 packetl2c_add_bet_result::bet_count() const {
  return bet_count_;
}
inline void packetl2c_add_bet_result::set_bet_count(::google::protobuf::int32 value) {
  set_has_bet_count();
  bet_count_ = value;
}

// -------------------------------------------------------------------

// player_info

// optional int32 player_id = 1;
inline bool player_info::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void player_info::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void player_info::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void player_info::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 player_info::player_id() const {
  return player_id_;
}
inline void player_info::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional string player_nickname = 2;
inline bool player_info::has_player_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void player_info::set_has_player_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void player_info::clear_has_player_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void player_info::clear_player_nickname() {
  if (player_nickname_ != &::google::protobuf::internal::kEmptyString) {
    player_nickname_->clear();
  }
  clear_has_player_nickname();
}
inline const ::std::string& player_info::player_nickname() const {
  return *player_nickname_;
}
inline void player_info::set_player_nickname(const ::std::string& value) {
  set_has_player_nickname();
  if (player_nickname_ == &::google::protobuf::internal::kEmptyString) {
    player_nickname_ = new ::std::string;
  }
  player_nickname_->assign(value);
}
inline void player_info::set_player_nickname(const char* value) {
  set_has_player_nickname();
  if (player_nickname_ == &::google::protobuf::internal::kEmptyString) {
    player_nickname_ = new ::std::string;
  }
  player_nickname_->assign(value);
}
inline void player_info::set_player_nickname(const char* value, size_t size) {
  set_has_player_nickname();
  if (player_nickname_ == &::google::protobuf::internal::kEmptyString) {
    player_nickname_ = new ::std::string;
  }
  player_nickname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* player_info::mutable_player_nickname() {
  set_has_player_nickname();
  if (player_nickname_ == &::google::protobuf::internal::kEmptyString) {
    player_nickname_ = new ::std::string;
  }
  return player_nickname_;
}
inline ::std::string* player_info::release_player_nickname() {
  clear_has_player_nickname();
  if (player_nickname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = player_nickname_;
    player_nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void player_info::set_allocated_player_nickname(::std::string* player_nickname) {
  if (player_nickname_ != &::google::protobuf::internal::kEmptyString) {
    delete player_nickname_;
  }
  if (player_nickname) {
    set_has_player_nickname();
    player_nickname_ = player_nickname;
  } else {
    clear_has_player_nickname();
    player_nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 player_head_frame = 3;
inline bool player_info::has_player_head_frame() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void player_info::set_has_player_head_frame() {
  _has_bits_[0] |= 0x00000004u;
}
inline void player_info::clear_has_player_head_frame() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void player_info::clear_player_head_frame() {
  player_head_frame_ = 0;
  clear_has_player_head_frame();
}
inline ::google::protobuf::int32 player_info::player_head_frame() const {
  return player_head_frame_;
}
inline void player_info::set_player_head_frame(::google::protobuf::int32 value) {
  set_has_player_head_frame();
  player_head_frame_ = value;
}

// optional string player_head_custom = 4;
inline bool player_info::has_player_head_custom() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void player_info::set_has_player_head_custom() {
  _has_bits_[0] |= 0x00000008u;
}
inline void player_info::clear_has_player_head_custom() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void player_info::clear_player_head_custom() {
  if (player_head_custom_ != &::google::protobuf::internal::kEmptyString) {
    player_head_custom_->clear();
  }
  clear_has_player_head_custom();
}
inline const ::std::string& player_info::player_head_custom() const {
  return *player_head_custom_;
}
inline void player_info::set_player_head_custom(const ::std::string& value) {
  set_has_player_head_custom();
  if (player_head_custom_ == &::google::protobuf::internal::kEmptyString) {
    player_head_custom_ = new ::std::string;
  }
  player_head_custom_->assign(value);
}
inline void player_info::set_player_head_custom(const char* value) {
  set_has_player_head_custom();
  if (player_head_custom_ == &::google::protobuf::internal::kEmptyString) {
    player_head_custom_ = new ::std::string;
  }
  player_head_custom_->assign(value);
}
inline void player_info::set_player_head_custom(const char* value, size_t size) {
  set_has_player_head_custom();
  if (player_head_custom_ == &::google::protobuf::internal::kEmptyString) {
    player_head_custom_ = new ::std::string;
  }
  player_head_custom_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* player_info::mutable_player_head_custom() {
  set_has_player_head_custom();
  if (player_head_custom_ == &::google::protobuf::internal::kEmptyString) {
    player_head_custom_ = new ::std::string;
  }
  return player_head_custom_;
}
inline ::std::string* player_info::release_player_head_custom() {
  clear_has_player_head_custom();
  if (player_head_custom_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = player_head_custom_;
    player_head_custom_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void player_info::set_allocated_player_head_custom(::std::string* player_head_custom) {
  if (player_head_custom_ != &::google::protobuf::internal::kEmptyString) {
    delete player_head_custom_;
  }
  if (player_head_custom) {
    set_has_player_head_custom();
    player_head_custom_ = player_head_custom;
  } else {
    clear_has_player_head_custom();
    player_head_custom_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 player_gold = 5;
inline bool player_info::has_player_gold() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void player_info::set_has_player_gold() {
  _has_bits_[0] |= 0x00000010u;
}
inline void player_info::clear_has_player_gold() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void player_info::clear_player_gold() {
  player_gold_ = GOOGLE_LONGLONG(0);
  clear_has_player_gold();
}
inline ::google::protobuf::int64 player_info::player_gold() const {
  return player_gold_;
}
inline void player_info::set_player_gold(::google::protobuf::int64 value) {
  set_has_player_gold();
  player_gold_ = value;
}

// optional int32 player_sex = 6;
inline bool player_info::has_player_sex() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void player_info::set_has_player_sex() {
  _has_bits_[0] |= 0x00000020u;
}
inline void player_info::clear_has_player_sex() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void player_info::clear_player_sex() {
  player_sex_ = 0;
  clear_has_player_sex();
}
inline ::google::protobuf::int32 player_info::player_sex() const {
  return player_sex_;
}
inline void player_info::set_player_sex(::google::protobuf::int32 value) {
  set_has_player_sex();
  player_sex_ = value;
}

// optional int32 player_vip_lv = 7;
inline bool player_info::has_player_vip_lv() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void player_info::set_has_player_vip_lv() {
  _has_bits_[0] |= 0x00000040u;
}
inline void player_info::clear_has_player_vip_lv() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void player_info::clear_player_vip_lv() {
  player_vip_lv_ = 0;
  clear_has_player_vip_lv();
}
inline ::google::protobuf::int32 player_info::player_vip_lv() const {
  return player_vip_lv_;
}
inline void player_info::set_player_vip_lv(::google::protobuf::int32 value) {
  set_has_player_vip_lv();
  player_vip_lv_ = value;
}

// -------------------------------------------------------------------

// packetc2l_ask_for_player_list

// optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_ask_player_list];
inline bool packetc2l_ask_for_player_list::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_ask_for_player_list::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_ask_for_player_list::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_ask_for_player_list::clear_packet_id() {
  packet_id_ = 10013;
  clear_has_packet_id();
}
inline ::game_oneyuanfortune_protocols::e_server_msg_type packetc2l_ask_for_player_list::packet_id() const {
  return static_cast< ::game_oneyuanfortune_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_ask_for_player_list::set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value) {
  assert(::game_oneyuanfortune_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetl2c_ask_for_player_list_result

// optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_ask_player_list];
inline bool packetl2c_ask_for_player_list_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_ask_for_player_list_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_ask_for_player_list_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_ask_for_player_list_result::clear_packet_id() {
  packet_id_ = 15020;
  clear_has_packet_id();
}
inline ::game_oneyuanfortune_protocols::e_server_msg_type packetl2c_ask_for_player_list_result::packet_id() const {
  return static_cast< ::game_oneyuanfortune_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_ask_for_player_list_result::set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value) {
  assert(::game_oneyuanfortune_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// repeated .game_oneyuanfortune_protocols.player_info player_list = 2;
inline int packetl2c_ask_for_player_list_result::player_list_size() const {
  return player_list_.size();
}
inline void packetl2c_ask_for_player_list_result::clear_player_list() {
  player_list_.Clear();
}
inline const ::game_oneyuanfortune_protocols::player_info& packetl2c_ask_for_player_list_result::player_list(int index) const {
  return player_list_.Get(index);
}
inline ::game_oneyuanfortune_protocols::player_info* packetl2c_ask_for_player_list_result::mutable_player_list(int index) {
  return player_list_.Mutable(index);
}
inline ::game_oneyuanfortune_protocols::player_info* packetl2c_ask_for_player_list_result::add_player_list() {
  return player_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::player_info >&
packetl2c_ask_for_player_list_result::player_list() const {
  return player_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::player_info >*
packetl2c_ask_for_player_list_result::mutable_player_list() {
  return &player_list_;
}

// -------------------------------------------------------------------

// packetc2l_ask_for_history_list

// optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_ask_history_list];
inline bool packetc2l_ask_for_history_list::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_ask_for_history_list::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_ask_for_history_list::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_ask_for_history_list::clear_packet_id() {
  packet_id_ = 10015;
  clear_has_packet_id();
}
inline ::game_oneyuanfortune_protocols::e_server_msg_type packetc2l_ask_for_history_list::packet_id() const {
  return static_cast< ::game_oneyuanfortune_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_ask_for_history_list::set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value) {
  assert(::game_oneyuanfortune_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetl2c_ask_for_history_list_result

// optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_ask_history_list];
inline bool packetl2c_ask_for_history_list_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_ask_for_history_list_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_ask_for_history_list_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_ask_for_history_list_result::clear_packet_id() {
  packet_id_ = 15022;
  clear_has_packet_id();
}
inline ::game_oneyuanfortune_protocols::e_server_msg_type packetl2c_ask_for_history_list_result::packet_id() const {
  return static_cast< ::game_oneyuanfortune_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_ask_for_history_list_result::set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value) {
  assert(::game_oneyuanfortune_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// repeated .game_oneyuanfortune_protocols.history_info history_list = 2;
inline int packetl2c_ask_for_history_list_result::history_list_size() const {
  return history_list_.size();
}
inline void packetl2c_ask_for_history_list_result::clear_history_list() {
  history_list_.Clear();
}
inline const ::game_oneyuanfortune_protocols::history_info& packetl2c_ask_for_history_list_result::history_list(int index) const {
  return history_list_.Get(index);
}
inline ::game_oneyuanfortune_protocols::history_info* packetl2c_ask_for_history_list_result::mutable_history_list(int index) {
  return history_list_.Mutable(index);
}
inline ::game_oneyuanfortune_protocols::history_info* packetl2c_ask_for_history_list_result::add_history_list() {
  return history_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::history_info >&
packetl2c_ask_for_history_list_result::history_list() const {
  return history_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::history_info >*
packetl2c_ask_for_history_list_result::mutable_history_list() {
  return &history_list_;
}

// optional .game_oneyuanfortune_protocols.history_info lucky_player = 3;
inline bool packetl2c_ask_for_history_list_result::has_lucky_player() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetl2c_ask_for_history_list_result::set_has_lucky_player() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetl2c_ask_for_history_list_result::clear_has_lucky_player() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetl2c_ask_for_history_list_result::clear_lucky_player() {
  if (lucky_player_ != NULL) lucky_player_->::game_oneyuanfortune_protocols::history_info::Clear();
  clear_has_lucky_player();
}
inline const ::game_oneyuanfortune_protocols::history_info& packetl2c_ask_for_history_list_result::lucky_player() const {
  return lucky_player_ != NULL ? *lucky_player_ : *default_instance_->lucky_player_;
}
inline ::game_oneyuanfortune_protocols::history_info* packetl2c_ask_for_history_list_result::mutable_lucky_player() {
  set_has_lucky_player();
  if (lucky_player_ == NULL) lucky_player_ = new ::game_oneyuanfortune_protocols::history_info;
  return lucky_player_;
}
inline ::game_oneyuanfortune_protocols::history_info* packetl2c_ask_for_history_list_result::release_lucky_player() {
  clear_has_lucky_player();
  ::game_oneyuanfortune_protocols::history_info* temp = lucky_player_;
  lucky_player_ = NULL;
  return temp;
}
inline void packetl2c_ask_for_history_list_result::set_allocated_lucky_player(::game_oneyuanfortune_protocols::history_info* lucky_player) {
  delete lucky_player_;
  lucky_player_ = lucky_player;
  if (lucky_player) {
    set_has_lucky_player();
  } else {
    clear_has_lucky_player();
  }
}

// -------------------------------------------------------------------

// packetl2c_bc_begin_bet

// optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_begin_bet];
inline bool packetl2c_bc_begin_bet::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_bc_begin_bet::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_bc_begin_bet::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_bc_begin_bet::clear_packet_id() {
  packet_id_ = 15007;
  clear_has_packet_id();
}
inline ::game_oneyuanfortune_protocols::e_server_msg_type packetl2c_bc_begin_bet::packet_id() const {
  return static_cast< ::game_oneyuanfortune_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_bc_begin_bet::set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value) {
  assert(::game_oneyuanfortune_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetl2c_timing_starts

// optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_l2c_timing_starts];
inline bool packetl2c_timing_starts::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_timing_starts::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_timing_starts::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_timing_starts::clear_packet_id() {
  packet_id_ = 15027;
  clear_has_packet_id();
}
inline ::game_oneyuanfortune_protocols::e_server_msg_type packetl2c_timing_starts::packet_id() const {
  return static_cast< ::game_oneyuanfortune_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_timing_starts::set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value) {
  assert(::game_oneyuanfortune_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 cd_time = 2;
inline bool packetl2c_timing_starts::has_cd_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_timing_starts::set_has_cd_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_timing_starts::clear_has_cd_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_timing_starts::clear_cd_time() {
  cd_time_ = 0;
  clear_has_cd_time();
}
inline ::google::protobuf::int32 packetl2c_timing_starts::cd_time() const {
  return cd_time_;
}
inline void packetl2c_timing_starts::set_cd_time(::google::protobuf::int32 value) {
  set_has_cd_time();
  cd_time_ = value;
}

// -------------------------------------------------------------------

// packetl2c_bc_begin_award

// optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_begin_award];
inline bool packetl2c_bc_begin_award::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_bc_begin_award::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_bc_begin_award::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_bc_begin_award::clear_packet_id() {
  packet_id_ = 15008;
  clear_has_packet_id();
}
inline ::game_oneyuanfortune_protocols::e_server_msg_type packetl2c_bc_begin_award::packet_id() const {
  return static_cast< ::game_oneyuanfortune_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_bc_begin_award::set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value) {
  assert(::game_oneyuanfortune_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 winner_id = 2;
inline bool packetl2c_bc_begin_award::has_winner_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_bc_begin_award::set_has_winner_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_bc_begin_award::clear_has_winner_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_bc_begin_award::clear_winner_id() {
  winner_id_ = 0;
  clear_has_winner_id();
}
inline ::google::protobuf::int32 packetl2c_bc_begin_award::winner_id() const {
  return winner_id_;
}
inline void packetl2c_bc_begin_award::set_winner_id(::google::protobuf::int32 value) {
  set_has_winner_id();
  winner_id_ = value;
}

// optional int64 total_bet = 3;
inline bool packetl2c_bc_begin_award::has_total_bet() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetl2c_bc_begin_award::set_has_total_bet() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetl2c_bc_begin_award::clear_has_total_bet() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetl2c_bc_begin_award::clear_total_bet() {
  total_bet_ = GOOGLE_LONGLONG(0);
  clear_has_total_bet();
}
inline ::google::protobuf::int64 packetl2c_bc_begin_award::total_bet() const {
  return total_bet_;
}
inline void packetl2c_bc_begin_award::set_total_bet(::google::protobuf::int64 value) {
  set_has_total_bet();
  total_bet_ = value;
}

// repeated .game_oneyuanfortune_protocols.player_info player_list = 4;
inline int packetl2c_bc_begin_award::player_list_size() const {
  return player_list_.size();
}
inline void packetl2c_bc_begin_award::clear_player_list() {
  player_list_.Clear();
}
inline const ::game_oneyuanfortune_protocols::player_info& packetl2c_bc_begin_award::player_list(int index) const {
  return player_list_.Get(index);
}
inline ::game_oneyuanfortune_protocols::player_info* packetl2c_bc_begin_award::mutable_player_list(int index) {
  return player_list_.Mutable(index);
}
inline ::game_oneyuanfortune_protocols::player_info* packetl2c_bc_begin_award::add_player_list() {
  return player_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::player_info >&
packetl2c_bc_begin_award::player_list() const {
  return player_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::player_info >*
packetl2c_bc_begin_award::mutable_player_list() {
  return &player_list_;
}

// optional int32 cd_time = 5;
inline bool packetl2c_bc_begin_award::has_cd_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void packetl2c_bc_begin_award::set_has_cd_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void packetl2c_bc_begin_award::clear_has_cd_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void packetl2c_bc_begin_award::clear_cd_time() {
  cd_time_ = 0;
  clear_has_cd_time();
}
inline ::google::protobuf::int32 packetl2c_bc_begin_award::cd_time() const {
  return cd_time_;
}
inline void packetl2c_bc_begin_award::set_cd_time(::google::protobuf::int32 value) {
  set_has_cd_time();
  cd_time_ = value;
}

// optional int32 random_seed = 6;
inline bool packetl2c_bc_begin_award::has_random_seed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void packetl2c_bc_begin_award::set_has_random_seed() {
  _has_bits_[0] |= 0x00000020u;
}
inline void packetl2c_bc_begin_award::clear_has_random_seed() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void packetl2c_bc_begin_award::clear_random_seed() {
  random_seed_ = 0;
  clear_has_random_seed();
}
inline ::google::protobuf::int32 packetl2c_bc_begin_award::random_seed() const {
  return random_seed_;
}
inline void packetl2c_bc_begin_award::set_random_seed(::google::protobuf::int32 value) {
  set_has_random_seed();
  random_seed_ = value;
}

// optional int32 reward_gold = 7;
inline bool packetl2c_bc_begin_award::has_reward_gold() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void packetl2c_bc_begin_award::set_has_reward_gold() {
  _has_bits_[0] |= 0x00000040u;
}
inline void packetl2c_bc_begin_award::clear_has_reward_gold() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void packetl2c_bc_begin_award::clear_reward_gold() {
  reward_gold_ = 0;
  clear_has_reward_gold();
}
inline ::google::protobuf::int32 packetl2c_bc_begin_award::reward_gold() const {
  return reward_gold_;
}
inline void packetl2c_bc_begin_award::set_reward_gold(::google::protobuf::int32 value) {
  set_has_reward_gold();
  reward_gold_ = value;
}

// -------------------------------------------------------------------

// packetl2c_bc_bet_info

// optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_bet_info];
inline bool packetl2c_bc_bet_info::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_bc_bet_info::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_bc_bet_info::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_bc_bet_info::clear_packet_id() {
  packet_id_ = 15009;
  clear_has_packet_id();
}
inline ::game_oneyuanfortune_protocols::e_server_msg_type packetl2c_bc_bet_info::packet_id() const {
  return static_cast< ::game_oneyuanfortune_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_bc_bet_info::set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value) {
  assert(::game_oneyuanfortune_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional .game_oneyuanfortune_protocols.msg_bet_info bet_info_list = 2;
inline bool packetl2c_bc_bet_info::has_bet_info_list() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_bc_bet_info::set_has_bet_info_list() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_bc_bet_info::clear_has_bet_info_list() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_bc_bet_info::clear_bet_info_list() {
  if (bet_info_list_ != NULL) bet_info_list_->::game_oneyuanfortune_protocols::msg_bet_info::Clear();
  clear_has_bet_info_list();
}
inline const ::game_oneyuanfortune_protocols::msg_bet_info& packetl2c_bc_bet_info::bet_info_list() const {
  return bet_info_list_ != NULL ? *bet_info_list_ : *default_instance_->bet_info_list_;
}
inline ::game_oneyuanfortune_protocols::msg_bet_info* packetl2c_bc_bet_info::mutable_bet_info_list() {
  set_has_bet_info_list();
  if (bet_info_list_ == NULL) bet_info_list_ = new ::game_oneyuanfortune_protocols::msg_bet_info;
  return bet_info_list_;
}
inline ::game_oneyuanfortune_protocols::msg_bet_info* packetl2c_bc_bet_info::release_bet_info_list() {
  clear_has_bet_info_list();
  ::game_oneyuanfortune_protocols::msg_bet_info* temp = bet_info_list_;
  bet_info_list_ = NULL;
  return temp;
}
inline void packetl2c_bc_bet_info::set_allocated_bet_info_list(::game_oneyuanfortune_protocols::msg_bet_info* bet_info_list) {
  delete bet_info_list_;
  bet_info_list_ = bet_info_list;
  if (bet_info_list) {
    set_has_bet_info_list();
  } else {
    clear_has_bet_info_list();
  }
}

// optional .game_oneyuanfortune_protocols.player_info pinfo = 3;
inline bool packetl2c_bc_bet_info::has_pinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetl2c_bc_bet_info::set_has_pinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetl2c_bc_bet_info::clear_has_pinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetl2c_bc_bet_info::clear_pinfo() {
  if (pinfo_ != NULL) pinfo_->::game_oneyuanfortune_protocols::player_info::Clear();
  clear_has_pinfo();
}
inline const ::game_oneyuanfortune_protocols::player_info& packetl2c_bc_bet_info::pinfo() const {
  return pinfo_ != NULL ? *pinfo_ : *default_instance_->pinfo_;
}
inline ::game_oneyuanfortune_protocols::player_info* packetl2c_bc_bet_info::mutable_pinfo() {
  set_has_pinfo();
  if (pinfo_ == NULL) pinfo_ = new ::game_oneyuanfortune_protocols::player_info;
  return pinfo_;
}
inline ::game_oneyuanfortune_protocols::player_info* packetl2c_bc_bet_info::release_pinfo() {
  clear_has_pinfo();
  ::game_oneyuanfortune_protocols::player_info* temp = pinfo_;
  pinfo_ = NULL;
  return temp;
}
inline void packetl2c_bc_bet_info::set_allocated_pinfo(::game_oneyuanfortune_protocols::player_info* pinfo) {
  delete pinfo_;
  pinfo_ = pinfo;
  if (pinfo) {
    set_has_pinfo();
  } else {
    clear_has_pinfo();
  }
}

// -------------------------------------------------------------------

// packetc2l_check_state

// optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];
inline bool packetc2l_check_state::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_check_state::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_check_state::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_check_state::clear_packet_id() {
  packet_id_ = 10008;
  clear_has_packet_id();
}
inline ::game_oneyuanfortune_protocols::e_server_msg_type packetc2l_check_state::packet_id() const {
  return static_cast< ::game_oneyuanfortune_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_check_state::set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value) {
  assert(::game_oneyuanfortune_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetl2c_check_state_result

// optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];
inline bool packetl2c_check_state_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_check_state_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_check_state_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_check_state_result::clear_packet_id() {
  packet_id_ = 15013;
  clear_has_packet_id();
}
inline ::game_oneyuanfortune_protocols::e_server_msg_type packetl2c_check_state_result::packet_id() const {
  return static_cast< ::game_oneyuanfortune_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_check_state_result::set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value) {
  assert(::game_oneyuanfortune_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional bool is_intable = 2 [default = false];
inline bool packetl2c_check_state_result::has_is_intable() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_check_state_result::set_has_is_intable() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_check_state_result::clear_has_is_intable() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_check_state_result::clear_is_intable() {
  is_intable_ = false;
  clear_has_is_intable();
}
inline bool packetl2c_check_state_result::is_intable() const {
  return is_intable_;
}
inline void packetl2c_check_state_result::set_is_intable(bool value) {
  set_has_is_intable();
  is_intable_ = value;
}

// -------------------------------------------------------------------

// packetc2l_gm

// optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_gm];
inline bool packetc2l_gm::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_gm::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_gm::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_gm::clear_packet_id() {
  packet_id_ = 10009;
  clear_has_packet_id();
}
inline ::game_oneyuanfortune_protocols::e_server_msg_type packetc2l_gm::packet_id() const {
  return static_cast< ::game_oneyuanfortune_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_gm::set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value) {
  assert(::game_oneyuanfortune_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 gm_max = 2;
inline bool packetc2l_gm::has_gm_max() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetc2l_gm::set_has_gm_max() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetc2l_gm::clear_has_gm_max() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetc2l_gm::clear_gm_max() {
  gm_max_ = 0;
  clear_has_gm_max();
}
inline ::google::protobuf::int32 packetc2l_gm::gm_max() const {
  return gm_max_;
}
inline void packetc2l_gm::set_gm_max(::google::protobuf::int32 value) {
  set_has_gm_max();
  gm_max_ = value;
}

// -------------------------------------------------------------------

// packetc2l_game_control

// optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_game_control];
inline bool packetc2l_game_control::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_game_control::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_game_control::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_game_control::clear_packet_id() {
  packet_id_ = 10016;
  clear_has_packet_id();
}
inline ::game_oneyuanfortune_protocols::e_server_msg_type packetc2l_game_control::packet_id() const {
  return static_cast< ::game_oneyuanfortune_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_game_control::set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value) {
  assert(::game_oneyuanfortune_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetl2c_game_control

// optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_game_control];
inline bool packetl2c_game_control::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_game_control::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_game_control::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_game_control::clear_packet_id() {
  packet_id_ = 15026;
  clear_has_packet_id();
}
inline ::game_oneyuanfortune_protocols::e_server_msg_type packetl2c_game_control::packet_id() const {
  return static_cast< ::game_oneyuanfortune_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_game_control::set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value) {
  assert(::game_oneyuanfortune_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];
inline bool packetl2c_game_control::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_game_control::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_game_control::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_game_control::clear_result() {
  result_ = 1;
  clear_has_result();
}
inline ::msg_type_def::e_msg_result_def packetl2c_game_control::result() const {
  return static_cast< ::msg_type_def::e_msg_result_def >(result_);
}
inline void packetl2c_game_control::set_result(::msg_type_def::e_msg_result_def value) {
  assert(::msg_type_def::e_msg_result_def_IsValid(value));
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// packetl2c_bc_debuginfo

// optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_debuginfo];
inline bool packetl2c_bc_debuginfo::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_bc_debuginfo::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_bc_debuginfo::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_bc_debuginfo::clear_packet_id() {
  packet_id_ = 15024;
  clear_has_packet_id();
}
inline ::game_oneyuanfortune_protocols::e_server_msg_type packetl2c_bc_debuginfo::packet_id() const {
  return static_cast< ::game_oneyuanfortune_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_bc_debuginfo::set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value) {
  assert(::game_oneyuanfortune_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 player_id = 2;
inline bool packetl2c_bc_debuginfo::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_bc_debuginfo::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_bc_debuginfo::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_bc_debuginfo::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 packetl2c_bc_debuginfo::player_id() const {
  return player_id_;
}
inline void packetl2c_bc_debuginfo::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional int64 total_profit = 3 [default = 0];
inline bool packetl2c_bc_debuginfo::has_total_profit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetl2c_bc_debuginfo::set_has_total_profit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetl2c_bc_debuginfo::clear_has_total_profit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetl2c_bc_debuginfo::clear_total_profit() {
  total_profit_ = GOOGLE_LONGLONG(0);
  clear_has_total_profit();
}
inline ::google::protobuf::int64 packetl2c_bc_debuginfo::total_profit() const {
  return total_profit_;
}
inline void packetl2c_bc_debuginfo::set_total_profit(::google::protobuf::int64 value) {
  set_has_total_profit();
  total_profit_ = value;
}

// optional int64 total_stock = 4 [default = 0];
inline bool packetl2c_bc_debuginfo::has_total_stock() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void packetl2c_bc_debuginfo::set_has_total_stock() {
  _has_bits_[0] |= 0x00000008u;
}
inline void packetl2c_bc_debuginfo::clear_has_total_stock() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void packetl2c_bc_debuginfo::clear_total_stock() {
  total_stock_ = GOOGLE_LONGLONG(0);
  clear_has_total_stock();
}
inline ::google::protobuf::int64 packetl2c_bc_debuginfo::total_stock() const {
  return total_stock_;
}
inline void packetl2c_bc_debuginfo::set_total_stock(::google::protobuf::int64 value) {
  set_has_total_stock();
  total_stock_ = value;
}

// optional int64 total_Rate = 6 [default = 0];
inline bool packetl2c_bc_debuginfo::has_total_rate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void packetl2c_bc_debuginfo::set_has_total_rate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void packetl2c_bc_debuginfo::clear_has_total_rate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void packetl2c_bc_debuginfo::clear_total_rate() {
  total_rate_ = GOOGLE_LONGLONG(0);
  clear_has_total_rate();
}
inline ::google::protobuf::int64 packetl2c_bc_debuginfo::total_rate() const {
  return total_rate_;
}
inline void packetl2c_bc_debuginfo::set_total_rate(::google::protobuf::int64 value) {
  set_has_total_rate();
  total_rate_ = value;
}

// optional string debug_infos = 5;
inline bool packetl2c_bc_debuginfo::has_debug_infos() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void packetl2c_bc_debuginfo::set_has_debug_infos() {
  _has_bits_[0] |= 0x00000020u;
}
inline void packetl2c_bc_debuginfo::clear_has_debug_infos() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void packetl2c_bc_debuginfo::clear_debug_infos() {
  if (debug_infos_ != &::google::protobuf::internal::kEmptyString) {
    debug_infos_->clear();
  }
  clear_has_debug_infos();
}
inline const ::std::string& packetl2c_bc_debuginfo::debug_infos() const {
  return *debug_infos_;
}
inline void packetl2c_bc_debuginfo::set_debug_infos(const ::std::string& value) {
  set_has_debug_infos();
  if (debug_infos_ == &::google::protobuf::internal::kEmptyString) {
    debug_infos_ = new ::std::string;
  }
  debug_infos_->assign(value);
}
inline void packetl2c_bc_debuginfo::set_debug_infos(const char* value) {
  set_has_debug_infos();
  if (debug_infos_ == &::google::protobuf::internal::kEmptyString) {
    debug_infos_ = new ::std::string;
  }
  debug_infos_->assign(value);
}
inline void packetl2c_bc_debuginfo::set_debug_infos(const char* value, size_t size) {
  set_has_debug_infos();
  if (debug_infos_ == &::google::protobuf::internal::kEmptyString) {
    debug_infos_ = new ::std::string;
  }
  debug_infos_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* packetl2c_bc_debuginfo::mutable_debug_infos() {
  set_has_debug_infos();
  if (debug_infos_ == &::google::protobuf::internal::kEmptyString) {
    debug_infos_ = new ::std::string;
  }
  return debug_infos_;
}
inline ::std::string* packetl2c_bc_debuginfo::release_debug_infos() {
  clear_has_debug_infos();
  if (debug_infos_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = debug_infos_;
    debug_infos_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void packetl2c_bc_debuginfo::set_allocated_debug_infos(::std::string* debug_infos) {
  if (debug_infos_ != &::google::protobuf::internal::kEmptyString) {
    delete debug_infos_;
  }
  if (debug_infos) {
    set_has_debug_infos();
    debug_infos_ = debug_infos;
  } else {
    clear_has_debug_infos();
    debug_infos_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// packetl2c_notice_all_bet_info

// optional .game_oneyuanfortune_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_notice_gm_all_bet_info];
inline bool packetl2c_notice_all_bet_info::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_notice_all_bet_info::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_notice_all_bet_info::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_notice_all_bet_info::clear_packet_id() {
  packet_id_ = 15025;
  clear_has_packet_id();
}
inline ::game_oneyuanfortune_protocols::e_server_msg_type packetl2c_notice_all_bet_info::packet_id() const {
  return static_cast< ::game_oneyuanfortune_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_notice_all_bet_info::set_packet_id(::game_oneyuanfortune_protocols::e_server_msg_type value) {
  assert(::game_oneyuanfortune_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// repeated .game_oneyuanfortune_protocols.msg_bet_info2 bet_info_list = 2;
inline int packetl2c_notice_all_bet_info::bet_info_list_size() const {
  return bet_info_list_.size();
}
inline void packetl2c_notice_all_bet_info::clear_bet_info_list() {
  bet_info_list_.Clear();
}
inline const ::game_oneyuanfortune_protocols::msg_bet_info2& packetl2c_notice_all_bet_info::bet_info_list(int index) const {
  return bet_info_list_.Get(index);
}
inline ::game_oneyuanfortune_protocols::msg_bet_info2* packetl2c_notice_all_bet_info::mutable_bet_info_list(int index) {
  return bet_info_list_.Mutable(index);
}
inline ::game_oneyuanfortune_protocols::msg_bet_info2* packetl2c_notice_all_bet_info::add_bet_info_list() {
  return bet_info_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::msg_bet_info2 >&
packetl2c_notice_all_bet_info::bet_info_list() const {
  return bet_info_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_oneyuanfortune_protocols::msg_bet_info2 >*
packetl2c_notice_all_bet_info::mutable_bet_info_list() {
  return &bet_info_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace game_oneyuanfortune_protocols

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_game_5foneyuanfortune_5fprotocol_2eproto__INCLUDED
