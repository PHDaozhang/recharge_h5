// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_srmj_def.proto

#ifndef PROTOBUF_game_5fsrmj_5fdef_2eproto__INCLUDED
#define PROTOBUF_game_5fsrmj_5fdef_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

namespace game_srmj_protocols {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_game_5fsrmj_5fdef_2eproto();
void protobuf_AssignDesc_game_5fsrmj_5fdef_2eproto();
void protobuf_ShutdownFile_game_5fsrmj_5fdef_2eproto();


enum e_server_msg_type {
  e_mst_start_c2l = 10000,
  e_mst_c2l_check_state = 10001,
  e_mst_c2l_get_scene_info = 10002,
  e_mst_c2l_user_trustee = 10008,
  e_mst_c2l_enter_room = 10009,
  e_mst_c2l_leave_room = 10010,
  e_mst_c2l_ready = 10011,
  e_mst_c2l_bu_hua = 10012,
  e_mst_c2l_out_card = 10013,
  e_mst_c2l_operate_card = 10014,
  e_mst_c2l_gm_list = 10015,
  e_mst_c2l_gm_kill = 10016,
  e_mst_c2l_exchange_card = 10017,
  e_mst_c2l_decide_vacancy = 10018,
  e_mst_start_l2c = 15000,
  e_mst_l2c_check_state_result = 15001,
  e_mst_l2c_scene_info_result = 15002,
  e_mst_l2c_user_trustee = 15008,
  e_mst_l2c_enter_room_result = 15009,
  e_mst_l2c_leave_room_result = 15010,
  e_mst_l2c_game_start = 15013,
  e_mst_l2c_out_card_notify = 15014,
  e_mst_l2c_operate_notify = 15015,
  e_mst_l2c_game_end = 15016,
  e_mst_l2c_send_all_playerinfos = 15017,
  e_mst_l2c_game_notify = 15018,
  e_mst_l2c_operate_result = 15019,
  e_mst_l2c_send_card = 15020,
  e_mst_l2c_bu_hua_notify = 15021,
  e_mst_l2c_pass_hu_notify = 15022,
  e_mst_l2c_other_player_cards = 15023,
  e_mst_l2c_gm_list = 15024,
  e_mst_l2c_exchange_card = 15025,
  e_mst_l2c_decide_vacancy = 15026,
  e_mst_l2c_add_win_list = 15027,
  e_mst_clend_index = 20000
};
bool e_server_msg_type_IsValid(int value);
const e_server_msg_type e_server_msg_type_MIN = e_mst_start_c2l;
const e_server_msg_type e_server_msg_type_MAX = e_mst_clend_index;
const int e_server_msg_type_ARRAYSIZE = e_server_msg_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* e_server_msg_type_descriptor();
inline const ::std::string& e_server_msg_type_Name(e_server_msg_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    e_server_msg_type_descriptor(), value);
}
inline bool e_server_msg_type_Parse(
    const ::std::string& name, e_server_msg_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<e_server_msg_type>(
    e_server_msg_type_descriptor(), name, value);
}
enum e_notify_type {
  e_nt_table_dismiss = 1,
  e_nt_gold_not_enough = 2,
  e_nt_shutdown = 3,
  e_nt_listen = 4,
  e_nt_assembling = 5,
  e_nt_player_leave = 6,
  e_nt_kill_ok = 7
};
bool e_notify_type_IsValid(int value);
const e_notify_type e_notify_type_MIN = e_nt_table_dismiss;
const e_notify_type e_notify_type_MAX = e_nt_kill_ok;
const int e_notify_type_ARRAYSIZE = e_notify_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* e_notify_type_descriptor();
inline const ::std::string& e_notify_type_Name(e_notify_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    e_notify_type_descriptor(), value);
}
inline bool e_notify_type_Parse(
    const ::std::string& name, e_notify_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<e_notify_type>(
    e_notify_type_descriptor(), name, value);
}
enum e_action_code {
  e_ac_null = 0,
  e_ac_peng = 8,
  e_ac_gang = 16,
  e_ac_hu = 64,
  e_ac_qian_gang = 129,
  e_ac_wind = 65,
  e_ac_add_gang = 66,
  e_ac_rain = 67,
  e_ac_tax = 68,
  e_ac_scream = 69,
  e_ac_pig = 70
};
bool e_action_code_IsValid(int value);
const e_action_code e_action_code_MIN = e_ac_null;
const e_action_code e_action_code_MAX = e_ac_qian_gang;
const int e_action_code_ARRAYSIZE = e_action_code_MAX + 1;

const ::google::protobuf::EnumDescriptor* e_action_code_descriptor();
inline const ::std::string& e_action_code_Name(e_action_code value) {
  return ::google::protobuf::internal::NameOfEnum(
    e_action_code_descriptor(), value);
}
inline bool e_action_code_Parse(
    const ::std::string& name, e_action_code* value) {
  return ::google::protobuf::internal::ParseNamedEnum<e_action_code>(
    e_action_code_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace game_srmj_protocols

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::game_srmj_protocols::e_server_msg_type>() {
  return ::game_srmj_protocols::e_server_msg_type_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::game_srmj_protocols::e_notify_type>() {
  return ::game_srmj_protocols::e_notify_type_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::game_srmj_protocols::e_action_code>() {
  return ::game_srmj_protocols::e_action_code_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_game_5fsrmj_5fdef_2eproto__INCLUDED
