// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_5dragons_protocol.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "game_5dragons_protocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace game_5dragons_protocols {

namespace {

const ::google::protobuf::Descriptor* packetc2l_check_state_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packetc2l_check_state_reflection_ = NULL;
const ::google::protobuf::Descriptor* packetc2l_check_state_result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packetc2l_check_state_result_reflection_ = NULL;
const ::google::protobuf::Descriptor* packetc2l_buy_lv_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packetc2l_buy_lv_reflection_ = NULL;
const ::google::protobuf::Descriptor* packetc2l_buy_lv_result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packetc2l_buy_lv_result_reflection_ = NULL;
const ::google::protobuf::Descriptor* packetc2l_double_game_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packetc2l_double_game_reflection_ = NULL;
const ::google::protobuf::Descriptor* packetc2l_double_game_result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packetc2l_double_game_result_reflection_ = NULL;
const ::google::protobuf::Descriptor* packetc2l_buy_double_times_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packetc2l_buy_double_times_reflection_ = NULL;
const ::google::protobuf::Descriptor* packetc2l_buy_double_times_result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packetc2l_buy_double_times_result_reflection_ = NULL;
const ::google::protobuf::Descriptor* packetc2l_enter_game_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packetc2l_enter_game_reflection_ = NULL;
const ::google::protobuf::Descriptor* packetc2l_enter_game_result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packetc2l_enter_game_result_reflection_ = NULL;
const ::google::protobuf::Descriptor* packetc2l_leave_game_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packetc2l_leave_game_reflection_ = NULL;
const ::google::protobuf::Descriptor* packetc2l_leave_game_result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packetc2l_leave_game_result_reflection_ = NULL;
const ::google::protobuf::Descriptor* packetc2l_star_game_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packetc2l_star_game_reflection_ = NULL;
const ::google::protobuf::Descriptor* packetc2l_star_game_result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packetc2l_star_game_result_reflection_ = NULL;
const ::google::protobuf::Descriptor* packetc2l_test_game_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packetc2l_test_game_reflection_ = NULL;
const ::google::protobuf::Descriptor* packetc2l_test_game_result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packetc2l_test_game_result_reflection_ = NULL;
const ::google::protobuf::Descriptor* packetl2c_debuginfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packetl2c_debuginfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_game_5f5dragons_5fprotocol_2eproto() {
  protobuf_AddDesc_game_5f5dragons_5fprotocol_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "game_5dragons_protocol.proto");
  GOOGLE_CHECK(file != NULL);
  packetc2l_check_state_descriptor_ = file->message_type(0);
  static const int packetc2l_check_state_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_check_state, packet_id_),
  };
  packetc2l_check_state_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packetc2l_check_state_descriptor_,
      packetc2l_check_state::default_instance_,
      packetc2l_check_state_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_check_state, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_check_state, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packetc2l_check_state));
  packetc2l_check_state_result_descriptor_ = file->message_type(1);
  static const int packetc2l_check_state_result_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_check_state_result, packet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_check_state_result, room_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_check_state_result, player_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_check_state_result, player_exp_),
  };
  packetc2l_check_state_result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packetc2l_check_state_result_descriptor_,
      packetc2l_check_state_result::default_instance_,
      packetc2l_check_state_result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_check_state_result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_check_state_result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packetc2l_check_state_result));
  packetc2l_buy_lv_descriptor_ = file->message_type(2);
  static const int packetc2l_buy_lv_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_buy_lv, packet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_buy_lv, req_level_),
  };
  packetc2l_buy_lv_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packetc2l_buy_lv_descriptor_,
      packetc2l_buy_lv::default_instance_,
      packetc2l_buy_lv_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_buy_lv, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_buy_lv, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packetc2l_buy_lv));
  packetc2l_buy_lv_result_descriptor_ = file->message_type(3);
  static const int packetc2l_buy_lv_result_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_buy_lv_result, packet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_buy_lv_result, result_),
  };
  packetc2l_buy_lv_result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packetc2l_buy_lv_result_descriptor_,
      packetc2l_buy_lv_result::default_instance_,
      packetc2l_buy_lv_result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_buy_lv_result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_buy_lv_result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packetc2l_buy_lv_result));
  packetc2l_double_game_descriptor_ = file->message_type(4);
  static const int packetc2l_double_game_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_double_game, packet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_double_game, tag_),
  };
  packetc2l_double_game_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packetc2l_double_game_descriptor_,
      packetc2l_double_game::default_instance_,
      packetc2l_double_game_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_double_game, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_double_game, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packetc2l_double_game));
  packetc2l_double_game_result_descriptor_ = file->message_type(5);
  static const int packetc2l_double_game_result_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_double_game_result, packet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_double_game_result, result_),
  };
  packetc2l_double_game_result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packetc2l_double_game_result_descriptor_,
      packetc2l_double_game_result::default_instance_,
      packetc2l_double_game_result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_double_game_result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_double_game_result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packetc2l_double_game_result));
  packetc2l_buy_double_times_descriptor_ = file->message_type(6);
  static const int packetc2l_buy_double_times_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_buy_double_times, packet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_buy_double_times, buy_type_),
  };
  packetc2l_buy_double_times_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packetc2l_buy_double_times_descriptor_,
      packetc2l_buy_double_times::default_instance_,
      packetc2l_buy_double_times_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_buy_double_times, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_buy_double_times, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packetc2l_buy_double_times));
  packetc2l_buy_double_times_result_descriptor_ = file->message_type(7);
  static const int packetc2l_buy_double_times_result_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_buy_double_times_result, packet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_buy_double_times_result, result_),
  };
  packetc2l_buy_double_times_result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packetc2l_buy_double_times_result_descriptor_,
      packetc2l_buy_double_times_result::default_instance_,
      packetc2l_buy_double_times_result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_buy_double_times_result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_buy_double_times_result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packetc2l_buy_double_times_result));
  packetc2l_enter_game_descriptor_ = file->message_type(8);
  static const int packetc2l_enter_game_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_enter_game, packet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_enter_game, room_id_),
  };
  packetc2l_enter_game_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packetc2l_enter_game_descriptor_,
      packetc2l_enter_game::default_instance_,
      packetc2l_enter_game_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_enter_game, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_enter_game, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packetc2l_enter_game));
  packetc2l_enter_game_result_descriptor_ = file->message_type(9);
  static const int packetc2l_enter_game_result_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_enter_game_result, packet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_enter_game_result, result_),
  };
  packetc2l_enter_game_result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packetc2l_enter_game_result_descriptor_,
      packetc2l_enter_game_result::default_instance_,
      packetc2l_enter_game_result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_enter_game_result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_enter_game_result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packetc2l_enter_game_result));
  packetc2l_leave_game_descriptor_ = file->message_type(10);
  static const int packetc2l_leave_game_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_leave_game, packet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_leave_game, room_id_),
  };
  packetc2l_leave_game_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packetc2l_leave_game_descriptor_,
      packetc2l_leave_game::default_instance_,
      packetc2l_leave_game_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_leave_game, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_leave_game, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packetc2l_leave_game));
  packetc2l_leave_game_result_descriptor_ = file->message_type(11);
  static const int packetc2l_leave_game_result_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_leave_game_result, packet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_leave_game_result, result_),
  };
  packetc2l_leave_game_result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packetc2l_leave_game_result_descriptor_,
      packetc2l_leave_game_result::default_instance_,
      packetc2l_leave_game_result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_leave_game_result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_leave_game_result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packetc2l_leave_game_result));
  packetc2l_star_game_descriptor_ = file->message_type(12);
  static const int packetc2l_star_game_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_star_game, packet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_star_game, bet_gold_idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_star_game, free_game_idx_),
  };
  packetc2l_star_game_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packetc2l_star_game_descriptor_,
      packetc2l_star_game::default_instance_,
      packetc2l_star_game_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_star_game, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_star_game, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packetc2l_star_game));
  packetc2l_star_game_result_descriptor_ = file->message_type(13);
  static const int packetc2l_star_game_result_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_star_game_result, packet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_star_game_result, tag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_star_game_result, arr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_star_game_result, win_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_star_game_result, may_odds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_star_game_result, free_game_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_star_game_result, fd_odds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_star_game_result, odds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_star_game_result, result_),
  };
  packetc2l_star_game_result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packetc2l_star_game_result_descriptor_,
      packetc2l_star_game_result::default_instance_,
      packetc2l_star_game_result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_star_game_result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_star_game_result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packetc2l_star_game_result));
  packetc2l_test_game_descriptor_ = file->message_type(14);
  static const int packetc2l_test_game_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_test_game, packet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_test_game, bet_gold_idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_test_game, test_count_),
  };
  packetc2l_test_game_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packetc2l_test_game_descriptor_,
      packetc2l_test_game::default_instance_,
      packetc2l_test_game_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_test_game, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_test_game, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packetc2l_test_game));
  packetc2l_test_game_result_descriptor_ = file->message_type(15);
  static const int packetc2l_test_game_result_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_test_game_result, packet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_test_game_result, result_),
  };
  packetc2l_test_game_result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packetc2l_test_game_result_descriptor_,
      packetc2l_test_game_result::default_instance_,
      packetc2l_test_game_result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_test_game_result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2l_test_game_result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packetc2l_test_game_result));
  packetl2c_debuginfo_descriptor_ = file->message_type(16);
  static const int packetl2c_debuginfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetl2c_debuginfo, packet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetl2c_debuginfo, debug_infos_),
  };
  packetl2c_debuginfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packetl2c_debuginfo_descriptor_,
      packetl2c_debuginfo::default_instance_,
      packetl2c_debuginfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetl2c_debuginfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetl2c_debuginfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packetl2c_debuginfo));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_game_5f5dragons_5fprotocol_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packetc2l_check_state_descriptor_, &packetc2l_check_state::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packetc2l_check_state_result_descriptor_, &packetc2l_check_state_result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packetc2l_buy_lv_descriptor_, &packetc2l_buy_lv::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packetc2l_buy_lv_result_descriptor_, &packetc2l_buy_lv_result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packetc2l_double_game_descriptor_, &packetc2l_double_game::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packetc2l_double_game_result_descriptor_, &packetc2l_double_game_result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packetc2l_buy_double_times_descriptor_, &packetc2l_buy_double_times::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packetc2l_buy_double_times_result_descriptor_, &packetc2l_buy_double_times_result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packetc2l_enter_game_descriptor_, &packetc2l_enter_game::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packetc2l_enter_game_result_descriptor_, &packetc2l_enter_game_result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packetc2l_leave_game_descriptor_, &packetc2l_leave_game::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packetc2l_leave_game_result_descriptor_, &packetc2l_leave_game_result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packetc2l_star_game_descriptor_, &packetc2l_star_game::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packetc2l_star_game_result_descriptor_, &packetc2l_star_game_result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packetc2l_test_game_descriptor_, &packetc2l_test_game::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packetc2l_test_game_result_descriptor_, &packetc2l_test_game_result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packetl2c_debuginfo_descriptor_, &packetl2c_debuginfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_game_5f5dragons_5fprotocol_2eproto() {
  delete packetc2l_check_state::default_instance_;
  delete packetc2l_check_state_reflection_;
  delete packetc2l_check_state_result::default_instance_;
  delete packetc2l_check_state_result_reflection_;
  delete packetc2l_buy_lv::default_instance_;
  delete packetc2l_buy_lv_reflection_;
  delete packetc2l_buy_lv_result::default_instance_;
  delete packetc2l_buy_lv_result_reflection_;
  delete packetc2l_double_game::default_instance_;
  delete packetc2l_double_game_reflection_;
  delete packetc2l_double_game_result::default_instance_;
  delete packetc2l_double_game_result_reflection_;
  delete packetc2l_buy_double_times::default_instance_;
  delete packetc2l_buy_double_times_reflection_;
  delete packetc2l_buy_double_times_result::default_instance_;
  delete packetc2l_buy_double_times_result_reflection_;
  delete packetc2l_enter_game::default_instance_;
  delete packetc2l_enter_game_reflection_;
  delete packetc2l_enter_game_result::default_instance_;
  delete packetc2l_enter_game_result_reflection_;
  delete packetc2l_leave_game::default_instance_;
  delete packetc2l_leave_game_reflection_;
  delete packetc2l_leave_game_result::default_instance_;
  delete packetc2l_leave_game_result_reflection_;
  delete packetc2l_star_game::default_instance_;
  delete packetc2l_star_game_reflection_;
  delete packetc2l_star_game_result::default_instance_;
  delete packetc2l_star_game_result_reflection_;
  delete packetc2l_test_game::default_instance_;
  delete packetc2l_test_game_reflection_;
  delete packetc2l_test_game_result::default_instance_;
  delete packetc2l_test_game_result_reflection_;
  delete packetl2c_debuginfo::default_instance_;
  delete packetl2c_debuginfo_reflection_;
}

void protobuf_AddDesc_game_5f5dragons_5fprotocol_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::game_5dragons_protocols::protobuf_AddDesc_game_5f5dragons_5fdef_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\034game_5dragons_protocol.proto\022\027game_5dr"
    "agons_protocols\032\027game_5dragons_def.proto"
    "\"m\n\025packetc2l_check_state\022T\n\tpacket_id\030\001"
    " \001(\0162*.game_5dragons_protocols.e_server_"
    "msg_type:\025e_mst_c2l_check_state\"\263\001\n\034pack"
    "etc2l_check_state_result\022[\n\tpacket_id\030\001 "
    "\001(\0162*.game_5dragons_protocols.e_server_m"
    "sg_type:\034e_mst_l2c_check_state_result\022\017\n"
    "\007room_id\030\002 \001(\005\022\021\n\tplayer_lv\030\003 \001(\005\022\022\n\npla"
    "yer_exp\030\004 \001(\005\"v\n\020packetc2l_buy_lv\022O\n\tpac"
    "ket_id\030\001 \001(\0162*.game_5dragons_protocols.e"
    "_server_msg_type:\020e_mst_c2l_buy_lv\022\021\n\tre"
    "q_level\030\002 \001(\005\"\201\001\n\027packetc2l_buy_lv_resul"
    "t\022V\n\tpacket_id\030\001 \001(\0162*.game_5dragons_pro"
    "tocols.e_server_msg_type:\027e_mst_l2c_buy_"
    "lv_result\022\016\n\006result\030\002 \001(\005\"z\n\025packetc2l_d"
    "ouble_game\022T\n\tpacket_id\030\001 \001(\0162*.game_5dr"
    "agons_protocols.e_server_msg_type:\025e_mst"
    "_c2l_double_game\022\013\n\003tag\030\002 \001(\005\"\213\001\n\034packet"
    "c2l_double_game_result\022[\n\tpacket_id\030\001 \001("
    "\0162*.game_5dragons_protocols.e_server_msg"
    "_type:\034e_mst_l2c_double_game_result\022\016\n\006r"
    "esult\030\002 \001(\003\"\211\001\n\032packetc2l_buy_double_tim"
    "es\022Y\n\tpacket_id\030\001 \001(\0162*.game_5dragons_pr"
    "otocols.e_server_msg_type:\032e_mst_c2l_buy"
    "_double_times\022\020\n\010buy_type\030\002 \001(\005\"\225\001\n!pack"
    "etc2l_buy_double_times_result\022`\n\tpacket_"
    "id\030\001 \001(\0162*.game_5dragons_protocols.e_ser"
    "ver_msg_type:!e_mst_l2c_buy_double_times"
    "_result\022\016\n\006result\030\002 \001(\005\"|\n\024packetc2l_ent"
    "er_game\022S\n\tpacket_id\030\001 \001(\0162*.game_5drago"
    "ns_protocols.e_server_msg_type:\024e_mst_c2"
    "l_enter_game\022\017\n\007room_id\030\002 \001(\005\"\211\001\n\033packet"
    "c2l_enter_game_result\022Z\n\tpacket_id\030\001 \001(\016"
    "2*.game_5dragons_protocols.e_server_msg_"
    "type:\033e_mst_l2c_enter_game_result\022\016\n\006res"
    "ult\030\002 \001(\005\"|\n\024packetc2l_leave_game\022S\n\tpac"
    "ket_id\030\001 \001(\0162*.game_5dragons_protocols.e"
    "_server_msg_type:\024e_mst_c2l_leave_game\022\017"
    "\n\007room_id\030\002 \001(\005\"\211\001\n\033packetc2l_leave_game"
    "_result\022Z\n\tpacket_id\030\001 \001(\0162*.game_5drago"
    "ns_protocols.e_server_msg_type:\033e_mst_l2"
    "c_leave_game_result\022\016\n\006result\030\002 \001(\005\"\226\001\n\023"
    "packetc2l_star_game\022R\n\tpacket_id\030\001 \001(\0162*"
    ".game_5dragons_protocols.e_server_msg_ty"
    "pe:\023e_mst_c2l_star_game\022\024\n\014bet_gold_idx\030"
    "\002 \001(\005\022\025\n\rfree_game_idx\030\003 \001(\005\"\375\001\n\032packetc"
    "2l_star_game_result\022Y\n\tpacket_id\030\001 \001(\0162*"
    ".game_5dragons_protocols.e_server_msg_ty"
    "pe:\032e_mst_l2c_star_game_result\022\013\n\003tag\030\002 "
    "\001(\005\022\013\n\003arr\030\003 \001(\t\022\020\n\010win_gold\030\004 \001(\003\022\020\n\010ma"
    "y_odds\030\005 \001(\005\022\027\n\017free_game_times\030\006 \001(\005\022\017\n"
    "\007fd_odds\030\010 \001(\005\022\014\n\004odds\030\t \001(\005\022\016\n\006result\030\n"
    " \001(\005\"\223\001\n\023packetc2l_test_game\022R\n\tpacket_i"
    "d\030\001 \001(\0162*.game_5dragons_protocols.e_serv"
    "er_msg_type:\023e_mst_c2l_test_game\022\024\n\014bet_"
    "gold_idx\030\002 \001(\005\022\022\n\ntest_count\030\003 \001(\005\"\207\001\n\032p"
    "acketc2l_test_game_result\022Y\n\tpacket_id\030\001"
    " \001(\0162*.game_5dragons_protocols.e_server_"
    "msg_type:\032e_mst_l2c_test_game_result\022\016\n\006"
    "result\030\n \001(\005\"~\n\023packetl2c_debuginfo\022R\n\tp"
    "acket_id\030\001 \001(\0162*.game_5dragons_protocols"
    ".e_server_msg_type:\023e_mst_l2c_debuginfo\022"
    "\023\n\013debug_infos\030\002 \001(\t", 2540);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "game_5dragons_protocol.proto", &protobuf_RegisterTypes);
  packetc2l_check_state::default_instance_ = new packetc2l_check_state();
  packetc2l_check_state_result::default_instance_ = new packetc2l_check_state_result();
  packetc2l_buy_lv::default_instance_ = new packetc2l_buy_lv();
  packetc2l_buy_lv_result::default_instance_ = new packetc2l_buy_lv_result();
  packetc2l_double_game::default_instance_ = new packetc2l_double_game();
  packetc2l_double_game_result::default_instance_ = new packetc2l_double_game_result();
  packetc2l_buy_double_times::default_instance_ = new packetc2l_buy_double_times();
  packetc2l_buy_double_times_result::default_instance_ = new packetc2l_buy_double_times_result();
  packetc2l_enter_game::default_instance_ = new packetc2l_enter_game();
  packetc2l_enter_game_result::default_instance_ = new packetc2l_enter_game_result();
  packetc2l_leave_game::default_instance_ = new packetc2l_leave_game();
  packetc2l_leave_game_result::default_instance_ = new packetc2l_leave_game_result();
  packetc2l_star_game::default_instance_ = new packetc2l_star_game();
  packetc2l_star_game_result::default_instance_ = new packetc2l_star_game_result();
  packetc2l_test_game::default_instance_ = new packetc2l_test_game();
  packetc2l_test_game_result::default_instance_ = new packetc2l_test_game_result();
  packetl2c_debuginfo::default_instance_ = new packetl2c_debuginfo();
  packetc2l_check_state::default_instance_->InitAsDefaultInstance();
  packetc2l_check_state_result::default_instance_->InitAsDefaultInstance();
  packetc2l_buy_lv::default_instance_->InitAsDefaultInstance();
  packetc2l_buy_lv_result::default_instance_->InitAsDefaultInstance();
  packetc2l_double_game::default_instance_->InitAsDefaultInstance();
  packetc2l_double_game_result::default_instance_->InitAsDefaultInstance();
  packetc2l_buy_double_times::default_instance_->InitAsDefaultInstance();
  packetc2l_buy_double_times_result::default_instance_->InitAsDefaultInstance();
  packetc2l_enter_game::default_instance_->InitAsDefaultInstance();
  packetc2l_enter_game_result::default_instance_->InitAsDefaultInstance();
  packetc2l_leave_game::default_instance_->InitAsDefaultInstance();
  packetc2l_leave_game_result::default_instance_->InitAsDefaultInstance();
  packetc2l_star_game::default_instance_->InitAsDefaultInstance();
  packetc2l_star_game_result::default_instance_->InitAsDefaultInstance();
  packetc2l_test_game::default_instance_->InitAsDefaultInstance();
  packetc2l_test_game_result::default_instance_->InitAsDefaultInstance();
  packetl2c_debuginfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_game_5f5dragons_5fprotocol_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_game_5f5dragons_5fprotocol_2eproto {
  StaticDescriptorInitializer_game_5f5dragons_5fprotocol_2eproto() {
    protobuf_AddDesc_game_5f5dragons_5fprotocol_2eproto();
  }
} static_descriptor_initializer_game_5f5dragons_5fprotocol_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int packetc2l_check_state::kPacketIdFieldNumber;
#endif  // !_MSC_VER

packetc2l_check_state::packetc2l_check_state()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void packetc2l_check_state::InitAsDefaultInstance() {
}

packetc2l_check_state::packetc2l_check_state(const packetc2l_check_state& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void packetc2l_check_state::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 10001;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packetc2l_check_state::~packetc2l_check_state() {
  SharedDtor();
}

void packetc2l_check_state::SharedDtor() {
  if (this != default_instance_) {
  }
}

void packetc2l_check_state::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packetc2l_check_state::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packetc2l_check_state_descriptor_;
}

const packetc2l_check_state& packetc2l_check_state::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5f5dragons_5fprotocol_2eproto();
  return *default_instance_;
}

packetc2l_check_state* packetc2l_check_state::default_instance_ = NULL;

packetc2l_check_state* packetc2l_check_state::New() const {
  return new packetc2l_check_state;
}

void packetc2l_check_state::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    packet_id_ = 10001;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packetc2l_check_state::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::game_5dragons_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::game_5dragons_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void packetc2l_check_state::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* packetc2l_check_state::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int packetc2l_check_state::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packetc2l_check_state::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packetc2l_check_state* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packetc2l_check_state*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packetc2l_check_state::MergeFrom(const packetc2l_check_state& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packetc2l_check_state::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packetc2l_check_state::CopyFrom(const packetc2l_check_state& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packetc2l_check_state::IsInitialized() const {

  return true;
}

void packetc2l_check_state::Swap(packetc2l_check_state* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packetc2l_check_state::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packetc2l_check_state_descriptor_;
  metadata.reflection = packetc2l_check_state_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int packetc2l_check_state_result::kPacketIdFieldNumber;
const int packetc2l_check_state_result::kRoomIdFieldNumber;
const int packetc2l_check_state_result::kPlayerLvFieldNumber;
const int packetc2l_check_state_result::kPlayerExpFieldNumber;
#endif  // !_MSC_VER

packetc2l_check_state_result::packetc2l_check_state_result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void packetc2l_check_state_result::InitAsDefaultInstance() {
}

packetc2l_check_state_result::packetc2l_check_state_result(const packetc2l_check_state_result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void packetc2l_check_state_result::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 15001;
  room_id_ = 0;
  player_lv_ = 0;
  player_exp_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packetc2l_check_state_result::~packetc2l_check_state_result() {
  SharedDtor();
}

void packetc2l_check_state_result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void packetc2l_check_state_result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packetc2l_check_state_result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packetc2l_check_state_result_descriptor_;
}

const packetc2l_check_state_result& packetc2l_check_state_result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5f5dragons_5fprotocol_2eproto();
  return *default_instance_;
}

packetc2l_check_state_result* packetc2l_check_state_result::default_instance_ = NULL;

packetc2l_check_state_result* packetc2l_check_state_result::New() const {
  return new packetc2l_check_state_result;
}

void packetc2l_check_state_result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    packet_id_ = 15001;
    room_id_ = 0;
    player_lv_ = 0;
    player_exp_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packetc2l_check_state_result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::game_5dragons_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::game_5dragons_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_room_id;
        break;
      }

      // optional int32 room_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_room_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &room_id_)));
          set_has_room_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_player_lv;
        break;
      }

      // optional int32 player_lv = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_player_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_lv_)));
          set_has_player_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_player_exp;
        break;
      }

      // optional int32 player_exp = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_player_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_exp_)));
          set_has_player_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void packetc2l_check_state_result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  // optional int32 room_id = 2;
  if (has_room_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->room_id(), output);
  }

  // optional int32 player_lv = 3;
  if (has_player_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->player_lv(), output);
  }

  // optional int32 player_exp = 4;
  if (has_player_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->player_exp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* packetc2l_check_state_result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  // optional int32 room_id = 2;
  if (has_room_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->room_id(), target);
  }

  // optional int32 player_lv = 3;
  if (has_player_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->player_lv(), target);
  }

  // optional int32 player_exp = 4;
  if (has_player_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->player_exp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int packetc2l_check_state_result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

    // optional int32 room_id = 2;
    if (has_room_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->room_id());
    }

    // optional int32 player_lv = 3;
    if (has_player_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player_lv());
    }

    // optional int32 player_exp = 4;
    if (has_player_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player_exp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packetc2l_check_state_result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packetc2l_check_state_result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packetc2l_check_state_result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packetc2l_check_state_result::MergeFrom(const packetc2l_check_state_result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
    if (from.has_room_id()) {
      set_room_id(from.room_id());
    }
    if (from.has_player_lv()) {
      set_player_lv(from.player_lv());
    }
    if (from.has_player_exp()) {
      set_player_exp(from.player_exp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packetc2l_check_state_result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packetc2l_check_state_result::CopyFrom(const packetc2l_check_state_result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packetc2l_check_state_result::IsInitialized() const {

  return true;
}

void packetc2l_check_state_result::Swap(packetc2l_check_state_result* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(room_id_, other->room_id_);
    std::swap(player_lv_, other->player_lv_);
    std::swap(player_exp_, other->player_exp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packetc2l_check_state_result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packetc2l_check_state_result_descriptor_;
  metadata.reflection = packetc2l_check_state_result_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int packetc2l_buy_lv::kPacketIdFieldNumber;
const int packetc2l_buy_lv::kReqLevelFieldNumber;
#endif  // !_MSC_VER

packetc2l_buy_lv::packetc2l_buy_lv()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void packetc2l_buy_lv::InitAsDefaultInstance() {
}

packetc2l_buy_lv::packetc2l_buy_lv(const packetc2l_buy_lv& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void packetc2l_buy_lv::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 10005;
  req_level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packetc2l_buy_lv::~packetc2l_buy_lv() {
  SharedDtor();
}

void packetc2l_buy_lv::SharedDtor() {
  if (this != default_instance_) {
  }
}

void packetc2l_buy_lv::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packetc2l_buy_lv::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packetc2l_buy_lv_descriptor_;
}

const packetc2l_buy_lv& packetc2l_buy_lv::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5f5dragons_5fprotocol_2eproto();
  return *default_instance_;
}

packetc2l_buy_lv* packetc2l_buy_lv::default_instance_ = NULL;

packetc2l_buy_lv* packetc2l_buy_lv::New() const {
  return new packetc2l_buy_lv;
}

void packetc2l_buy_lv::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    packet_id_ = 10005;
    req_level_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packetc2l_buy_lv::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_buy_lv];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::game_5dragons_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::game_5dragons_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_req_level;
        break;
      }

      // optional int32 req_level = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_req_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &req_level_)));
          set_has_req_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void packetc2l_buy_lv::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_buy_lv];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  // optional int32 req_level = 2;
  if (has_req_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->req_level(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* packetc2l_buy_lv::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_buy_lv];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  // optional int32 req_level = 2;
  if (has_req_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->req_level(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int packetc2l_buy_lv::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_buy_lv];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

    // optional int32 req_level = 2;
    if (has_req_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->req_level());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packetc2l_buy_lv::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packetc2l_buy_lv* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packetc2l_buy_lv*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packetc2l_buy_lv::MergeFrom(const packetc2l_buy_lv& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
    if (from.has_req_level()) {
      set_req_level(from.req_level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packetc2l_buy_lv::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packetc2l_buy_lv::CopyFrom(const packetc2l_buy_lv& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packetc2l_buy_lv::IsInitialized() const {

  return true;
}

void packetc2l_buy_lv::Swap(packetc2l_buy_lv* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(req_level_, other->req_level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packetc2l_buy_lv::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packetc2l_buy_lv_descriptor_;
  metadata.reflection = packetc2l_buy_lv_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int packetc2l_buy_lv_result::kPacketIdFieldNumber;
const int packetc2l_buy_lv_result::kResultFieldNumber;
#endif  // !_MSC_VER

packetc2l_buy_lv_result::packetc2l_buy_lv_result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void packetc2l_buy_lv_result::InitAsDefaultInstance() {
}

packetc2l_buy_lv_result::packetc2l_buy_lv_result(const packetc2l_buy_lv_result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void packetc2l_buy_lv_result::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 15005;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packetc2l_buy_lv_result::~packetc2l_buy_lv_result() {
  SharedDtor();
}

void packetc2l_buy_lv_result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void packetc2l_buy_lv_result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packetc2l_buy_lv_result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packetc2l_buy_lv_result_descriptor_;
}

const packetc2l_buy_lv_result& packetc2l_buy_lv_result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5f5dragons_5fprotocol_2eproto();
  return *default_instance_;
}

packetc2l_buy_lv_result* packetc2l_buy_lv_result::default_instance_ = NULL;

packetc2l_buy_lv_result* packetc2l_buy_lv_result::New() const {
  return new packetc2l_buy_lv_result;
}

void packetc2l_buy_lv_result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    packet_id_ = 15005;
    result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packetc2l_buy_lv_result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_buy_lv_result];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::game_5dragons_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::game_5dragons_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional int32 result = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void packetc2l_buy_lv_result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_buy_lv_result];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  // optional int32 result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* packetc2l_buy_lv_result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_buy_lv_result];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  // optional int32 result = 2;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int packetc2l_buy_lv_result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_buy_lv_result];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

    // optional int32 result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packetc2l_buy_lv_result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packetc2l_buy_lv_result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packetc2l_buy_lv_result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packetc2l_buy_lv_result::MergeFrom(const packetc2l_buy_lv_result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packetc2l_buy_lv_result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packetc2l_buy_lv_result::CopyFrom(const packetc2l_buy_lv_result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packetc2l_buy_lv_result::IsInitialized() const {

  return true;
}

void packetc2l_buy_lv_result::Swap(packetc2l_buy_lv_result* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packetc2l_buy_lv_result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packetc2l_buy_lv_result_descriptor_;
  metadata.reflection = packetc2l_buy_lv_result_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int packetc2l_double_game::kPacketIdFieldNumber;
const int packetc2l_double_game::kTagFieldNumber;
#endif  // !_MSC_VER

packetc2l_double_game::packetc2l_double_game()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void packetc2l_double_game::InitAsDefaultInstance() {
}

packetc2l_double_game::packetc2l_double_game(const packetc2l_double_game& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void packetc2l_double_game::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 10006;
  tag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packetc2l_double_game::~packetc2l_double_game() {
  SharedDtor();
}

void packetc2l_double_game::SharedDtor() {
  if (this != default_instance_) {
  }
}

void packetc2l_double_game::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packetc2l_double_game::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packetc2l_double_game_descriptor_;
}

const packetc2l_double_game& packetc2l_double_game::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5f5dragons_5fprotocol_2eproto();
  return *default_instance_;
}

packetc2l_double_game* packetc2l_double_game::default_instance_ = NULL;

packetc2l_double_game* packetc2l_double_game::New() const {
  return new packetc2l_double_game;
}

void packetc2l_double_game::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    packet_id_ = 10006;
    tag_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packetc2l_double_game::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_double_game];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::game_5dragons_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::game_5dragons_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_tag;
        break;
      }

      // optional int32 tag = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_tag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tag_)));
          set_has_tag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void packetc2l_double_game::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_double_game];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  // optional int32 tag = 2;
  if (has_tag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->tag(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* packetc2l_double_game::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_double_game];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  // optional int32 tag = 2;
  if (has_tag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->tag(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int packetc2l_double_game::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_double_game];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

    // optional int32 tag = 2;
    if (has_tag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tag());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packetc2l_double_game::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packetc2l_double_game* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packetc2l_double_game*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packetc2l_double_game::MergeFrom(const packetc2l_double_game& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
    if (from.has_tag()) {
      set_tag(from.tag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packetc2l_double_game::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packetc2l_double_game::CopyFrom(const packetc2l_double_game& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packetc2l_double_game::IsInitialized() const {

  return true;
}

void packetc2l_double_game::Swap(packetc2l_double_game* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(tag_, other->tag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packetc2l_double_game::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packetc2l_double_game_descriptor_;
  metadata.reflection = packetc2l_double_game_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int packetc2l_double_game_result::kPacketIdFieldNumber;
const int packetc2l_double_game_result::kResultFieldNumber;
#endif  // !_MSC_VER

packetc2l_double_game_result::packetc2l_double_game_result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void packetc2l_double_game_result::InitAsDefaultInstance() {
}

packetc2l_double_game_result::packetc2l_double_game_result(const packetc2l_double_game_result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void packetc2l_double_game_result::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 15006;
  result_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packetc2l_double_game_result::~packetc2l_double_game_result() {
  SharedDtor();
}

void packetc2l_double_game_result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void packetc2l_double_game_result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packetc2l_double_game_result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packetc2l_double_game_result_descriptor_;
}

const packetc2l_double_game_result& packetc2l_double_game_result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5f5dragons_5fprotocol_2eproto();
  return *default_instance_;
}

packetc2l_double_game_result* packetc2l_double_game_result::default_instance_ = NULL;

packetc2l_double_game_result* packetc2l_double_game_result::New() const {
  return new packetc2l_double_game_result;
}

void packetc2l_double_game_result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    packet_id_ = 15006;
    result_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packetc2l_double_game_result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_double_game_result];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::game_5dragons_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::game_5dragons_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional int64 result = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void packetc2l_double_game_result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_double_game_result];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  // optional int64 result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* packetc2l_double_game_result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_double_game_result];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  // optional int64 result = 2;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int packetc2l_double_game_result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_double_game_result];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

    // optional int64 result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packetc2l_double_game_result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packetc2l_double_game_result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packetc2l_double_game_result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packetc2l_double_game_result::MergeFrom(const packetc2l_double_game_result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packetc2l_double_game_result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packetc2l_double_game_result::CopyFrom(const packetc2l_double_game_result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packetc2l_double_game_result::IsInitialized() const {

  return true;
}

void packetc2l_double_game_result::Swap(packetc2l_double_game_result* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packetc2l_double_game_result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packetc2l_double_game_result_descriptor_;
  metadata.reflection = packetc2l_double_game_result_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int packetc2l_buy_double_times::kPacketIdFieldNumber;
const int packetc2l_buy_double_times::kBuyTypeFieldNumber;
#endif  // !_MSC_VER

packetc2l_buy_double_times::packetc2l_buy_double_times()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void packetc2l_buy_double_times::InitAsDefaultInstance() {
}

packetc2l_buy_double_times::packetc2l_buy_double_times(const packetc2l_buy_double_times& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void packetc2l_buy_double_times::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 10007;
  buy_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packetc2l_buy_double_times::~packetc2l_buy_double_times() {
  SharedDtor();
}

void packetc2l_buy_double_times::SharedDtor() {
  if (this != default_instance_) {
  }
}

void packetc2l_buy_double_times::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packetc2l_buy_double_times::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packetc2l_buy_double_times_descriptor_;
}

const packetc2l_buy_double_times& packetc2l_buy_double_times::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5f5dragons_5fprotocol_2eproto();
  return *default_instance_;
}

packetc2l_buy_double_times* packetc2l_buy_double_times::default_instance_ = NULL;

packetc2l_buy_double_times* packetc2l_buy_double_times::New() const {
  return new packetc2l_buy_double_times;
}

void packetc2l_buy_double_times::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    packet_id_ = 10007;
    buy_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packetc2l_buy_double_times::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_buy_double_times];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::game_5dragons_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::game_5dragons_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_buy_type;
        break;
      }

      // optional int32 buy_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buy_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buy_type_)));
          set_has_buy_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void packetc2l_buy_double_times::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_buy_double_times];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  // optional int32 buy_type = 2;
  if (has_buy_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->buy_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* packetc2l_buy_double_times::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_buy_double_times];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  // optional int32 buy_type = 2;
  if (has_buy_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->buy_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int packetc2l_buy_double_times::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_buy_double_times];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

    // optional int32 buy_type = 2;
    if (has_buy_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buy_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packetc2l_buy_double_times::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packetc2l_buy_double_times* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packetc2l_buy_double_times*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packetc2l_buy_double_times::MergeFrom(const packetc2l_buy_double_times& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
    if (from.has_buy_type()) {
      set_buy_type(from.buy_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packetc2l_buy_double_times::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packetc2l_buy_double_times::CopyFrom(const packetc2l_buy_double_times& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packetc2l_buy_double_times::IsInitialized() const {

  return true;
}

void packetc2l_buy_double_times::Swap(packetc2l_buy_double_times* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(buy_type_, other->buy_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packetc2l_buy_double_times::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packetc2l_buy_double_times_descriptor_;
  metadata.reflection = packetc2l_buy_double_times_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int packetc2l_buy_double_times_result::kPacketIdFieldNumber;
const int packetc2l_buy_double_times_result::kResultFieldNumber;
#endif  // !_MSC_VER

packetc2l_buy_double_times_result::packetc2l_buy_double_times_result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void packetc2l_buy_double_times_result::InitAsDefaultInstance() {
}

packetc2l_buy_double_times_result::packetc2l_buy_double_times_result(const packetc2l_buy_double_times_result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void packetc2l_buy_double_times_result::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 15007;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packetc2l_buy_double_times_result::~packetc2l_buy_double_times_result() {
  SharedDtor();
}

void packetc2l_buy_double_times_result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void packetc2l_buy_double_times_result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packetc2l_buy_double_times_result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packetc2l_buy_double_times_result_descriptor_;
}

const packetc2l_buy_double_times_result& packetc2l_buy_double_times_result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5f5dragons_5fprotocol_2eproto();
  return *default_instance_;
}

packetc2l_buy_double_times_result* packetc2l_buy_double_times_result::default_instance_ = NULL;

packetc2l_buy_double_times_result* packetc2l_buy_double_times_result::New() const {
  return new packetc2l_buy_double_times_result;
}

void packetc2l_buy_double_times_result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    packet_id_ = 15007;
    result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packetc2l_buy_double_times_result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_buy_double_times_result];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::game_5dragons_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::game_5dragons_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional int32 result = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void packetc2l_buy_double_times_result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_buy_double_times_result];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  // optional int32 result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* packetc2l_buy_double_times_result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_buy_double_times_result];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  // optional int32 result = 2;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int packetc2l_buy_double_times_result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_buy_double_times_result];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

    // optional int32 result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packetc2l_buy_double_times_result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packetc2l_buy_double_times_result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packetc2l_buy_double_times_result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packetc2l_buy_double_times_result::MergeFrom(const packetc2l_buy_double_times_result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packetc2l_buy_double_times_result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packetc2l_buy_double_times_result::CopyFrom(const packetc2l_buy_double_times_result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packetc2l_buy_double_times_result::IsInitialized() const {

  return true;
}

void packetc2l_buy_double_times_result::Swap(packetc2l_buy_double_times_result* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packetc2l_buy_double_times_result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packetc2l_buy_double_times_result_descriptor_;
  metadata.reflection = packetc2l_buy_double_times_result_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int packetc2l_enter_game::kPacketIdFieldNumber;
const int packetc2l_enter_game::kRoomIdFieldNumber;
#endif  // !_MSC_VER

packetc2l_enter_game::packetc2l_enter_game()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void packetc2l_enter_game::InitAsDefaultInstance() {
}

packetc2l_enter_game::packetc2l_enter_game(const packetc2l_enter_game& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void packetc2l_enter_game::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 10002;
  room_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packetc2l_enter_game::~packetc2l_enter_game() {
  SharedDtor();
}

void packetc2l_enter_game::SharedDtor() {
  if (this != default_instance_) {
  }
}

void packetc2l_enter_game::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packetc2l_enter_game::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packetc2l_enter_game_descriptor_;
}

const packetc2l_enter_game& packetc2l_enter_game::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5f5dragons_5fprotocol_2eproto();
  return *default_instance_;
}

packetc2l_enter_game* packetc2l_enter_game::default_instance_ = NULL;

packetc2l_enter_game* packetc2l_enter_game::New() const {
  return new packetc2l_enter_game;
}

void packetc2l_enter_game::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    packet_id_ = 10002;
    room_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packetc2l_enter_game::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_enter_game];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::game_5dragons_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::game_5dragons_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_room_id;
        break;
      }

      // optional int32 room_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_room_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &room_id_)));
          set_has_room_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void packetc2l_enter_game::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_enter_game];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  // optional int32 room_id = 2;
  if (has_room_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->room_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* packetc2l_enter_game::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_enter_game];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  // optional int32 room_id = 2;
  if (has_room_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->room_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int packetc2l_enter_game::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_enter_game];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

    // optional int32 room_id = 2;
    if (has_room_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->room_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packetc2l_enter_game::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packetc2l_enter_game* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packetc2l_enter_game*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packetc2l_enter_game::MergeFrom(const packetc2l_enter_game& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
    if (from.has_room_id()) {
      set_room_id(from.room_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packetc2l_enter_game::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packetc2l_enter_game::CopyFrom(const packetc2l_enter_game& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packetc2l_enter_game::IsInitialized() const {

  return true;
}

void packetc2l_enter_game::Swap(packetc2l_enter_game* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(room_id_, other->room_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packetc2l_enter_game::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packetc2l_enter_game_descriptor_;
  metadata.reflection = packetc2l_enter_game_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int packetc2l_enter_game_result::kPacketIdFieldNumber;
const int packetc2l_enter_game_result::kResultFieldNumber;
#endif  // !_MSC_VER

packetc2l_enter_game_result::packetc2l_enter_game_result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void packetc2l_enter_game_result::InitAsDefaultInstance() {
}

packetc2l_enter_game_result::packetc2l_enter_game_result(const packetc2l_enter_game_result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void packetc2l_enter_game_result::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 15002;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packetc2l_enter_game_result::~packetc2l_enter_game_result() {
  SharedDtor();
}

void packetc2l_enter_game_result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void packetc2l_enter_game_result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packetc2l_enter_game_result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packetc2l_enter_game_result_descriptor_;
}

const packetc2l_enter_game_result& packetc2l_enter_game_result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5f5dragons_5fprotocol_2eproto();
  return *default_instance_;
}

packetc2l_enter_game_result* packetc2l_enter_game_result::default_instance_ = NULL;

packetc2l_enter_game_result* packetc2l_enter_game_result::New() const {
  return new packetc2l_enter_game_result;
}

void packetc2l_enter_game_result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    packet_id_ = 15002;
    result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packetc2l_enter_game_result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_enter_game_result];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::game_5dragons_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::game_5dragons_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional int32 result = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void packetc2l_enter_game_result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_enter_game_result];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  // optional int32 result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* packetc2l_enter_game_result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_enter_game_result];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  // optional int32 result = 2;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int packetc2l_enter_game_result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_enter_game_result];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

    // optional int32 result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packetc2l_enter_game_result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packetc2l_enter_game_result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packetc2l_enter_game_result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packetc2l_enter_game_result::MergeFrom(const packetc2l_enter_game_result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packetc2l_enter_game_result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packetc2l_enter_game_result::CopyFrom(const packetc2l_enter_game_result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packetc2l_enter_game_result::IsInitialized() const {

  return true;
}

void packetc2l_enter_game_result::Swap(packetc2l_enter_game_result* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packetc2l_enter_game_result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packetc2l_enter_game_result_descriptor_;
  metadata.reflection = packetc2l_enter_game_result_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int packetc2l_leave_game::kPacketIdFieldNumber;
const int packetc2l_leave_game::kRoomIdFieldNumber;
#endif  // !_MSC_VER

packetc2l_leave_game::packetc2l_leave_game()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void packetc2l_leave_game::InitAsDefaultInstance() {
}

packetc2l_leave_game::packetc2l_leave_game(const packetc2l_leave_game& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void packetc2l_leave_game::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 10003;
  room_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packetc2l_leave_game::~packetc2l_leave_game() {
  SharedDtor();
}

void packetc2l_leave_game::SharedDtor() {
  if (this != default_instance_) {
  }
}

void packetc2l_leave_game::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packetc2l_leave_game::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packetc2l_leave_game_descriptor_;
}

const packetc2l_leave_game& packetc2l_leave_game::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5f5dragons_5fprotocol_2eproto();
  return *default_instance_;
}

packetc2l_leave_game* packetc2l_leave_game::default_instance_ = NULL;

packetc2l_leave_game* packetc2l_leave_game::New() const {
  return new packetc2l_leave_game;
}

void packetc2l_leave_game::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    packet_id_ = 10003;
    room_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packetc2l_leave_game::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_game];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::game_5dragons_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::game_5dragons_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_room_id;
        break;
      }

      // optional int32 room_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_room_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &room_id_)));
          set_has_room_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void packetc2l_leave_game::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_game];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  // optional int32 room_id = 2;
  if (has_room_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->room_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* packetc2l_leave_game::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_game];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  // optional int32 room_id = 2;
  if (has_room_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->room_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int packetc2l_leave_game::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_game];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

    // optional int32 room_id = 2;
    if (has_room_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->room_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packetc2l_leave_game::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packetc2l_leave_game* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packetc2l_leave_game*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packetc2l_leave_game::MergeFrom(const packetc2l_leave_game& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
    if (from.has_room_id()) {
      set_room_id(from.room_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packetc2l_leave_game::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packetc2l_leave_game::CopyFrom(const packetc2l_leave_game& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packetc2l_leave_game::IsInitialized() const {

  return true;
}

void packetc2l_leave_game::Swap(packetc2l_leave_game* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(room_id_, other->room_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packetc2l_leave_game::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packetc2l_leave_game_descriptor_;
  metadata.reflection = packetc2l_leave_game_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int packetc2l_leave_game_result::kPacketIdFieldNumber;
const int packetc2l_leave_game_result::kResultFieldNumber;
#endif  // !_MSC_VER

packetc2l_leave_game_result::packetc2l_leave_game_result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void packetc2l_leave_game_result::InitAsDefaultInstance() {
}

packetc2l_leave_game_result::packetc2l_leave_game_result(const packetc2l_leave_game_result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void packetc2l_leave_game_result::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 15003;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packetc2l_leave_game_result::~packetc2l_leave_game_result() {
  SharedDtor();
}

void packetc2l_leave_game_result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void packetc2l_leave_game_result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packetc2l_leave_game_result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packetc2l_leave_game_result_descriptor_;
}

const packetc2l_leave_game_result& packetc2l_leave_game_result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5f5dragons_5fprotocol_2eproto();
  return *default_instance_;
}

packetc2l_leave_game_result* packetc2l_leave_game_result::default_instance_ = NULL;

packetc2l_leave_game_result* packetc2l_leave_game_result::New() const {
  return new packetc2l_leave_game_result;
}

void packetc2l_leave_game_result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    packet_id_ = 15003;
    result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packetc2l_leave_game_result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_game_result];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::game_5dragons_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::game_5dragons_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional int32 result = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void packetc2l_leave_game_result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_game_result];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  // optional int32 result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* packetc2l_leave_game_result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_game_result];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  // optional int32 result = 2;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int packetc2l_leave_game_result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_game_result];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

    // optional int32 result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packetc2l_leave_game_result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packetc2l_leave_game_result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packetc2l_leave_game_result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packetc2l_leave_game_result::MergeFrom(const packetc2l_leave_game_result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packetc2l_leave_game_result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packetc2l_leave_game_result::CopyFrom(const packetc2l_leave_game_result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packetc2l_leave_game_result::IsInitialized() const {

  return true;
}

void packetc2l_leave_game_result::Swap(packetc2l_leave_game_result* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packetc2l_leave_game_result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packetc2l_leave_game_result_descriptor_;
  metadata.reflection = packetc2l_leave_game_result_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int packetc2l_star_game::kPacketIdFieldNumber;
const int packetc2l_star_game::kBetGoldIdxFieldNumber;
const int packetc2l_star_game::kFreeGameIdxFieldNumber;
#endif  // !_MSC_VER

packetc2l_star_game::packetc2l_star_game()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void packetc2l_star_game::InitAsDefaultInstance() {
}

packetc2l_star_game::packetc2l_star_game(const packetc2l_star_game& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void packetc2l_star_game::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 10004;
  bet_gold_idx_ = 0;
  free_game_idx_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packetc2l_star_game::~packetc2l_star_game() {
  SharedDtor();
}

void packetc2l_star_game::SharedDtor() {
  if (this != default_instance_) {
  }
}

void packetc2l_star_game::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packetc2l_star_game::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packetc2l_star_game_descriptor_;
}

const packetc2l_star_game& packetc2l_star_game::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5f5dragons_5fprotocol_2eproto();
  return *default_instance_;
}

packetc2l_star_game* packetc2l_star_game::default_instance_ = NULL;

packetc2l_star_game* packetc2l_star_game::New() const {
  return new packetc2l_star_game;
}

void packetc2l_star_game::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    packet_id_ = 10004;
    bet_gold_idx_ = 0;
    free_game_idx_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packetc2l_star_game::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_star_game];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::game_5dragons_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::game_5dragons_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_bet_gold_idx;
        break;
      }

      // optional int32 bet_gold_idx = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bet_gold_idx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bet_gold_idx_)));
          set_has_bet_gold_idx();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_free_game_idx;
        break;
      }

      // optional int32 free_game_idx = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_free_game_idx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &free_game_idx_)));
          set_has_free_game_idx();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void packetc2l_star_game::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_star_game];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  // optional int32 bet_gold_idx = 2;
  if (has_bet_gold_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->bet_gold_idx(), output);
  }

  // optional int32 free_game_idx = 3;
  if (has_free_game_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->free_game_idx(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* packetc2l_star_game::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_star_game];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  // optional int32 bet_gold_idx = 2;
  if (has_bet_gold_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->bet_gold_idx(), target);
  }

  // optional int32 free_game_idx = 3;
  if (has_free_game_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->free_game_idx(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int packetc2l_star_game::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_star_game];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

    // optional int32 bet_gold_idx = 2;
    if (has_bet_gold_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bet_gold_idx());
    }

    // optional int32 free_game_idx = 3;
    if (has_free_game_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->free_game_idx());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packetc2l_star_game::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packetc2l_star_game* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packetc2l_star_game*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packetc2l_star_game::MergeFrom(const packetc2l_star_game& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
    if (from.has_bet_gold_idx()) {
      set_bet_gold_idx(from.bet_gold_idx());
    }
    if (from.has_free_game_idx()) {
      set_free_game_idx(from.free_game_idx());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packetc2l_star_game::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packetc2l_star_game::CopyFrom(const packetc2l_star_game& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packetc2l_star_game::IsInitialized() const {

  return true;
}

void packetc2l_star_game::Swap(packetc2l_star_game* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(bet_gold_idx_, other->bet_gold_idx_);
    std::swap(free_game_idx_, other->free_game_idx_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packetc2l_star_game::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packetc2l_star_game_descriptor_;
  metadata.reflection = packetc2l_star_game_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int packetc2l_star_game_result::kPacketIdFieldNumber;
const int packetc2l_star_game_result::kTagFieldNumber;
const int packetc2l_star_game_result::kArrFieldNumber;
const int packetc2l_star_game_result::kWinGoldFieldNumber;
const int packetc2l_star_game_result::kMayOddsFieldNumber;
const int packetc2l_star_game_result::kFreeGameTimesFieldNumber;
const int packetc2l_star_game_result::kFdOddsFieldNumber;
const int packetc2l_star_game_result::kOddsFieldNumber;
const int packetc2l_star_game_result::kResultFieldNumber;
#endif  // !_MSC_VER

packetc2l_star_game_result::packetc2l_star_game_result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void packetc2l_star_game_result::InitAsDefaultInstance() {
}

packetc2l_star_game_result::packetc2l_star_game_result(const packetc2l_star_game_result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void packetc2l_star_game_result::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 15004;
  tag_ = 0;
  arr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  win_gold_ = GOOGLE_LONGLONG(0);
  may_odds_ = 0;
  free_game_times_ = 0;
  fd_odds_ = 0;
  odds_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packetc2l_star_game_result::~packetc2l_star_game_result() {
  SharedDtor();
}

void packetc2l_star_game_result::SharedDtor() {
  if (arr_ != &::google::protobuf::internal::kEmptyString) {
    delete arr_;
  }
  if (this != default_instance_) {
  }
}

void packetc2l_star_game_result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packetc2l_star_game_result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packetc2l_star_game_result_descriptor_;
}

const packetc2l_star_game_result& packetc2l_star_game_result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5f5dragons_5fprotocol_2eproto();
  return *default_instance_;
}

packetc2l_star_game_result* packetc2l_star_game_result::default_instance_ = NULL;

packetc2l_star_game_result* packetc2l_star_game_result::New() const {
  return new packetc2l_star_game_result;
}

void packetc2l_star_game_result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    packet_id_ = 15004;
    tag_ = 0;
    if (has_arr()) {
      if (arr_ != &::google::protobuf::internal::kEmptyString) {
        arr_->clear();
      }
    }
    win_gold_ = GOOGLE_LONGLONG(0);
    may_odds_ = 0;
    free_game_times_ = 0;
    fd_odds_ = 0;
    odds_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packetc2l_star_game_result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_star_game_result];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::game_5dragons_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::game_5dragons_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_tag;
        break;
      }

      // optional int32 tag = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_tag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tag_)));
          set_has_tag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_arr;
        break;
      }

      // optional string arr = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_arr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_arr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->arr().data(), this->arr().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_win_gold;
        break;
      }

      // optional int64 win_gold = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_win_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &win_gold_)));
          set_has_win_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_may_odds;
        break;
      }

      // optional int32 may_odds = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_may_odds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &may_odds_)));
          set_has_may_odds();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_free_game_times;
        break;
      }

      // optional int32 free_game_times = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_free_game_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &free_game_times_)));
          set_has_free_game_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_fd_odds;
        break;
      }

      // optional int32 fd_odds = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fd_odds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fd_odds_)));
          set_has_fd_odds();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_odds;
        break;
      }

      // optional int32 odds = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_odds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &odds_)));
          set_has_odds();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_result;
        break;
      }

      // optional int32 result = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void packetc2l_star_game_result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_star_game_result];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  // optional int32 tag = 2;
  if (has_tag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->tag(), output);
  }

  // optional string arr = 3;
  if (has_arr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->arr().data(), this->arr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->arr(), output);
  }

  // optional int64 win_gold = 4;
  if (has_win_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->win_gold(), output);
  }

  // optional int32 may_odds = 5;
  if (has_may_odds()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->may_odds(), output);
  }

  // optional int32 free_game_times = 6;
  if (has_free_game_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->free_game_times(), output);
  }

  // optional int32 fd_odds = 8;
  if (has_fd_odds()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->fd_odds(), output);
  }

  // optional int32 odds = 9;
  if (has_odds()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->odds(), output);
  }

  // optional int32 result = 10;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* packetc2l_star_game_result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_star_game_result];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  // optional int32 tag = 2;
  if (has_tag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->tag(), target);
  }

  // optional string arr = 3;
  if (has_arr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->arr().data(), this->arr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->arr(), target);
  }

  // optional int64 win_gold = 4;
  if (has_win_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->win_gold(), target);
  }

  // optional int32 may_odds = 5;
  if (has_may_odds()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->may_odds(), target);
  }

  // optional int32 free_game_times = 6;
  if (has_free_game_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->free_game_times(), target);
  }

  // optional int32 fd_odds = 8;
  if (has_fd_odds()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->fd_odds(), target);
  }

  // optional int32 odds = 9;
  if (has_odds()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->odds(), target);
  }

  // optional int32 result = 10;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int packetc2l_star_game_result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_star_game_result];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

    // optional int32 tag = 2;
    if (has_tag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tag());
    }

    // optional string arr = 3;
    if (has_arr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->arr());
    }

    // optional int64 win_gold = 4;
    if (has_win_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->win_gold());
    }

    // optional int32 may_odds = 5;
    if (has_may_odds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->may_odds());
    }

    // optional int32 free_game_times = 6;
    if (has_free_game_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->free_game_times());
    }

    // optional int32 fd_odds = 8;
    if (has_fd_odds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fd_odds());
    }

    // optional int32 odds = 9;
    if (has_odds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->odds());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 result = 10;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packetc2l_star_game_result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packetc2l_star_game_result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packetc2l_star_game_result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packetc2l_star_game_result::MergeFrom(const packetc2l_star_game_result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
    if (from.has_tag()) {
      set_tag(from.tag());
    }
    if (from.has_arr()) {
      set_arr(from.arr());
    }
    if (from.has_win_gold()) {
      set_win_gold(from.win_gold());
    }
    if (from.has_may_odds()) {
      set_may_odds(from.may_odds());
    }
    if (from.has_free_game_times()) {
      set_free_game_times(from.free_game_times());
    }
    if (from.has_fd_odds()) {
      set_fd_odds(from.fd_odds());
    }
    if (from.has_odds()) {
      set_odds(from.odds());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packetc2l_star_game_result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packetc2l_star_game_result::CopyFrom(const packetc2l_star_game_result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packetc2l_star_game_result::IsInitialized() const {

  return true;
}

void packetc2l_star_game_result::Swap(packetc2l_star_game_result* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(tag_, other->tag_);
    std::swap(arr_, other->arr_);
    std::swap(win_gold_, other->win_gold_);
    std::swap(may_odds_, other->may_odds_);
    std::swap(free_game_times_, other->free_game_times_);
    std::swap(fd_odds_, other->fd_odds_);
    std::swap(odds_, other->odds_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packetc2l_star_game_result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packetc2l_star_game_result_descriptor_;
  metadata.reflection = packetc2l_star_game_result_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int packetc2l_test_game::kPacketIdFieldNumber;
const int packetc2l_test_game::kBetGoldIdxFieldNumber;
const int packetc2l_test_game::kTestCountFieldNumber;
#endif  // !_MSC_VER

packetc2l_test_game::packetc2l_test_game()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void packetc2l_test_game::InitAsDefaultInstance() {
}

packetc2l_test_game::packetc2l_test_game(const packetc2l_test_game& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void packetc2l_test_game::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 10008;
  bet_gold_idx_ = 0;
  test_count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packetc2l_test_game::~packetc2l_test_game() {
  SharedDtor();
}

void packetc2l_test_game::SharedDtor() {
  if (this != default_instance_) {
  }
}

void packetc2l_test_game::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packetc2l_test_game::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packetc2l_test_game_descriptor_;
}

const packetc2l_test_game& packetc2l_test_game::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5f5dragons_5fprotocol_2eproto();
  return *default_instance_;
}

packetc2l_test_game* packetc2l_test_game::default_instance_ = NULL;

packetc2l_test_game* packetc2l_test_game::New() const {
  return new packetc2l_test_game;
}

void packetc2l_test_game::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    packet_id_ = 10008;
    bet_gold_idx_ = 0;
    test_count_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packetc2l_test_game::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_test_game];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::game_5dragons_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::game_5dragons_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_bet_gold_idx;
        break;
      }

      // optional int32 bet_gold_idx = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bet_gold_idx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bet_gold_idx_)));
          set_has_bet_gold_idx();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_test_count;
        break;
      }

      // optional int32 test_count = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_test_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &test_count_)));
          set_has_test_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void packetc2l_test_game::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_test_game];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  // optional int32 bet_gold_idx = 2;
  if (has_bet_gold_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->bet_gold_idx(), output);
  }

  // optional int32 test_count = 3;
  if (has_test_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->test_count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* packetc2l_test_game::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_test_game];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  // optional int32 bet_gold_idx = 2;
  if (has_bet_gold_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->bet_gold_idx(), target);
  }

  // optional int32 test_count = 3;
  if (has_test_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->test_count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int packetc2l_test_game::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_test_game];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

    // optional int32 bet_gold_idx = 2;
    if (has_bet_gold_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bet_gold_idx());
    }

    // optional int32 test_count = 3;
    if (has_test_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->test_count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packetc2l_test_game::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packetc2l_test_game* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packetc2l_test_game*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packetc2l_test_game::MergeFrom(const packetc2l_test_game& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
    if (from.has_bet_gold_idx()) {
      set_bet_gold_idx(from.bet_gold_idx());
    }
    if (from.has_test_count()) {
      set_test_count(from.test_count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packetc2l_test_game::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packetc2l_test_game::CopyFrom(const packetc2l_test_game& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packetc2l_test_game::IsInitialized() const {

  return true;
}

void packetc2l_test_game::Swap(packetc2l_test_game* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(bet_gold_idx_, other->bet_gold_idx_);
    std::swap(test_count_, other->test_count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packetc2l_test_game::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packetc2l_test_game_descriptor_;
  metadata.reflection = packetc2l_test_game_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int packetc2l_test_game_result::kPacketIdFieldNumber;
const int packetc2l_test_game_result::kResultFieldNumber;
#endif  // !_MSC_VER

packetc2l_test_game_result::packetc2l_test_game_result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void packetc2l_test_game_result::InitAsDefaultInstance() {
}

packetc2l_test_game_result::packetc2l_test_game_result(const packetc2l_test_game_result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void packetc2l_test_game_result::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 15008;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packetc2l_test_game_result::~packetc2l_test_game_result() {
  SharedDtor();
}

void packetc2l_test_game_result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void packetc2l_test_game_result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packetc2l_test_game_result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packetc2l_test_game_result_descriptor_;
}

const packetc2l_test_game_result& packetc2l_test_game_result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5f5dragons_5fprotocol_2eproto();
  return *default_instance_;
}

packetc2l_test_game_result* packetc2l_test_game_result::default_instance_ = NULL;

packetc2l_test_game_result* packetc2l_test_game_result::New() const {
  return new packetc2l_test_game_result;
}

void packetc2l_test_game_result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    packet_id_ = 15008;
    result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packetc2l_test_game_result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_test_game_result];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::game_5dragons_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::game_5dragons_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_result;
        break;
      }

      // optional int32 result = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void packetc2l_test_game_result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_test_game_result];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  // optional int32 result = 10;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* packetc2l_test_game_result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_test_game_result];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  // optional int32 result = 10;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int packetc2l_test_game_result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_test_game_result];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

    // optional int32 result = 10;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packetc2l_test_game_result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packetc2l_test_game_result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packetc2l_test_game_result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packetc2l_test_game_result::MergeFrom(const packetc2l_test_game_result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packetc2l_test_game_result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packetc2l_test_game_result::CopyFrom(const packetc2l_test_game_result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packetc2l_test_game_result::IsInitialized() const {

  return true;
}

void packetc2l_test_game_result::Swap(packetc2l_test_game_result* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packetc2l_test_game_result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packetc2l_test_game_result_descriptor_;
  metadata.reflection = packetc2l_test_game_result_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int packetl2c_debuginfo::kPacketIdFieldNumber;
const int packetl2c_debuginfo::kDebugInfosFieldNumber;
#endif  // !_MSC_VER

packetl2c_debuginfo::packetl2c_debuginfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void packetl2c_debuginfo::InitAsDefaultInstance() {
}

packetl2c_debuginfo::packetl2c_debuginfo(const packetl2c_debuginfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void packetl2c_debuginfo::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 15009;
  debug_infos_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packetl2c_debuginfo::~packetl2c_debuginfo() {
  SharedDtor();
}

void packetl2c_debuginfo::SharedDtor() {
  if (debug_infos_ != &::google::protobuf::internal::kEmptyString) {
    delete debug_infos_;
  }
  if (this != default_instance_) {
  }
}

void packetl2c_debuginfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packetl2c_debuginfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packetl2c_debuginfo_descriptor_;
}

const packetl2c_debuginfo& packetl2c_debuginfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_game_5f5dragons_5fprotocol_2eproto();
  return *default_instance_;
}

packetl2c_debuginfo* packetl2c_debuginfo::default_instance_ = NULL;

packetl2c_debuginfo* packetl2c_debuginfo::New() const {
  return new packetl2c_debuginfo;
}

void packetl2c_debuginfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    packet_id_ = 15009;
    if (has_debug_infos()) {
      if (debug_infos_ != &::google::protobuf::internal::kEmptyString) {
        debug_infos_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packetl2c_debuginfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_debuginfo];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::game_5dragons_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::game_5dragons_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_debug_infos;
        break;
      }

      // optional string debug_infos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_debug_infos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_debug_infos()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->debug_infos().data(), this->debug_infos().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void packetl2c_debuginfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_debuginfo];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  // optional string debug_infos = 2;
  if (has_debug_infos()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->debug_infos().data(), this->debug_infos().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->debug_infos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* packetl2c_debuginfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_debuginfo];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  // optional string debug_infos = 2;
  if (has_debug_infos()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->debug_infos().data(), this->debug_infos().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->debug_infos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int packetl2c_debuginfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .game_5dragons_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_debuginfo];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

    // optional string debug_infos = 2;
    if (has_debug_infos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->debug_infos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packetl2c_debuginfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packetl2c_debuginfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packetl2c_debuginfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packetl2c_debuginfo::MergeFrom(const packetl2c_debuginfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
    if (from.has_debug_infos()) {
      set_debug_infos(from.debug_infos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packetl2c_debuginfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packetl2c_debuginfo::CopyFrom(const packetl2c_debuginfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packetl2c_debuginfo::IsInitialized() const {

  return true;
}

void packetl2c_debuginfo::Swap(packetl2c_debuginfo* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(debug_infos_, other->debug_infos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packetl2c_debuginfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packetl2c_debuginfo_descriptor_;
  metadata.reflection = packetl2c_debuginfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace game_5dragons_protocols

// @@protoc_insertion_point(global_scope)
