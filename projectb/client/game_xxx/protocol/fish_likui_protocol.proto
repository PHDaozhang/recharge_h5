package fish_protocols;

import "fish_likui_def.proto"; 
import "msg_type_def.proto";


//获取游戏信息
message packetc2l_get_room_info {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_room_info];
}

//房间信息
message msg_room_info{
	optional int32 roomid = 1;		
}

//返回游戏信息
message packetl2c_get_room_info_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_room_info_result];
	repeated msg_room_info rooms = 2;
}

//进入游戏
message packetc2l_enter_table {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_enter_table];
	optional int32 roomid = 2 [default = 0];//roomid为0，如果在游戏中则直接进入
	optional int32 turret_rate = 3;
}

//返回进入游戏
message packetl2c_enter_table_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_enter_table_result];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
}

//尝试进入游戏
message packetc2l_try_enter_table {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_try_enter_table];
	optional int32 roomid = 2 [default = 0];//roomid为0，如果在游戏中则直接进入
}

//返回进入游戏
message packetl2c_try_enter_table_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_try_enter_table_result];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
	optional int32 try_roomid = 3 [default = 0];		//尝试进入的桌子
	optional int32 real_roomid = 4 [default = 0];		//真正进入的桌子
}

//切换桌子
message packetc2l_change_table {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_change_table];
}

//返回切换桌子
message packetl2c_change_table_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_change_table_result];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
}

//离开游戏
message packetc2l_leave_table {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_table];
}

//返回离开游戏
message packetl2c_leave_table_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_table_result];
	optional int64 sync_gold = 2;
} 

//检测状态
message packetc2l_check_state {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];
}

message msg_item{
	optional int32 item_id = 1;		//物品id
	optional int32 item_count  = 2;	//数量
	optional int32 end_time = 3;	//到期时间
}

//检测状态
message packetl2c_check_state_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];
	optional bool is_intable = 2 [default = false];//是否在桌子中
	
	repeated msg_item itemlist = 3;
	optional int32 turret_id = 4;
	optional int32 gamelvl = 5;
	optional int32 gameexp = 6;
	optional int32 getgift = 7;		//最后抽奖时间
}


//购买物品
message packetc2l_buy_item {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_buy_item];
	optional int32 shop_id = 2; //商品id
	optional int32 shop_count = 3 [default=1]; //商品数量
}

message packetl2c_buy_item_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_buy_item_result];
	optional int32 shop_id = 2;//商品id
	optional msg_type_def.e_msg_result_def result = 3 [default = e_rmt_fail];
	optional int32 shop_count = 4 [default=1]; 
}

//使用物品/道具/功能
message packetc2l_use_item {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_use_item];
	optional int32 item_id = 2;//物品id

	optional int32 pos_x = 3;
	optional int32 pos_y = 4;
}

message packetl2c_use_item_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_use_item_result];
	optional int32 item_id = 2;//物品id
	optional msg_type_def.e_msg_result_def result = 3 [default = e_rmt_fail];
	optional int32 item_count = 4 [default=1]; 
}

//获取商品列表 
message packetc2l_get_shoplist {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_shoplist];
}

message msg_shopitem {
	optional int32 shop_id = 1;			//商品ID
	optional int32 item_id = 2;			//物品ID
	optional int32 item_count = 3;		//物品数量
	optional int32 consume_type = 4;	//消耗类型
	optional int32 consume_count = 5;	//消耗数量
	optional int32 show_type = 6;		//显示类型
	optional int32 need_vip = 7;		//需要vip
}

message packetl2c_get_shoplist_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_shoplist_result];
	repeated msg_shopitem shoplist = 2;
}


//玩家升级(经验)
message packetc2l_player_levelup {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_player_levelup];
}

message packetl2c_player_levelup_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_player_levelup_result];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
	optional int32 cur_exp = 3 [default = 0];
}


//玩家使用礼券升级
message packetc2l_usetick_levelup {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_usetick_levelup];
	optional int32 uplevel = 2 [default = 0]; //要升到的等级 默认按一级升级
}

message packetl2c_usetick_levelup_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_usetick_levelup_result];
	optional int32 uplevel  = 2;
	optional msg_type_def.e_msg_result_def result = 3 [default = e_rmt_fail];	
}

//玩家升级
message packetl2c_player_auto_levelup {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_player_auto_levelup];
	optional int32 uplevel = 2;
	optional int64 award_gold = 3;
	optional int32 unlock_rate = 4 [default = 0];
}

//获得物品
message packetl2c_give_item_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_give_item_result];
	optional int32 itemid  = 2;
	optional int32 itemcount  = 3 [default = 1];
	
}