// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_shuihz_protocol.proto

#ifndef PROTOBUF_game_5fshuihz_5fprotocol_2eproto__INCLUDED
#define PROTOBUF_game_5fshuihz_5fprotocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "game_shuihz_def.pb.h"
#include "msg_type_def.pb.h"
// @@protoc_insertion_point(includes)

namespace game_shuihz_protocols {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

class packetc2l_check_state;
class packetc2l_check_state_result;
class packetc2l_enter_game;
class packetc2l_enter_game_result;
class packetc2l_leave_game;
class packetc2l_leave_game_result;
class packetc2l_star_game;
class LineInfo;
class IconInfo;
class packetc2l_star_game_result;
class packetc2l_req_bonus_game;
class packetl2c_req_bonus_game_result;
class packetc2l_req_double_game;
class packetl2c_req_double_game_result;
class packetc2l_get_room_info;
class msg_room_info;
class packetl2c_get_room_info_result;
class packetl2c_enter_player_info;
class packetl2c_leave_player_info;
class packetl2c_player_change_money;
class packetl2c_bc_change_attr;
class packetc2l_supply_chip;
class packetl2c_supply_chip_result;
class packetc2l_get_room_scene_info;
class packetl2c_get_room_scene_info_result;
class packetc2l_settlement;
class packetl2c_settlement_result;
class room_player;
class packetl2c_gm_get_room_info;
class packetl2c_gm_get_room_info_result;
class packetl2c_gm_do_kill;
class packetl2c_gm_do_kill_result;

// ===================================================================

class packetc2l_check_state : public ::google::protobuf::Message {
 public:
  packetc2l_check_state();
  virtual ~packetc2l_check_state();

  packetc2l_check_state(const packetc2l_check_state& from);

  inline packetc2l_check_state& operator=(const packetc2l_check_state& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_check_state& default_instance();

  void Swap(packetc2l_check_state* other);

  // implements Message ----------------------------------------------

  packetc2l_check_state* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_check_state& from);
  void MergeFrom(const packetc2l_check_state& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shuihz_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shuihz_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:game_shuihz_protocols.packetc2l_check_state)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_check_state* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_check_state_result : public ::google::protobuf::Message {
 public:
  packetc2l_check_state_result();
  virtual ~packetc2l_check_state_result();

  packetc2l_check_state_result(const packetc2l_check_state_result& from);

  inline packetc2l_check_state_result& operator=(const packetc2l_check_state_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_check_state_result& default_instance();

  void Swap(packetc2l_check_state_result* other);

  // implements Message ----------------------------------------------

  packetc2l_check_state_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_check_state_result& from);
  void MergeFrom(const packetc2l_check_state_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shuihz_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shuihz_protocols::e_server_msg_type value);

  // optional int32 room_id = 2;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  inline ::google::protobuf::int32 room_id() const;
  inline void set_room_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_shuihz_protocols.packetc2l_check_state_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 room_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_check_state_result* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_enter_game : public ::google::protobuf::Message {
 public:
  packetc2l_enter_game();
  virtual ~packetc2l_enter_game();

  packetc2l_enter_game(const packetc2l_enter_game& from);

  inline packetc2l_enter_game& operator=(const packetc2l_enter_game& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_enter_game& default_instance();

  void Swap(packetc2l_enter_game* other);

  // implements Message ----------------------------------------------

  packetc2l_enter_game* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_enter_game& from);
  void MergeFrom(const packetc2l_enter_game& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_enter_game];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shuihz_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shuihz_protocols::e_server_msg_type value);

  // optional int32 room_id = 2;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  inline ::google::protobuf::int32 room_id() const;
  inline void set_room_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_shuihz_protocols.packetc2l_enter_game)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 room_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_enter_game* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_enter_game_result : public ::google::protobuf::Message {
 public:
  packetc2l_enter_game_result();
  virtual ~packetc2l_enter_game_result();

  packetc2l_enter_game_result(const packetc2l_enter_game_result& from);

  inline packetc2l_enter_game_result& operator=(const packetc2l_enter_game_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_enter_game_result& default_instance();

  void Swap(packetc2l_enter_game_result* other);

  // implements Message ----------------------------------------------

  packetc2l_enter_game_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_enter_game_result& from);
  void MergeFrom(const packetc2l_enter_game_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_enter_game_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shuihz_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shuihz_protocols::e_server_msg_type value);

  // optional int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 room_id = 3;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 3;
  inline ::google::protobuf::int32 room_id() const;
  inline void set_room_id(::google::protobuf::int32 value);

  // repeated .game_shuihz_protocols.msg_player_info player_list = 4;
  inline int player_list_size() const;
  inline void clear_player_list();
  static const int kPlayerListFieldNumber = 4;
  inline const ::game_shuihz_protocols::msg_player_info& player_list(int index) const;
  inline ::game_shuihz_protocols::msg_player_info* mutable_player_list(int index);
  inline ::game_shuihz_protocols::msg_player_info* add_player_list();
  inline const ::google::protobuf::RepeatedPtrField< ::game_shuihz_protocols::msg_player_info >&
      player_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_shuihz_protocols::msg_player_info >*
      mutable_player_list();

  // @@protoc_insertion_point(class_scope:game_shuihz_protocols.packetc2l_enter_game_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_room_id();
  inline void clear_has_room_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::RepeatedPtrField< ::game_shuihz_protocols::msg_player_info > player_list_;
  ::google::protobuf::int32 room_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_enter_game_result* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_leave_game : public ::google::protobuf::Message {
 public:
  packetc2l_leave_game();
  virtual ~packetc2l_leave_game();

  packetc2l_leave_game(const packetc2l_leave_game& from);

  inline packetc2l_leave_game& operator=(const packetc2l_leave_game& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_leave_game& default_instance();

  void Swap(packetc2l_leave_game* other);

  // implements Message ----------------------------------------------

  packetc2l_leave_game* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_leave_game& from);
  void MergeFrom(const packetc2l_leave_game& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_game];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shuihz_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shuihz_protocols::e_server_msg_type value);

  // optional int32 room_id = 2;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  inline ::google::protobuf::int32 room_id() const;
  inline void set_room_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_shuihz_protocols.packetc2l_leave_game)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 room_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_leave_game* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_leave_game_result : public ::google::protobuf::Message {
 public:
  packetc2l_leave_game_result();
  virtual ~packetc2l_leave_game_result();

  packetc2l_leave_game_result(const packetc2l_leave_game_result& from);

  inline packetc2l_leave_game_result& operator=(const packetc2l_leave_game_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_leave_game_result& default_instance();

  void Swap(packetc2l_leave_game_result* other);

  // implements Message ----------------------------------------------

  packetc2l_leave_game_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_leave_game_result& from);
  void MergeFrom(const packetc2l_leave_game_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_game_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shuihz_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shuihz_protocols::e_server_msg_type value);

  // optional int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_shuihz_protocols.packetc2l_leave_game_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_leave_game_result* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_star_game : public ::google::protobuf::Message {
 public:
  packetc2l_star_game();
  virtual ~packetc2l_star_game();

  packetc2l_star_game(const packetc2l_star_game& from);

  inline packetc2l_star_game& operator=(const packetc2l_star_game& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_star_game& default_instance();

  void Swap(packetc2l_star_game* other);

  // implements Message ----------------------------------------------

  packetc2l_star_game* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_star_game& from);
  void MergeFrom(const packetc2l_star_game& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_star_game];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shuihz_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shuihz_protocols::e_server_msg_type value);

  // optional int32 rateIndex = 2;
  inline bool has_rateindex() const;
  inline void clear_rateindex();
  static const int kRateIndexFieldNumber = 2;
  inline ::google::protobuf::int32 rateindex() const;
  inline void set_rateindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_shuihz_protocols.packetc2l_star_game)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_rateindex();
  inline void clear_has_rateindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 rateindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_star_game* default_instance_;
};
// -------------------------------------------------------------------

class LineInfo : public ::google::protobuf::Message {
 public:
  LineInfo();
  virtual ~LineInfo();

  LineInfo(const LineInfo& from);

  inline LineInfo& operator=(const LineInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LineInfo& default_instance();

  void Swap(LineInfo* other);

  // implements Message ----------------------------------------------

  LineInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LineInfo& from);
  void MergeFrom(const LineInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 lineId = 1;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIdFieldNumber = 1;
  inline ::google::protobuf::int32 lineid() const;
  inline void set_lineid(::google::protobuf::int32 value);

  // optional int32 lightFlag = 2;
  inline bool has_lightflag() const;
  inline void clear_lightflag();
  static const int kLightFlagFieldNumber = 2;
  inline ::google::protobuf::int32 lightflag() const;
  inline void set_lightflag(::google::protobuf::int32 value);

  // optional int32 leftLinkCount = 3;
  inline bool has_leftlinkcount() const;
  inline void clear_leftlinkcount();
  static const int kLeftLinkCountFieldNumber = 3;
  inline ::google::protobuf::int32 leftlinkcount() const;
  inline void set_leftlinkcount(::google::protobuf::int32 value);

  // optional int32 rightLinkCount = 4;
  inline bool has_rightlinkcount() const;
  inline void clear_rightlinkcount();
  static const int kRightLinkCountFieldNumber = 4;
  inline ::google::protobuf::int32 rightlinkcount() const;
  inline void set_rightlinkcount(::google::protobuf::int32 value);

  // optional int32 leftIcon = 5;
  inline bool has_lefticon() const;
  inline void clear_lefticon();
  static const int kLeftIconFieldNumber = 5;
  inline ::google::protobuf::int32 lefticon() const;
  inline void set_lefticon(::google::protobuf::int32 value);

  // optional int32 rightIcon = 6;
  inline bool has_righticon() const;
  inline void clear_righticon();
  static const int kRightIconFieldNumber = 6;
  inline ::google::protobuf::int32 righticon() const;
  inline void set_righticon(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_shuihz_protocols.LineInfo)
 private:
  inline void set_has_lineid();
  inline void clear_has_lineid();
  inline void set_has_lightflag();
  inline void clear_has_lightflag();
  inline void set_has_leftlinkcount();
  inline void clear_has_leftlinkcount();
  inline void set_has_rightlinkcount();
  inline void clear_has_rightlinkcount();
  inline void set_has_lefticon();
  inline void clear_has_lefticon();
  inline void set_has_righticon();
  inline void clear_has_righticon();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 lineid_;
  ::google::protobuf::int32 lightflag_;
  ::google::protobuf::int32 leftlinkcount_;
  ::google::protobuf::int32 rightlinkcount_;
  ::google::protobuf::int32 lefticon_;
  ::google::protobuf::int32 righticon_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static LineInfo* default_instance_;
};
// -------------------------------------------------------------------

class IconInfo : public ::google::protobuf::Message {
 public:
  IconInfo();
  virtual ~IconInfo();

  IconInfo(const IconInfo& from);

  inline IconInfo& operator=(const IconInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IconInfo& default_instance();

  void Swap(IconInfo* other);

  // implements Message ----------------------------------------------

  IconInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IconInfo& from);
  void MergeFrom(const IconInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 iconId = 1;
  inline bool has_iconid() const;
  inline void clear_iconid();
  static const int kIconIdFieldNumber = 1;
  inline ::google::protobuf::int32 iconid() const;
  inline void set_iconid(::google::protobuf::int32 value);

  // optional int32 rate = 2;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 2;
  inline ::google::protobuf::int32 rate() const;
  inline void set_rate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_shuihz_protocols.IconInfo)
 private:
  inline void set_has_iconid();
  inline void clear_has_iconid();
  inline void set_has_rate();
  inline void clear_has_rate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iconid_;
  ::google::protobuf::int32 rate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static IconInfo* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_star_game_result : public ::google::protobuf::Message {
 public:
  packetc2l_star_game_result();
  virtual ~packetc2l_star_game_result();

  packetc2l_star_game_result(const packetc2l_star_game_result& from);

  inline packetc2l_star_game_result& operator=(const packetc2l_star_game_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_star_game_result& default_instance();

  void Swap(packetc2l_star_game_result* other);

  // implements Message ----------------------------------------------

  packetc2l_star_game_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_star_game_result& from);
  void MergeFrom(const packetc2l_star_game_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_star_game_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shuihz_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shuihz_protocols::e_server_msg_type value);

  // optional int32 moneyType = 2;
  inline bool has_moneytype() const;
  inline void clear_moneytype();
  static const int kMoneyTypeFieldNumber = 2;
  inline ::google::protobuf::int32 moneytype() const;
  inline void set_moneytype(::google::protobuf::int32 value);

  // optional string imageArr = 3;
  inline bool has_imagearr() const;
  inline void clear_imagearr();
  static const int kImageArrFieldNumber = 3;
  inline const ::std::string& imagearr() const;
  inline void set_imagearr(const ::std::string& value);
  inline void set_imagearr(const char* value);
  inline void set_imagearr(const char* value, size_t size);
  inline ::std::string* mutable_imagearr();
  inline ::std::string* release_imagearr();
  inline void set_allocated_imagearr(::std::string* imagearr);

  // repeated .game_shuihz_protocols.LineInfo infoList = 4;
  inline int infolist_size() const;
  inline void clear_infolist();
  static const int kInfoListFieldNumber = 4;
  inline const ::game_shuihz_protocols::LineInfo& infolist(int index) const;
  inline ::game_shuihz_protocols::LineInfo* mutable_infolist(int index);
  inline ::game_shuihz_protocols::LineInfo* add_infolist();
  inline const ::google::protobuf::RepeatedPtrField< ::game_shuihz_protocols::LineInfo >&
      infolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_shuihz_protocols::LineInfo >*
      mutable_infolist();

  // optional int32 winMoney = 5;
  inline bool has_winmoney() const;
  inline void clear_winmoney();
  static const int kWinMoneyFieldNumber = 5;
  inline ::google::protobuf::int32 winmoney() const;
  inline void set_winmoney(::google::protobuf::int32 value);

  // optional int32 deductMoney = 6;
  inline bool has_deductmoney() const;
  inline void clear_deductmoney();
  static const int kDeductMoneyFieldNumber = 6;
  inline ::google::protobuf::int32 deductmoney() const;
  inline void set_deductmoney(::google::protobuf::int32 value);

  // optional int32 result = 7;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 7;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 curMoney = 8;
  inline bool has_curmoney() const;
  inline void clear_curmoney();
  static const int kCurMoneyFieldNumber = 8;
  inline ::google::protobuf::int32 curmoney() const;
  inline void set_curmoney(::google::protobuf::int32 value);

  // optional int32 bonusGameCount = 9;
  inline bool has_bonusgamecount() const;
  inline void clear_bonusgamecount();
  static const int kBonusGameCountFieldNumber = 9;
  inline ::google::protobuf::int32 bonusgamecount() const;
  inline void set_bonusgamecount(::google::protobuf::int32 value);

  // optional int32 fullType = 10;
  inline bool has_fulltype() const;
  inline void clear_fulltype();
  static const int kFullTypeFieldNumber = 10;
  inline ::google::protobuf::int32 fulltype() const;
  inline void set_fulltype(::google::protobuf::int32 value);

  // optional int32 fullId = 11;
  inline bool has_fullid() const;
  inline void clear_fullid();
  static const int kFullIdFieldNumber = 11;
  inline ::google::protobuf::int32 fullid() const;
  inline void set_fullid(::google::protobuf::int32 value);

  // repeated .game_shuihz_protocols.IconInfo icons = 12;
  inline int icons_size() const;
  inline void clear_icons();
  static const int kIconsFieldNumber = 12;
  inline const ::game_shuihz_protocols::IconInfo& icons(int index) const;
  inline ::game_shuihz_protocols::IconInfo* mutable_icons(int index);
  inline ::game_shuihz_protocols::IconInfo* add_icons();
  inline const ::google::protobuf::RepeatedPtrField< ::game_shuihz_protocols::IconInfo >&
      icons() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_shuihz_protocols::IconInfo >*
      mutable_icons();

  // @@protoc_insertion_point(class_scope:game_shuihz_protocols.packetc2l_star_game_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_moneytype();
  inline void clear_has_moneytype();
  inline void set_has_imagearr();
  inline void clear_has_imagearr();
  inline void set_has_winmoney();
  inline void clear_has_winmoney();
  inline void set_has_deductmoney();
  inline void clear_has_deductmoney();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_curmoney();
  inline void clear_has_curmoney();
  inline void set_has_bonusgamecount();
  inline void clear_has_bonusgamecount();
  inline void set_has_fulltype();
  inline void clear_has_fulltype();
  inline void set_has_fullid();
  inline void clear_has_fullid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 moneytype_;
  ::std::string* imagearr_;
  ::google::protobuf::RepeatedPtrField< ::game_shuihz_protocols::LineInfo > infolist_;
  ::google::protobuf::int32 winmoney_;
  ::google::protobuf::int32 deductmoney_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 curmoney_;
  ::google::protobuf::int32 bonusgamecount_;
  ::google::protobuf::int32 fulltype_;
  ::google::protobuf::RepeatedPtrField< ::game_shuihz_protocols::IconInfo > icons_;
  ::google::protobuf::int32 fullid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_star_game_result* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_req_bonus_game : public ::google::protobuf::Message {
 public:
  packetc2l_req_bonus_game();
  virtual ~packetc2l_req_bonus_game();

  packetc2l_req_bonus_game(const packetc2l_req_bonus_game& from);

  inline packetc2l_req_bonus_game& operator=(const packetc2l_req_bonus_game& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_req_bonus_game& default_instance();

  void Swap(packetc2l_req_bonus_game* other);

  // implements Message ----------------------------------------------

  packetc2l_req_bonus_game* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_req_bonus_game& from);
  void MergeFrom(const packetc2l_req_bonus_game& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_req_bonus_game];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shuihz_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shuihz_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:game_shuihz_protocols.packetc2l_req_bonus_game)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_req_bonus_game* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_req_bonus_game_result : public ::google::protobuf::Message {
 public:
  packetl2c_req_bonus_game_result();
  virtual ~packetl2c_req_bonus_game_result();

  packetl2c_req_bonus_game_result(const packetl2c_req_bonus_game_result& from);

  inline packetl2c_req_bonus_game_result& operator=(const packetl2c_req_bonus_game_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_req_bonus_game_result& default_instance();

  void Swap(packetl2c_req_bonus_game_result* other);

  // implements Message ----------------------------------------------

  packetl2c_req_bonus_game_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_req_bonus_game_result& from);
  void MergeFrom(const packetl2c_req_bonus_game_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_req_bonus_game_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shuihz_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shuihz_protocols::e_server_msg_type value);

  // optional string innerIconArr = 2;
  inline bool has_innericonarr() const;
  inline void clear_innericonarr();
  static const int kInnerIconArrFieldNumber = 2;
  inline const ::std::string& innericonarr() const;
  inline void set_innericonarr(const ::std::string& value);
  inline void set_innericonarr(const char* value);
  inline void set_innericonarr(const char* value, size_t size);
  inline ::std::string* mutable_innericonarr();
  inline ::std::string* release_innericonarr();
  inline void set_allocated_innericonarr(::std::string* innericonarr);

  // optional int32 outerIcon = 3;
  inline bool has_outericon() const;
  inline void clear_outericon();
  static const int kOuterIconFieldNumber = 3;
  inline ::google::protobuf::int32 outericon() const;
  inline void set_outericon(::google::protobuf::int32 value);

  // optional int32 winMoney = 4;
  inline bool has_winmoney() const;
  inline void clear_winmoney();
  static const int kWinMoneyFieldNumber = 4;
  inline ::google::protobuf::int32 winmoney() const;
  inline void set_winmoney(::google::protobuf::int32 value);

  // optional int32 result = 5;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 5;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional string showIcon = 6;
  inline bool has_showicon() const;
  inline void clear_showicon();
  static const int kShowIconFieldNumber = 6;
  inline const ::std::string& showicon() const;
  inline void set_showicon(const ::std::string& value);
  inline void set_showicon(const char* value);
  inline void set_showicon(const char* value, size_t size);
  inline ::std::string* mutable_showicon();
  inline ::std::string* release_showicon();
  inline void set_allocated_showicon(::std::string* showicon);

  // @@protoc_insertion_point(class_scope:game_shuihz_protocols.packetl2c_req_bonus_game_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_innericonarr();
  inline void clear_has_innericonarr();
  inline void set_has_outericon();
  inline void clear_has_outericon();
  inline void set_has_winmoney();
  inline void clear_has_winmoney();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_showicon();
  inline void clear_has_showicon();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* innericonarr_;
  int packet_id_;
  ::google::protobuf::int32 outericon_;
  ::google::protobuf::int32 winmoney_;
  ::google::protobuf::int32 result_;
  ::std::string* showicon_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_req_bonus_game_result* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_req_double_game : public ::google::protobuf::Message {
 public:
  packetc2l_req_double_game();
  virtual ~packetc2l_req_double_game();

  packetc2l_req_double_game(const packetc2l_req_double_game& from);

  inline packetc2l_req_double_game& operator=(const packetc2l_req_double_game& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_req_double_game& default_instance();

  void Swap(packetc2l_req_double_game* other);

  // implements Message ----------------------------------------------

  packetc2l_req_double_game* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_req_double_game& from);
  void MergeFrom(const packetc2l_req_double_game& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_req_double_game];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shuihz_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shuihz_protocols::e_server_msg_type value);

  // optional int32 betpos = 2;
  inline bool has_betpos() const;
  inline void clear_betpos();
  static const int kBetposFieldNumber = 2;
  inline ::google::protobuf::int32 betpos() const;
  inline void set_betpos(::google::protobuf::int32 value);

  // optional int32 betgold = 3;
  inline bool has_betgold() const;
  inline void clear_betgold();
  static const int kBetgoldFieldNumber = 3;
  inline ::google::protobuf::int32 betgold() const;
  inline void set_betgold(::google::protobuf::int32 value);

  // optional int32 betid = 4;
  inline bool has_betid() const;
  inline void clear_betid();
  static const int kBetidFieldNumber = 4;
  inline ::google::protobuf::int32 betid() const;
  inline void set_betid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_shuihz_protocols.packetc2l_req_double_game)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_betpos();
  inline void clear_has_betpos();
  inline void set_has_betgold();
  inline void clear_has_betgold();
  inline void set_has_betid();
  inline void clear_has_betid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 betpos_;
  ::google::protobuf::int32 betgold_;
  ::google::protobuf::int32 betid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_req_double_game* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_req_double_game_result : public ::google::protobuf::Message {
 public:
  packetl2c_req_double_game_result();
  virtual ~packetl2c_req_double_game_result();

  packetl2c_req_double_game_result(const packetl2c_req_double_game_result& from);

  inline packetl2c_req_double_game_result& operator=(const packetl2c_req_double_game_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_req_double_game_result& default_instance();

  void Swap(packetl2c_req_double_game_result* other);

  // implements Message ----------------------------------------------

  packetl2c_req_double_game_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_req_double_game_result& from);
  void MergeFrom(const packetl2c_req_double_game_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_req_double_game_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shuihz_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shuihz_protocols::e_server_msg_type value);

  // optional int32 dice1 = 2;
  inline bool has_dice1() const;
  inline void clear_dice1();
  static const int kDice1FieldNumber = 2;
  inline ::google::protobuf::int32 dice1() const;
  inline void set_dice1(::google::protobuf::int32 value);

  // optional int32 dice2 = 3;
  inline bool has_dice2() const;
  inline void clear_dice2();
  static const int kDice2FieldNumber = 3;
  inline ::google::protobuf::int32 dice2() const;
  inline void set_dice2(::google::protobuf::int32 value);

  // optional int32 winMoney = 4;
  inline bool has_winmoney() const;
  inline void clear_winmoney();
  static const int kWinMoneyFieldNumber = 4;
  inline ::google::protobuf::int32 winmoney() const;
  inline void set_winmoney(::google::protobuf::int32 value);

  // optional int32 betpos = 5;
  inline bool has_betpos() const;
  inline void clear_betpos();
  static const int kBetposFieldNumber = 5;
  inline ::google::protobuf::int32 betpos() const;
  inline void set_betpos(::google::protobuf::int32 value);

  // optional int32 result = 6;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 6;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_shuihz_protocols.packetl2c_req_double_game_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_dice1();
  inline void clear_has_dice1();
  inline void set_has_dice2();
  inline void clear_has_dice2();
  inline void set_has_winmoney();
  inline void clear_has_winmoney();
  inline void set_has_betpos();
  inline void clear_has_betpos();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 dice1_;
  ::google::protobuf::int32 dice2_;
  ::google::protobuf::int32 winmoney_;
  ::google::protobuf::int32 betpos_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_req_double_game_result* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_get_room_info : public ::google::protobuf::Message {
 public:
  packetc2l_get_room_info();
  virtual ~packetc2l_get_room_info();

  packetc2l_get_room_info(const packetc2l_get_room_info& from);

  inline packetc2l_get_room_info& operator=(const packetc2l_get_room_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_get_room_info& default_instance();

  void Swap(packetc2l_get_room_info* other);

  // implements Message ----------------------------------------------

  packetc2l_get_room_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_get_room_info& from);
  void MergeFrom(const packetc2l_get_room_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_room_info];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shuihz_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shuihz_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:game_shuihz_protocols.packetc2l_get_room_info)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_get_room_info* default_instance_;
};
// -------------------------------------------------------------------

class msg_room_info : public ::google::protobuf::Message {
 public:
  msg_room_info();
  virtual ~msg_room_info();

  msg_room_info(const msg_room_info& from);

  inline msg_room_info& operator=(const msg_room_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_room_info& default_instance();

  void Swap(msg_room_info* other);

  // implements Message ----------------------------------------------

  msg_room_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_room_info& from);
  void MergeFrom(const msg_room_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 roomid = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  inline ::google::protobuf::int32 roomid() const;
  inline void set_roomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_shuihz_protocols.msg_room_info)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roomid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static msg_room_info* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_get_room_info_result : public ::google::protobuf::Message {
 public:
  packetl2c_get_room_info_result();
  virtual ~packetl2c_get_room_info_result();

  packetl2c_get_room_info_result(const packetl2c_get_room_info_result& from);

  inline packetl2c_get_room_info_result& operator=(const packetl2c_get_room_info_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_get_room_info_result& default_instance();

  void Swap(packetl2c_get_room_info_result* other);

  // implements Message ----------------------------------------------

  packetl2c_get_room_info_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_get_room_info_result& from);
  void MergeFrom(const packetl2c_get_room_info_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_room_info_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shuihz_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shuihz_protocols::e_server_msg_type value);

  // repeated .game_shuihz_protocols.msg_room_info rooms = 2;
  inline int rooms_size() const;
  inline void clear_rooms();
  static const int kRoomsFieldNumber = 2;
  inline const ::game_shuihz_protocols::msg_room_info& rooms(int index) const;
  inline ::game_shuihz_protocols::msg_room_info* mutable_rooms(int index);
  inline ::game_shuihz_protocols::msg_room_info* add_rooms();
  inline const ::google::protobuf::RepeatedPtrField< ::game_shuihz_protocols::msg_room_info >&
      rooms() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_shuihz_protocols::msg_room_info >*
      mutable_rooms();

  // @@protoc_insertion_point(class_scope:game_shuihz_protocols.packetl2c_get_room_info_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::game_shuihz_protocols::msg_room_info > rooms_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_get_room_info_result* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_enter_player_info : public ::google::protobuf::Message {
 public:
  packetl2c_enter_player_info();
  virtual ~packetl2c_enter_player_info();

  packetl2c_enter_player_info(const packetl2c_enter_player_info& from);

  inline packetl2c_enter_player_info& operator=(const packetl2c_enter_player_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_enter_player_info& default_instance();

  void Swap(packetl2c_enter_player_info* other);

  // implements Message ----------------------------------------------

  packetl2c_enter_player_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_enter_player_info& from);
  void MergeFrom(const packetl2c_enter_player_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_enter_player_info];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shuihz_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shuihz_protocols::e_server_msg_type value);

  // optional .game_shuihz_protocols.msg_player_info player_info = 2;
  inline bool has_player_info() const;
  inline void clear_player_info();
  static const int kPlayerInfoFieldNumber = 2;
  inline const ::game_shuihz_protocols::msg_player_info& player_info() const;
  inline ::game_shuihz_protocols::msg_player_info* mutable_player_info();
  inline ::game_shuihz_protocols::msg_player_info* release_player_info();
  inline void set_allocated_player_info(::game_shuihz_protocols::msg_player_info* player_info);

  // @@protoc_insertion_point(class_scope:game_shuihz_protocols.packetl2c_enter_player_info)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_player_info();
  inline void clear_has_player_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::game_shuihz_protocols::msg_player_info* player_info_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_enter_player_info* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_leave_player_info : public ::google::protobuf::Message {
 public:
  packetl2c_leave_player_info();
  virtual ~packetl2c_leave_player_info();

  packetl2c_leave_player_info(const packetl2c_leave_player_info& from);

  inline packetl2c_leave_player_info& operator=(const packetl2c_leave_player_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_leave_player_info& default_instance();

  void Swap(packetl2c_leave_player_info* other);

  // implements Message ----------------------------------------------

  packetl2c_leave_player_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_leave_player_info& from);
  void MergeFrom(const packetl2c_leave_player_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_player_info];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shuihz_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shuihz_protocols::e_server_msg_type value);

  // optional int32 player_id = 2;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_shuihz_protocols.packetl2c_leave_player_info)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_player_id();
  inline void clear_has_player_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 player_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_leave_player_info* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_player_change_money : public ::google::protobuf::Message {
 public:
  packetl2c_player_change_money();
  virtual ~packetl2c_player_change_money();

  packetl2c_player_change_money(const packetl2c_player_change_money& from);

  inline packetl2c_player_change_money& operator=(const packetl2c_player_change_money& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_player_change_money& default_instance();

  void Swap(packetl2c_player_change_money* other);

  // implements Message ----------------------------------------------

  packetl2c_player_change_money* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_player_change_money& from);
  void MergeFrom(const packetl2c_player_change_money& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_player_change_money];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shuihz_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shuihz_protocols::e_server_msg_type value);

  // optional int32 player_id = 2;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // optional int64 cur_money = 3;
  inline bool has_cur_money() const;
  inline void clear_cur_money();
  static const int kCurMoneyFieldNumber = 3;
  inline ::google::protobuf::int64 cur_money() const;
  inline void set_cur_money(::google::protobuf::int64 value);

  // optional int64 change_money = 4;
  inline bool has_change_money() const;
  inline void clear_change_money();
  static const int kChangeMoneyFieldNumber = 4;
  inline ::google::protobuf::int64 change_money() const;
  inline void set_change_money(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:game_shuihz_protocols.packetl2c_player_change_money)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_cur_money();
  inline void clear_has_cur_money();
  inline void set_has_change_money();
  inline void clear_has_change_money();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 player_id_;
  ::google::protobuf::int64 cur_money_;
  ::google::protobuf::int64 change_money_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_player_change_money* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_bc_change_attr : public ::google::protobuf::Message {
 public:
  packetl2c_bc_change_attr();
  virtual ~packetl2c_bc_change_attr();

  packetl2c_bc_change_attr(const packetl2c_bc_change_attr& from);

  inline packetl2c_bc_change_attr& operator=(const packetl2c_bc_change_attr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_bc_change_attr& default_instance();

  void Swap(packetl2c_bc_change_attr* other);

  // implements Message ----------------------------------------------

  packetl2c_bc_change_attr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_bc_change_attr& from);
  void MergeFrom(const packetl2c_bc_change_attr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_change_attr];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shuihz_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shuihz_protocols::e_server_msg_type value);

  // optional int32 player_id = 2;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // optional int32 item_type = 3;
  inline bool has_item_type() const;
  inline void clear_item_type();
  static const int kItemTypeFieldNumber = 3;
  inline ::google::protobuf::int32 item_type() const;
  inline void set_item_type(::google::protobuf::int32 value);

  // optional int64 change_value = 4;
  inline bool has_change_value() const;
  inline void clear_change_value();
  static const int kChangeValueFieldNumber = 4;
  inline ::google::protobuf::int64 change_value() const;
  inline void set_change_value(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:game_shuihz_protocols.packetl2c_bc_change_attr)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_item_type();
  inline void clear_has_item_type();
  inline void set_has_change_value();
  inline void clear_has_change_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 player_id_;
  ::google::protobuf::int64 change_value_;
  ::google::protobuf::int32 item_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_bc_change_attr* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_supply_chip : public ::google::protobuf::Message {
 public:
  packetc2l_supply_chip();
  virtual ~packetc2l_supply_chip();

  packetc2l_supply_chip(const packetc2l_supply_chip& from);

  inline packetc2l_supply_chip& operator=(const packetc2l_supply_chip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_supply_chip& default_instance();

  void Swap(packetc2l_supply_chip* other);

  // implements Message ----------------------------------------------

  packetc2l_supply_chip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_supply_chip& from);
  void MergeFrom(const packetc2l_supply_chip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_supply_chip];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shuihz_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shuihz_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:game_shuihz_protocols.packetc2l_supply_chip)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_supply_chip* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_supply_chip_result : public ::google::protobuf::Message {
 public:
  packetl2c_supply_chip_result();
  virtual ~packetl2c_supply_chip_result();

  packetl2c_supply_chip_result(const packetl2c_supply_chip_result& from);

  inline packetl2c_supply_chip_result& operator=(const packetl2c_supply_chip_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_supply_chip_result& default_instance();

  void Swap(packetl2c_supply_chip_result* other);

  // implements Message ----------------------------------------------

  packetl2c_supply_chip_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_supply_chip_result& from);
  void MergeFrom(const packetl2c_supply_chip_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_supply_chip_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shuihz_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shuihz_protocols::e_server_msg_type value);

  // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::msg_type_def::e_msg_result_def result() const;
  inline void set_result(::msg_type_def::e_msg_result_def value);

  // optional int64 gold = 6;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 6;
  inline ::google::protobuf::int64 gold() const;
  inline void set_gold(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:game_shuihz_protocols.packetl2c_supply_chip_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_gold();
  inline void clear_has_gold();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  int result_;
  ::google::protobuf::int64 gold_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_supply_chip_result* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_get_room_scene_info : public ::google::protobuf::Message {
 public:
  packetc2l_get_room_scene_info();
  virtual ~packetc2l_get_room_scene_info();

  packetc2l_get_room_scene_info(const packetc2l_get_room_scene_info& from);

  inline packetc2l_get_room_scene_info& operator=(const packetc2l_get_room_scene_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_get_room_scene_info& default_instance();

  void Swap(packetc2l_get_room_scene_info* other);

  // implements Message ----------------------------------------------

  packetc2l_get_room_scene_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_get_room_scene_info& from);
  void MergeFrom(const packetc2l_get_room_scene_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_room_scene_info];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shuihz_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shuihz_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:game_shuihz_protocols.packetc2l_get_room_scene_info)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_get_room_scene_info* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_get_room_scene_info_result : public ::google::protobuf::Message {
 public:
  packetl2c_get_room_scene_info_result();
  virtual ~packetl2c_get_room_scene_info_result();

  packetl2c_get_room_scene_info_result(const packetl2c_get_room_scene_info_result& from);

  inline packetl2c_get_room_scene_info_result& operator=(const packetl2c_get_room_scene_info_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_get_room_scene_info_result& default_instance();

  void Swap(packetl2c_get_room_scene_info_result* other);

  // implements Message ----------------------------------------------

  packetl2c_get_room_scene_info_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_get_room_scene_info_result& from);
  void MergeFrom(const packetl2c_get_room_scene_info_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_room_scene_info];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shuihz_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shuihz_protocols::e_server_msg_type value);

  // optional int32 room_id = 2;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  inline ::google::protobuf::int32 room_id() const;
  inline void set_room_id(::google::protobuf::int32 value);

  // repeated .game_shuihz_protocols.msg_player_info player_list = 3;
  inline int player_list_size() const;
  inline void clear_player_list();
  static const int kPlayerListFieldNumber = 3;
  inline const ::game_shuihz_protocols::msg_player_info& player_list(int index) const;
  inline ::game_shuihz_protocols::msg_player_info* mutable_player_list(int index);
  inline ::game_shuihz_protocols::msg_player_info* add_player_list();
  inline const ::google::protobuf::RepeatedPtrField< ::game_shuihz_protocols::msg_player_info >&
      player_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_shuihz_protocols::msg_player_info >*
      mutable_player_list();

  // @@protoc_insertion_point(class_scope:game_shuihz_protocols.packetl2c_get_room_scene_info_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 room_id_;
  ::google::protobuf::RepeatedPtrField< ::game_shuihz_protocols::msg_player_info > player_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_get_room_scene_info_result* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_settlement : public ::google::protobuf::Message {
 public:
  packetc2l_settlement();
  virtual ~packetc2l_settlement();

  packetc2l_settlement(const packetc2l_settlement& from);

  inline packetc2l_settlement& operator=(const packetc2l_settlement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_settlement& default_instance();

  void Swap(packetc2l_settlement* other);

  // implements Message ----------------------------------------------

  packetc2l_settlement* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_settlement& from);
  void MergeFrom(const packetc2l_settlement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_settlement];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shuihz_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shuihz_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:game_shuihz_protocols.packetc2l_settlement)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_settlement* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_settlement_result : public ::google::protobuf::Message {
 public:
  packetl2c_settlement_result();
  virtual ~packetl2c_settlement_result();

  packetl2c_settlement_result(const packetl2c_settlement_result& from);

  inline packetl2c_settlement_result& operator=(const packetl2c_settlement_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_settlement_result& default_instance();

  void Swap(packetl2c_settlement_result* other);

  // implements Message ----------------------------------------------

  packetl2c_settlement_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_settlement_result& from);
  void MergeFrom(const packetl2c_settlement_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_settlement_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shuihz_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shuihz_protocols::e_server_msg_type value);

  // optional int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int64 gold = 3;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 3;
  inline ::google::protobuf::int64 gold() const;
  inline void set_gold(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:game_shuihz_protocols.packetl2c_settlement_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_gold();
  inline void clear_has_gold();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int64 gold_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_settlement_result* default_instance_;
};
// -------------------------------------------------------------------

class room_player : public ::google::protobuf::Message {
 public:
  room_player();
  virtual ~room_player();

  room_player(const room_player& from);

  inline room_player& operator=(const room_player& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const room_player& default_instance();

  void Swap(room_player* other);

  // implements Message ----------------------------------------------

  room_player* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const room_player& from);
  void MergeFrom(const room_player& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // optional int64 gold = 2;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 2;
  inline ::google::protobuf::int64 gold() const;
  inline void set_gold(::google::protobuf::int64 value);

  // optional int64 bet = 3;
  inline bool has_bet() const;
  inline void clear_bet();
  static const int kBetFieldNumber = 3;
  inline ::google::protobuf::int64 bet() const;
  inline void set_bet(::google::protobuf::int64 value);

  // optional int64 profit_today = 4;
  inline bool has_profit_today() const;
  inline void clear_profit_today();
  static const int kProfitTodayFieldNumber = 4;
  inline ::google::protobuf::int64 profit_today() const;
  inline void set_profit_today(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:game_shuihz_protocols.room_player)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_bet();
  inline void clear_has_bet();
  inline void set_has_profit_today();
  inline void clear_has_profit_today();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 gold_;
  ::google::protobuf::int64 bet_;
  ::google::protobuf::int64 profit_today_;
  ::google::protobuf::int32 player_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static room_player* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_gm_get_room_info : public ::google::protobuf::Message {
 public:
  packetl2c_gm_get_room_info();
  virtual ~packetl2c_gm_get_room_info();

  packetl2c_gm_get_room_info(const packetl2c_gm_get_room_info& from);

  inline packetl2c_gm_get_room_info& operator=(const packetl2c_gm_get_room_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_gm_get_room_info& default_instance();

  void Swap(packetl2c_gm_get_room_info* other);

  // implements Message ----------------------------------------------

  packetl2c_gm_get_room_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_gm_get_room_info& from);
  void MergeFrom(const packetl2c_gm_get_room_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_gm_get_room_info];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shuihz_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shuihz_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:game_shuihz_protocols.packetl2c_gm_get_room_info)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_gm_get_room_info* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_gm_get_room_info_result : public ::google::protobuf::Message {
 public:
  packetl2c_gm_get_room_info_result();
  virtual ~packetl2c_gm_get_room_info_result();

  packetl2c_gm_get_room_info_result(const packetl2c_gm_get_room_info_result& from);

  inline packetl2c_gm_get_room_info_result& operator=(const packetl2c_gm_get_room_info_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_gm_get_room_info_result& default_instance();

  void Swap(packetl2c_gm_get_room_info_result* other);

  // implements Message ----------------------------------------------

  packetl2c_gm_get_room_info_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_gm_get_room_info_result& from);
  void MergeFrom(const packetl2c_gm_get_room_info_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_gm_get_room_info_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shuihz_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shuihz_protocols::e_server_msg_type value);

  // optional int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 killcount = 3;
  inline bool has_killcount() const;
  inline void clear_killcount();
  static const int kKillcountFieldNumber = 3;
  inline ::google::protobuf::int32 killcount() const;
  inline void set_killcount(::google::protobuf::int32 value);

  // repeated .game_shuihz_protocols.room_player players = 4;
  inline int players_size() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 4;
  inline const ::game_shuihz_protocols::room_player& players(int index) const;
  inline ::game_shuihz_protocols::room_player* mutable_players(int index);
  inline ::game_shuihz_protocols::room_player* add_players();
  inline const ::google::protobuf::RepeatedPtrField< ::game_shuihz_protocols::room_player >&
      players() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_shuihz_protocols::room_player >*
      mutable_players();

  // @@protoc_insertion_point(class_scope:game_shuihz_protocols.packetl2c_gm_get_room_info_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_killcount();
  inline void clear_has_killcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::RepeatedPtrField< ::game_shuihz_protocols::room_player > players_;
  ::google::protobuf::int32 killcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_gm_get_room_info_result* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_gm_do_kill : public ::google::protobuf::Message {
 public:
  packetl2c_gm_do_kill();
  virtual ~packetl2c_gm_do_kill();

  packetl2c_gm_do_kill(const packetl2c_gm_do_kill& from);

  inline packetl2c_gm_do_kill& operator=(const packetl2c_gm_do_kill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_gm_do_kill& default_instance();

  void Swap(packetl2c_gm_do_kill* other);

  // implements Message ----------------------------------------------

  packetl2c_gm_do_kill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_gm_do_kill& from);
  void MergeFrom(const packetl2c_gm_do_kill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_gm_do_kill];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shuihz_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shuihz_protocols::e_server_msg_type value);

  // optional int32 killcount = 2;
  inline bool has_killcount() const;
  inline void clear_killcount();
  static const int kKillcountFieldNumber = 2;
  inline ::google::protobuf::int32 killcount() const;
  inline void set_killcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_shuihz_protocols.packetl2c_gm_do_kill)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_killcount();
  inline void clear_has_killcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 killcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_gm_do_kill* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_gm_do_kill_result : public ::google::protobuf::Message {
 public:
  packetl2c_gm_do_kill_result();
  virtual ~packetl2c_gm_do_kill_result();

  packetl2c_gm_do_kill_result(const packetl2c_gm_do_kill_result& from);

  inline packetl2c_gm_do_kill_result& operator=(const packetl2c_gm_do_kill_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_gm_do_kill_result& default_instance();

  void Swap(packetl2c_gm_do_kill_result* other);

  // implements Message ----------------------------------------------

  packetl2c_gm_do_kill_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_gm_do_kill_result& from);
  void MergeFrom(const packetl2c_gm_do_kill_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_gm_do_kill_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shuihz_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shuihz_protocols::e_server_msg_type value);

  // optional int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_shuihz_protocols.packetl2c_gm_do_kill_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshuihz_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshuihz_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_gm_do_kill_result* default_instance_;
};
// ===================================================================


// ===================================================================

// packetc2l_check_state

// optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];
inline bool packetc2l_check_state::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_check_state::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_check_state::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_check_state::clear_packet_id() {
  packet_id_ = 10001;
  clear_has_packet_id();
}
inline ::game_shuihz_protocols::e_server_msg_type packetc2l_check_state::packet_id() const {
  return static_cast< ::game_shuihz_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_check_state::set_packet_id(::game_shuihz_protocols::e_server_msg_type value) {
  assert(::game_shuihz_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetc2l_check_state_result

// optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];
inline bool packetc2l_check_state_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_check_state_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_check_state_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_check_state_result::clear_packet_id() {
  packet_id_ = 15001;
  clear_has_packet_id();
}
inline ::game_shuihz_protocols::e_server_msg_type packetc2l_check_state_result::packet_id() const {
  return static_cast< ::game_shuihz_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_check_state_result::set_packet_id(::game_shuihz_protocols::e_server_msg_type value) {
  assert(::game_shuihz_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 room_id = 2;
inline bool packetc2l_check_state_result::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetc2l_check_state_result::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetc2l_check_state_result::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetc2l_check_state_result::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 packetc2l_check_state_result::room_id() const {
  return room_id_;
}
inline void packetc2l_check_state_result::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
}

// -------------------------------------------------------------------

// packetc2l_enter_game

// optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_enter_game];
inline bool packetc2l_enter_game::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_enter_game::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_enter_game::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_enter_game::clear_packet_id() {
  packet_id_ = 10002;
  clear_has_packet_id();
}
inline ::game_shuihz_protocols::e_server_msg_type packetc2l_enter_game::packet_id() const {
  return static_cast< ::game_shuihz_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_enter_game::set_packet_id(::game_shuihz_protocols::e_server_msg_type value) {
  assert(::game_shuihz_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 room_id = 2;
inline bool packetc2l_enter_game::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetc2l_enter_game::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetc2l_enter_game::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetc2l_enter_game::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 packetc2l_enter_game::room_id() const {
  return room_id_;
}
inline void packetc2l_enter_game::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
}

// -------------------------------------------------------------------

// packetc2l_enter_game_result

// optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_enter_game_result];
inline bool packetc2l_enter_game_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_enter_game_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_enter_game_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_enter_game_result::clear_packet_id() {
  packet_id_ = 15002;
  clear_has_packet_id();
}
inline ::game_shuihz_protocols::e_server_msg_type packetc2l_enter_game_result::packet_id() const {
  return static_cast< ::game_shuihz_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_enter_game_result::set_packet_id(::game_shuihz_protocols::e_server_msg_type value) {
  assert(::game_shuihz_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 result = 2;
inline bool packetc2l_enter_game_result::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetc2l_enter_game_result::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetc2l_enter_game_result::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetc2l_enter_game_result::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 packetc2l_enter_game_result::result() const {
  return result_;
}
inline void packetc2l_enter_game_result::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 room_id = 3;
inline bool packetc2l_enter_game_result::has_room_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetc2l_enter_game_result::set_has_room_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetc2l_enter_game_result::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetc2l_enter_game_result::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 packetc2l_enter_game_result::room_id() const {
  return room_id_;
}
inline void packetc2l_enter_game_result::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
}

// repeated .game_shuihz_protocols.msg_player_info player_list = 4;
inline int packetc2l_enter_game_result::player_list_size() const {
  return player_list_.size();
}
inline void packetc2l_enter_game_result::clear_player_list() {
  player_list_.Clear();
}
inline const ::game_shuihz_protocols::msg_player_info& packetc2l_enter_game_result::player_list(int index) const {
  return player_list_.Get(index);
}
inline ::game_shuihz_protocols::msg_player_info* packetc2l_enter_game_result::mutable_player_list(int index) {
  return player_list_.Mutable(index);
}
inline ::game_shuihz_protocols::msg_player_info* packetc2l_enter_game_result::add_player_list() {
  return player_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_shuihz_protocols::msg_player_info >&
packetc2l_enter_game_result::player_list() const {
  return player_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_shuihz_protocols::msg_player_info >*
packetc2l_enter_game_result::mutable_player_list() {
  return &player_list_;
}

// -------------------------------------------------------------------

// packetc2l_leave_game

// optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_game];
inline bool packetc2l_leave_game::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_leave_game::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_leave_game::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_leave_game::clear_packet_id() {
  packet_id_ = 10003;
  clear_has_packet_id();
}
inline ::game_shuihz_protocols::e_server_msg_type packetc2l_leave_game::packet_id() const {
  return static_cast< ::game_shuihz_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_leave_game::set_packet_id(::game_shuihz_protocols::e_server_msg_type value) {
  assert(::game_shuihz_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 room_id = 2;
inline bool packetc2l_leave_game::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetc2l_leave_game::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetc2l_leave_game::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetc2l_leave_game::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 packetc2l_leave_game::room_id() const {
  return room_id_;
}
inline void packetc2l_leave_game::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
}

// -------------------------------------------------------------------

// packetc2l_leave_game_result

// optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_game_result];
inline bool packetc2l_leave_game_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_leave_game_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_leave_game_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_leave_game_result::clear_packet_id() {
  packet_id_ = 15003;
  clear_has_packet_id();
}
inline ::game_shuihz_protocols::e_server_msg_type packetc2l_leave_game_result::packet_id() const {
  return static_cast< ::game_shuihz_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_leave_game_result::set_packet_id(::game_shuihz_protocols::e_server_msg_type value) {
  assert(::game_shuihz_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 result = 2;
inline bool packetc2l_leave_game_result::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetc2l_leave_game_result::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetc2l_leave_game_result::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetc2l_leave_game_result::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 packetc2l_leave_game_result::result() const {
  return result_;
}
inline void packetc2l_leave_game_result::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// packetc2l_star_game

// optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_star_game];
inline bool packetc2l_star_game::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_star_game::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_star_game::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_star_game::clear_packet_id() {
  packet_id_ = 10004;
  clear_has_packet_id();
}
inline ::game_shuihz_protocols::e_server_msg_type packetc2l_star_game::packet_id() const {
  return static_cast< ::game_shuihz_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_star_game::set_packet_id(::game_shuihz_protocols::e_server_msg_type value) {
  assert(::game_shuihz_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 rateIndex = 2;
inline bool packetc2l_star_game::has_rateindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetc2l_star_game::set_has_rateindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetc2l_star_game::clear_has_rateindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetc2l_star_game::clear_rateindex() {
  rateindex_ = 0;
  clear_has_rateindex();
}
inline ::google::protobuf::int32 packetc2l_star_game::rateindex() const {
  return rateindex_;
}
inline void packetc2l_star_game::set_rateindex(::google::protobuf::int32 value) {
  set_has_rateindex();
  rateindex_ = value;
}

// -------------------------------------------------------------------

// LineInfo

// optional int32 lineId = 1;
inline bool LineInfo::has_lineid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LineInfo::set_has_lineid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LineInfo::clear_has_lineid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LineInfo::clear_lineid() {
  lineid_ = 0;
  clear_has_lineid();
}
inline ::google::protobuf::int32 LineInfo::lineid() const {
  return lineid_;
}
inline void LineInfo::set_lineid(::google::protobuf::int32 value) {
  set_has_lineid();
  lineid_ = value;
}

// optional int32 lightFlag = 2;
inline bool LineInfo::has_lightflag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LineInfo::set_has_lightflag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LineInfo::clear_has_lightflag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LineInfo::clear_lightflag() {
  lightflag_ = 0;
  clear_has_lightflag();
}
inline ::google::protobuf::int32 LineInfo::lightflag() const {
  return lightflag_;
}
inline void LineInfo::set_lightflag(::google::protobuf::int32 value) {
  set_has_lightflag();
  lightflag_ = value;
}

// optional int32 leftLinkCount = 3;
inline bool LineInfo::has_leftlinkcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LineInfo::set_has_leftlinkcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LineInfo::clear_has_leftlinkcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LineInfo::clear_leftlinkcount() {
  leftlinkcount_ = 0;
  clear_has_leftlinkcount();
}
inline ::google::protobuf::int32 LineInfo::leftlinkcount() const {
  return leftlinkcount_;
}
inline void LineInfo::set_leftlinkcount(::google::protobuf::int32 value) {
  set_has_leftlinkcount();
  leftlinkcount_ = value;
}

// optional int32 rightLinkCount = 4;
inline bool LineInfo::has_rightlinkcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LineInfo::set_has_rightlinkcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LineInfo::clear_has_rightlinkcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LineInfo::clear_rightlinkcount() {
  rightlinkcount_ = 0;
  clear_has_rightlinkcount();
}
inline ::google::protobuf::int32 LineInfo::rightlinkcount() const {
  return rightlinkcount_;
}
inline void LineInfo::set_rightlinkcount(::google::protobuf::int32 value) {
  set_has_rightlinkcount();
  rightlinkcount_ = value;
}

// optional int32 leftIcon = 5;
inline bool LineInfo::has_lefticon() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LineInfo::set_has_lefticon() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LineInfo::clear_has_lefticon() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LineInfo::clear_lefticon() {
  lefticon_ = 0;
  clear_has_lefticon();
}
inline ::google::protobuf::int32 LineInfo::lefticon() const {
  return lefticon_;
}
inline void LineInfo::set_lefticon(::google::protobuf::int32 value) {
  set_has_lefticon();
  lefticon_ = value;
}

// optional int32 rightIcon = 6;
inline bool LineInfo::has_righticon() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LineInfo::set_has_righticon() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LineInfo::clear_has_righticon() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LineInfo::clear_righticon() {
  righticon_ = 0;
  clear_has_righticon();
}
inline ::google::protobuf::int32 LineInfo::righticon() const {
  return righticon_;
}
inline void LineInfo::set_righticon(::google::protobuf::int32 value) {
  set_has_righticon();
  righticon_ = value;
}

// -------------------------------------------------------------------

// IconInfo

// optional int32 iconId = 1;
inline bool IconInfo::has_iconid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IconInfo::set_has_iconid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IconInfo::clear_has_iconid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IconInfo::clear_iconid() {
  iconid_ = 0;
  clear_has_iconid();
}
inline ::google::protobuf::int32 IconInfo::iconid() const {
  return iconid_;
}
inline void IconInfo::set_iconid(::google::protobuf::int32 value) {
  set_has_iconid();
  iconid_ = value;
}

// optional int32 rate = 2;
inline bool IconInfo::has_rate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IconInfo::set_has_rate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IconInfo::clear_has_rate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IconInfo::clear_rate() {
  rate_ = 0;
  clear_has_rate();
}
inline ::google::protobuf::int32 IconInfo::rate() const {
  return rate_;
}
inline void IconInfo::set_rate(::google::protobuf::int32 value) {
  set_has_rate();
  rate_ = value;
}

// -------------------------------------------------------------------

// packetc2l_star_game_result

// optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_star_game_result];
inline bool packetc2l_star_game_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_star_game_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_star_game_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_star_game_result::clear_packet_id() {
  packet_id_ = 15004;
  clear_has_packet_id();
}
inline ::game_shuihz_protocols::e_server_msg_type packetc2l_star_game_result::packet_id() const {
  return static_cast< ::game_shuihz_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_star_game_result::set_packet_id(::game_shuihz_protocols::e_server_msg_type value) {
  assert(::game_shuihz_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 moneyType = 2;
inline bool packetc2l_star_game_result::has_moneytype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetc2l_star_game_result::set_has_moneytype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetc2l_star_game_result::clear_has_moneytype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetc2l_star_game_result::clear_moneytype() {
  moneytype_ = 0;
  clear_has_moneytype();
}
inline ::google::protobuf::int32 packetc2l_star_game_result::moneytype() const {
  return moneytype_;
}
inline void packetc2l_star_game_result::set_moneytype(::google::protobuf::int32 value) {
  set_has_moneytype();
  moneytype_ = value;
}

// optional string imageArr = 3;
inline bool packetc2l_star_game_result::has_imagearr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetc2l_star_game_result::set_has_imagearr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetc2l_star_game_result::clear_has_imagearr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetc2l_star_game_result::clear_imagearr() {
  if (imagearr_ != &::google::protobuf::internal::kEmptyString) {
    imagearr_->clear();
  }
  clear_has_imagearr();
}
inline const ::std::string& packetc2l_star_game_result::imagearr() const {
  return *imagearr_;
}
inline void packetc2l_star_game_result::set_imagearr(const ::std::string& value) {
  set_has_imagearr();
  if (imagearr_ == &::google::protobuf::internal::kEmptyString) {
    imagearr_ = new ::std::string;
  }
  imagearr_->assign(value);
}
inline void packetc2l_star_game_result::set_imagearr(const char* value) {
  set_has_imagearr();
  if (imagearr_ == &::google::protobuf::internal::kEmptyString) {
    imagearr_ = new ::std::string;
  }
  imagearr_->assign(value);
}
inline void packetc2l_star_game_result::set_imagearr(const char* value, size_t size) {
  set_has_imagearr();
  if (imagearr_ == &::google::protobuf::internal::kEmptyString) {
    imagearr_ = new ::std::string;
  }
  imagearr_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* packetc2l_star_game_result::mutable_imagearr() {
  set_has_imagearr();
  if (imagearr_ == &::google::protobuf::internal::kEmptyString) {
    imagearr_ = new ::std::string;
  }
  return imagearr_;
}
inline ::std::string* packetc2l_star_game_result::release_imagearr() {
  clear_has_imagearr();
  if (imagearr_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = imagearr_;
    imagearr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void packetc2l_star_game_result::set_allocated_imagearr(::std::string* imagearr) {
  if (imagearr_ != &::google::protobuf::internal::kEmptyString) {
    delete imagearr_;
  }
  if (imagearr) {
    set_has_imagearr();
    imagearr_ = imagearr;
  } else {
    clear_has_imagearr();
    imagearr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .game_shuihz_protocols.LineInfo infoList = 4;
inline int packetc2l_star_game_result::infolist_size() const {
  return infolist_.size();
}
inline void packetc2l_star_game_result::clear_infolist() {
  infolist_.Clear();
}
inline const ::game_shuihz_protocols::LineInfo& packetc2l_star_game_result::infolist(int index) const {
  return infolist_.Get(index);
}
inline ::game_shuihz_protocols::LineInfo* packetc2l_star_game_result::mutable_infolist(int index) {
  return infolist_.Mutable(index);
}
inline ::game_shuihz_protocols::LineInfo* packetc2l_star_game_result::add_infolist() {
  return infolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_shuihz_protocols::LineInfo >&
packetc2l_star_game_result::infolist() const {
  return infolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_shuihz_protocols::LineInfo >*
packetc2l_star_game_result::mutable_infolist() {
  return &infolist_;
}

// optional int32 winMoney = 5;
inline bool packetc2l_star_game_result::has_winmoney() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void packetc2l_star_game_result::set_has_winmoney() {
  _has_bits_[0] |= 0x00000010u;
}
inline void packetc2l_star_game_result::clear_has_winmoney() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void packetc2l_star_game_result::clear_winmoney() {
  winmoney_ = 0;
  clear_has_winmoney();
}
inline ::google::protobuf::int32 packetc2l_star_game_result::winmoney() const {
  return winmoney_;
}
inline void packetc2l_star_game_result::set_winmoney(::google::protobuf::int32 value) {
  set_has_winmoney();
  winmoney_ = value;
}

// optional int32 deductMoney = 6;
inline bool packetc2l_star_game_result::has_deductmoney() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void packetc2l_star_game_result::set_has_deductmoney() {
  _has_bits_[0] |= 0x00000020u;
}
inline void packetc2l_star_game_result::clear_has_deductmoney() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void packetc2l_star_game_result::clear_deductmoney() {
  deductmoney_ = 0;
  clear_has_deductmoney();
}
inline ::google::protobuf::int32 packetc2l_star_game_result::deductmoney() const {
  return deductmoney_;
}
inline void packetc2l_star_game_result::set_deductmoney(::google::protobuf::int32 value) {
  set_has_deductmoney();
  deductmoney_ = value;
}

// optional int32 result = 7;
inline bool packetc2l_star_game_result::has_result() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void packetc2l_star_game_result::set_has_result() {
  _has_bits_[0] |= 0x00000040u;
}
inline void packetc2l_star_game_result::clear_has_result() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void packetc2l_star_game_result::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 packetc2l_star_game_result::result() const {
  return result_;
}
inline void packetc2l_star_game_result::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 curMoney = 8;
inline bool packetc2l_star_game_result::has_curmoney() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void packetc2l_star_game_result::set_has_curmoney() {
  _has_bits_[0] |= 0x00000080u;
}
inline void packetc2l_star_game_result::clear_has_curmoney() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void packetc2l_star_game_result::clear_curmoney() {
  curmoney_ = 0;
  clear_has_curmoney();
}
inline ::google::protobuf::int32 packetc2l_star_game_result::curmoney() const {
  return curmoney_;
}
inline void packetc2l_star_game_result::set_curmoney(::google::protobuf::int32 value) {
  set_has_curmoney();
  curmoney_ = value;
}

// optional int32 bonusGameCount = 9;
inline bool packetc2l_star_game_result::has_bonusgamecount() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void packetc2l_star_game_result::set_has_bonusgamecount() {
  _has_bits_[0] |= 0x00000100u;
}
inline void packetc2l_star_game_result::clear_has_bonusgamecount() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void packetc2l_star_game_result::clear_bonusgamecount() {
  bonusgamecount_ = 0;
  clear_has_bonusgamecount();
}
inline ::google::protobuf::int32 packetc2l_star_game_result::bonusgamecount() const {
  return bonusgamecount_;
}
inline void packetc2l_star_game_result::set_bonusgamecount(::google::protobuf::int32 value) {
  set_has_bonusgamecount();
  bonusgamecount_ = value;
}

// optional int32 fullType = 10;
inline bool packetc2l_star_game_result::has_fulltype() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void packetc2l_star_game_result::set_has_fulltype() {
  _has_bits_[0] |= 0x00000200u;
}
inline void packetc2l_star_game_result::clear_has_fulltype() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void packetc2l_star_game_result::clear_fulltype() {
  fulltype_ = 0;
  clear_has_fulltype();
}
inline ::google::protobuf::int32 packetc2l_star_game_result::fulltype() const {
  return fulltype_;
}
inline void packetc2l_star_game_result::set_fulltype(::google::protobuf::int32 value) {
  set_has_fulltype();
  fulltype_ = value;
}

// optional int32 fullId = 11;
inline bool packetc2l_star_game_result::has_fullid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void packetc2l_star_game_result::set_has_fullid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void packetc2l_star_game_result::clear_has_fullid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void packetc2l_star_game_result::clear_fullid() {
  fullid_ = 0;
  clear_has_fullid();
}
inline ::google::protobuf::int32 packetc2l_star_game_result::fullid() const {
  return fullid_;
}
inline void packetc2l_star_game_result::set_fullid(::google::protobuf::int32 value) {
  set_has_fullid();
  fullid_ = value;
}

// repeated .game_shuihz_protocols.IconInfo icons = 12;
inline int packetc2l_star_game_result::icons_size() const {
  return icons_.size();
}
inline void packetc2l_star_game_result::clear_icons() {
  icons_.Clear();
}
inline const ::game_shuihz_protocols::IconInfo& packetc2l_star_game_result::icons(int index) const {
  return icons_.Get(index);
}
inline ::game_shuihz_protocols::IconInfo* packetc2l_star_game_result::mutable_icons(int index) {
  return icons_.Mutable(index);
}
inline ::game_shuihz_protocols::IconInfo* packetc2l_star_game_result::add_icons() {
  return icons_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_shuihz_protocols::IconInfo >&
packetc2l_star_game_result::icons() const {
  return icons_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_shuihz_protocols::IconInfo >*
packetc2l_star_game_result::mutable_icons() {
  return &icons_;
}

// -------------------------------------------------------------------

// packetc2l_req_bonus_game

// optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_req_bonus_game];
inline bool packetc2l_req_bonus_game::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_req_bonus_game::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_req_bonus_game::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_req_bonus_game::clear_packet_id() {
  packet_id_ = 10005;
  clear_has_packet_id();
}
inline ::game_shuihz_protocols::e_server_msg_type packetc2l_req_bonus_game::packet_id() const {
  return static_cast< ::game_shuihz_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_req_bonus_game::set_packet_id(::game_shuihz_protocols::e_server_msg_type value) {
  assert(::game_shuihz_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetl2c_req_bonus_game_result

// optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_req_bonus_game_result];
inline bool packetl2c_req_bonus_game_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_req_bonus_game_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_req_bonus_game_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_req_bonus_game_result::clear_packet_id() {
  packet_id_ = 15005;
  clear_has_packet_id();
}
inline ::game_shuihz_protocols::e_server_msg_type packetl2c_req_bonus_game_result::packet_id() const {
  return static_cast< ::game_shuihz_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_req_bonus_game_result::set_packet_id(::game_shuihz_protocols::e_server_msg_type value) {
  assert(::game_shuihz_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional string innerIconArr = 2;
inline bool packetl2c_req_bonus_game_result::has_innericonarr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_req_bonus_game_result::set_has_innericonarr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_req_bonus_game_result::clear_has_innericonarr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_req_bonus_game_result::clear_innericonarr() {
  if (innericonarr_ != &::google::protobuf::internal::kEmptyString) {
    innericonarr_->clear();
  }
  clear_has_innericonarr();
}
inline const ::std::string& packetl2c_req_bonus_game_result::innericonarr() const {
  return *innericonarr_;
}
inline void packetl2c_req_bonus_game_result::set_innericonarr(const ::std::string& value) {
  set_has_innericonarr();
  if (innericonarr_ == &::google::protobuf::internal::kEmptyString) {
    innericonarr_ = new ::std::string;
  }
  innericonarr_->assign(value);
}
inline void packetl2c_req_bonus_game_result::set_innericonarr(const char* value) {
  set_has_innericonarr();
  if (innericonarr_ == &::google::protobuf::internal::kEmptyString) {
    innericonarr_ = new ::std::string;
  }
  innericonarr_->assign(value);
}
inline void packetl2c_req_bonus_game_result::set_innericonarr(const char* value, size_t size) {
  set_has_innericonarr();
  if (innericonarr_ == &::google::protobuf::internal::kEmptyString) {
    innericonarr_ = new ::std::string;
  }
  innericonarr_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* packetl2c_req_bonus_game_result::mutable_innericonarr() {
  set_has_innericonarr();
  if (innericonarr_ == &::google::protobuf::internal::kEmptyString) {
    innericonarr_ = new ::std::string;
  }
  return innericonarr_;
}
inline ::std::string* packetl2c_req_bonus_game_result::release_innericonarr() {
  clear_has_innericonarr();
  if (innericonarr_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = innericonarr_;
    innericonarr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void packetl2c_req_bonus_game_result::set_allocated_innericonarr(::std::string* innericonarr) {
  if (innericonarr_ != &::google::protobuf::internal::kEmptyString) {
    delete innericonarr_;
  }
  if (innericonarr) {
    set_has_innericonarr();
    innericonarr_ = innericonarr;
  } else {
    clear_has_innericonarr();
    innericonarr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 outerIcon = 3;
inline bool packetl2c_req_bonus_game_result::has_outericon() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetl2c_req_bonus_game_result::set_has_outericon() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetl2c_req_bonus_game_result::clear_has_outericon() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetl2c_req_bonus_game_result::clear_outericon() {
  outericon_ = 0;
  clear_has_outericon();
}
inline ::google::protobuf::int32 packetl2c_req_bonus_game_result::outericon() const {
  return outericon_;
}
inline void packetl2c_req_bonus_game_result::set_outericon(::google::protobuf::int32 value) {
  set_has_outericon();
  outericon_ = value;
}

// optional int32 winMoney = 4;
inline bool packetl2c_req_bonus_game_result::has_winmoney() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void packetl2c_req_bonus_game_result::set_has_winmoney() {
  _has_bits_[0] |= 0x00000008u;
}
inline void packetl2c_req_bonus_game_result::clear_has_winmoney() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void packetl2c_req_bonus_game_result::clear_winmoney() {
  winmoney_ = 0;
  clear_has_winmoney();
}
inline ::google::protobuf::int32 packetl2c_req_bonus_game_result::winmoney() const {
  return winmoney_;
}
inline void packetl2c_req_bonus_game_result::set_winmoney(::google::protobuf::int32 value) {
  set_has_winmoney();
  winmoney_ = value;
}

// optional int32 result = 5;
inline bool packetl2c_req_bonus_game_result::has_result() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void packetl2c_req_bonus_game_result::set_has_result() {
  _has_bits_[0] |= 0x00000010u;
}
inline void packetl2c_req_bonus_game_result::clear_has_result() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void packetl2c_req_bonus_game_result::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 packetl2c_req_bonus_game_result::result() const {
  return result_;
}
inline void packetl2c_req_bonus_game_result::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional string showIcon = 6;
inline bool packetl2c_req_bonus_game_result::has_showicon() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void packetl2c_req_bonus_game_result::set_has_showicon() {
  _has_bits_[0] |= 0x00000020u;
}
inline void packetl2c_req_bonus_game_result::clear_has_showicon() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void packetl2c_req_bonus_game_result::clear_showicon() {
  if (showicon_ != &::google::protobuf::internal::kEmptyString) {
    showicon_->clear();
  }
  clear_has_showicon();
}
inline const ::std::string& packetl2c_req_bonus_game_result::showicon() const {
  return *showicon_;
}
inline void packetl2c_req_bonus_game_result::set_showicon(const ::std::string& value) {
  set_has_showicon();
  if (showicon_ == &::google::protobuf::internal::kEmptyString) {
    showicon_ = new ::std::string;
  }
  showicon_->assign(value);
}
inline void packetl2c_req_bonus_game_result::set_showicon(const char* value) {
  set_has_showicon();
  if (showicon_ == &::google::protobuf::internal::kEmptyString) {
    showicon_ = new ::std::string;
  }
  showicon_->assign(value);
}
inline void packetl2c_req_bonus_game_result::set_showicon(const char* value, size_t size) {
  set_has_showicon();
  if (showicon_ == &::google::protobuf::internal::kEmptyString) {
    showicon_ = new ::std::string;
  }
  showicon_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* packetl2c_req_bonus_game_result::mutable_showicon() {
  set_has_showicon();
  if (showicon_ == &::google::protobuf::internal::kEmptyString) {
    showicon_ = new ::std::string;
  }
  return showicon_;
}
inline ::std::string* packetl2c_req_bonus_game_result::release_showicon() {
  clear_has_showicon();
  if (showicon_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = showicon_;
    showicon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void packetl2c_req_bonus_game_result::set_allocated_showicon(::std::string* showicon) {
  if (showicon_ != &::google::protobuf::internal::kEmptyString) {
    delete showicon_;
  }
  if (showicon) {
    set_has_showicon();
    showicon_ = showicon;
  } else {
    clear_has_showicon();
    showicon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// packetc2l_req_double_game

// optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_req_double_game];
inline bool packetc2l_req_double_game::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_req_double_game::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_req_double_game::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_req_double_game::clear_packet_id() {
  packet_id_ = 10006;
  clear_has_packet_id();
}
inline ::game_shuihz_protocols::e_server_msg_type packetc2l_req_double_game::packet_id() const {
  return static_cast< ::game_shuihz_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_req_double_game::set_packet_id(::game_shuihz_protocols::e_server_msg_type value) {
  assert(::game_shuihz_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 betpos = 2;
inline bool packetc2l_req_double_game::has_betpos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetc2l_req_double_game::set_has_betpos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetc2l_req_double_game::clear_has_betpos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetc2l_req_double_game::clear_betpos() {
  betpos_ = 0;
  clear_has_betpos();
}
inline ::google::protobuf::int32 packetc2l_req_double_game::betpos() const {
  return betpos_;
}
inline void packetc2l_req_double_game::set_betpos(::google::protobuf::int32 value) {
  set_has_betpos();
  betpos_ = value;
}

// optional int32 betgold = 3;
inline bool packetc2l_req_double_game::has_betgold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetc2l_req_double_game::set_has_betgold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetc2l_req_double_game::clear_has_betgold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetc2l_req_double_game::clear_betgold() {
  betgold_ = 0;
  clear_has_betgold();
}
inline ::google::protobuf::int32 packetc2l_req_double_game::betgold() const {
  return betgold_;
}
inline void packetc2l_req_double_game::set_betgold(::google::protobuf::int32 value) {
  set_has_betgold();
  betgold_ = value;
}

// optional int32 betid = 4;
inline bool packetc2l_req_double_game::has_betid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void packetc2l_req_double_game::set_has_betid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void packetc2l_req_double_game::clear_has_betid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void packetc2l_req_double_game::clear_betid() {
  betid_ = 0;
  clear_has_betid();
}
inline ::google::protobuf::int32 packetc2l_req_double_game::betid() const {
  return betid_;
}
inline void packetc2l_req_double_game::set_betid(::google::protobuf::int32 value) {
  set_has_betid();
  betid_ = value;
}

// -------------------------------------------------------------------

// packetl2c_req_double_game_result

// optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_req_double_game_result];
inline bool packetl2c_req_double_game_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_req_double_game_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_req_double_game_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_req_double_game_result::clear_packet_id() {
  packet_id_ = 15006;
  clear_has_packet_id();
}
inline ::game_shuihz_protocols::e_server_msg_type packetl2c_req_double_game_result::packet_id() const {
  return static_cast< ::game_shuihz_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_req_double_game_result::set_packet_id(::game_shuihz_protocols::e_server_msg_type value) {
  assert(::game_shuihz_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 dice1 = 2;
inline bool packetl2c_req_double_game_result::has_dice1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_req_double_game_result::set_has_dice1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_req_double_game_result::clear_has_dice1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_req_double_game_result::clear_dice1() {
  dice1_ = 0;
  clear_has_dice1();
}
inline ::google::protobuf::int32 packetl2c_req_double_game_result::dice1() const {
  return dice1_;
}
inline void packetl2c_req_double_game_result::set_dice1(::google::protobuf::int32 value) {
  set_has_dice1();
  dice1_ = value;
}

// optional int32 dice2 = 3;
inline bool packetl2c_req_double_game_result::has_dice2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetl2c_req_double_game_result::set_has_dice2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetl2c_req_double_game_result::clear_has_dice2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetl2c_req_double_game_result::clear_dice2() {
  dice2_ = 0;
  clear_has_dice2();
}
inline ::google::protobuf::int32 packetl2c_req_double_game_result::dice2() const {
  return dice2_;
}
inline void packetl2c_req_double_game_result::set_dice2(::google::protobuf::int32 value) {
  set_has_dice2();
  dice2_ = value;
}

// optional int32 winMoney = 4;
inline bool packetl2c_req_double_game_result::has_winmoney() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void packetl2c_req_double_game_result::set_has_winmoney() {
  _has_bits_[0] |= 0x00000008u;
}
inline void packetl2c_req_double_game_result::clear_has_winmoney() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void packetl2c_req_double_game_result::clear_winmoney() {
  winmoney_ = 0;
  clear_has_winmoney();
}
inline ::google::protobuf::int32 packetl2c_req_double_game_result::winmoney() const {
  return winmoney_;
}
inline void packetl2c_req_double_game_result::set_winmoney(::google::protobuf::int32 value) {
  set_has_winmoney();
  winmoney_ = value;
}

// optional int32 betpos = 5;
inline bool packetl2c_req_double_game_result::has_betpos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void packetl2c_req_double_game_result::set_has_betpos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void packetl2c_req_double_game_result::clear_has_betpos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void packetl2c_req_double_game_result::clear_betpos() {
  betpos_ = 0;
  clear_has_betpos();
}
inline ::google::protobuf::int32 packetl2c_req_double_game_result::betpos() const {
  return betpos_;
}
inline void packetl2c_req_double_game_result::set_betpos(::google::protobuf::int32 value) {
  set_has_betpos();
  betpos_ = value;
}

// optional int32 result = 6;
inline bool packetl2c_req_double_game_result::has_result() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void packetl2c_req_double_game_result::set_has_result() {
  _has_bits_[0] |= 0x00000020u;
}
inline void packetl2c_req_double_game_result::clear_has_result() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void packetl2c_req_double_game_result::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 packetl2c_req_double_game_result::result() const {
  return result_;
}
inline void packetl2c_req_double_game_result::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// packetc2l_get_room_info

// optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_room_info];
inline bool packetc2l_get_room_info::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_get_room_info::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_get_room_info::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_get_room_info::clear_packet_id() {
  packet_id_ = 10007;
  clear_has_packet_id();
}
inline ::game_shuihz_protocols::e_server_msg_type packetc2l_get_room_info::packet_id() const {
  return static_cast< ::game_shuihz_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_get_room_info::set_packet_id(::game_shuihz_protocols::e_server_msg_type value) {
  assert(::game_shuihz_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// msg_room_info

// optional int32 roomid = 1;
inline bool msg_room_info::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_room_info::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_room_info::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_room_info::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google::protobuf::int32 msg_room_info::roomid() const {
  return roomid_;
}
inline void msg_room_info::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
}

// -------------------------------------------------------------------

// packetl2c_get_room_info_result

// optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_room_info_result];
inline bool packetl2c_get_room_info_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_get_room_info_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_get_room_info_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_get_room_info_result::clear_packet_id() {
  packet_id_ = 15007;
  clear_has_packet_id();
}
inline ::game_shuihz_protocols::e_server_msg_type packetl2c_get_room_info_result::packet_id() const {
  return static_cast< ::game_shuihz_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_get_room_info_result::set_packet_id(::game_shuihz_protocols::e_server_msg_type value) {
  assert(::game_shuihz_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// repeated .game_shuihz_protocols.msg_room_info rooms = 2;
inline int packetl2c_get_room_info_result::rooms_size() const {
  return rooms_.size();
}
inline void packetl2c_get_room_info_result::clear_rooms() {
  rooms_.Clear();
}
inline const ::game_shuihz_protocols::msg_room_info& packetl2c_get_room_info_result::rooms(int index) const {
  return rooms_.Get(index);
}
inline ::game_shuihz_protocols::msg_room_info* packetl2c_get_room_info_result::mutable_rooms(int index) {
  return rooms_.Mutable(index);
}
inline ::game_shuihz_protocols::msg_room_info* packetl2c_get_room_info_result::add_rooms() {
  return rooms_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_shuihz_protocols::msg_room_info >&
packetl2c_get_room_info_result::rooms() const {
  return rooms_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_shuihz_protocols::msg_room_info >*
packetl2c_get_room_info_result::mutable_rooms() {
  return &rooms_;
}

// -------------------------------------------------------------------

// packetl2c_enter_player_info

// optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_enter_player_info];
inline bool packetl2c_enter_player_info::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_enter_player_info::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_enter_player_info::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_enter_player_info::clear_packet_id() {
  packet_id_ = 15008;
  clear_has_packet_id();
}
inline ::game_shuihz_protocols::e_server_msg_type packetl2c_enter_player_info::packet_id() const {
  return static_cast< ::game_shuihz_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_enter_player_info::set_packet_id(::game_shuihz_protocols::e_server_msg_type value) {
  assert(::game_shuihz_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional .game_shuihz_protocols.msg_player_info player_info = 2;
inline bool packetl2c_enter_player_info::has_player_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_enter_player_info::set_has_player_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_enter_player_info::clear_has_player_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_enter_player_info::clear_player_info() {
  if (player_info_ != NULL) player_info_->::game_shuihz_protocols::msg_player_info::Clear();
  clear_has_player_info();
}
inline const ::game_shuihz_protocols::msg_player_info& packetl2c_enter_player_info::player_info() const {
  return player_info_ != NULL ? *player_info_ : *default_instance_->player_info_;
}
inline ::game_shuihz_protocols::msg_player_info* packetl2c_enter_player_info::mutable_player_info() {
  set_has_player_info();
  if (player_info_ == NULL) player_info_ = new ::game_shuihz_protocols::msg_player_info;
  return player_info_;
}
inline ::game_shuihz_protocols::msg_player_info* packetl2c_enter_player_info::release_player_info() {
  clear_has_player_info();
  ::game_shuihz_protocols::msg_player_info* temp = player_info_;
  player_info_ = NULL;
  return temp;
}
inline void packetl2c_enter_player_info::set_allocated_player_info(::game_shuihz_protocols::msg_player_info* player_info) {
  delete player_info_;
  player_info_ = player_info;
  if (player_info) {
    set_has_player_info();
  } else {
    clear_has_player_info();
  }
}

// -------------------------------------------------------------------

// packetl2c_leave_player_info

// optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_player_info];
inline bool packetl2c_leave_player_info::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_leave_player_info::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_leave_player_info::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_leave_player_info::clear_packet_id() {
  packet_id_ = 15009;
  clear_has_packet_id();
}
inline ::game_shuihz_protocols::e_server_msg_type packetl2c_leave_player_info::packet_id() const {
  return static_cast< ::game_shuihz_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_leave_player_info::set_packet_id(::game_shuihz_protocols::e_server_msg_type value) {
  assert(::game_shuihz_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 player_id = 2;
inline bool packetl2c_leave_player_info::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_leave_player_info::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_leave_player_info::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_leave_player_info::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 packetl2c_leave_player_info::player_id() const {
  return player_id_;
}
inline void packetl2c_leave_player_info::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// -------------------------------------------------------------------

// packetl2c_player_change_money

// optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_player_change_money];
inline bool packetl2c_player_change_money::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_player_change_money::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_player_change_money::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_player_change_money::clear_packet_id() {
  packet_id_ = 15010;
  clear_has_packet_id();
}
inline ::game_shuihz_protocols::e_server_msg_type packetl2c_player_change_money::packet_id() const {
  return static_cast< ::game_shuihz_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_player_change_money::set_packet_id(::game_shuihz_protocols::e_server_msg_type value) {
  assert(::game_shuihz_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 player_id = 2;
inline bool packetl2c_player_change_money::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_player_change_money::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_player_change_money::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_player_change_money::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 packetl2c_player_change_money::player_id() const {
  return player_id_;
}
inline void packetl2c_player_change_money::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional int64 cur_money = 3;
inline bool packetl2c_player_change_money::has_cur_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetl2c_player_change_money::set_has_cur_money() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetl2c_player_change_money::clear_has_cur_money() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetl2c_player_change_money::clear_cur_money() {
  cur_money_ = GOOGLE_LONGLONG(0);
  clear_has_cur_money();
}
inline ::google::protobuf::int64 packetl2c_player_change_money::cur_money() const {
  return cur_money_;
}
inline void packetl2c_player_change_money::set_cur_money(::google::protobuf::int64 value) {
  set_has_cur_money();
  cur_money_ = value;
}

// optional int64 change_money = 4;
inline bool packetl2c_player_change_money::has_change_money() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void packetl2c_player_change_money::set_has_change_money() {
  _has_bits_[0] |= 0x00000008u;
}
inline void packetl2c_player_change_money::clear_has_change_money() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void packetl2c_player_change_money::clear_change_money() {
  change_money_ = GOOGLE_LONGLONG(0);
  clear_has_change_money();
}
inline ::google::protobuf::int64 packetl2c_player_change_money::change_money() const {
  return change_money_;
}
inline void packetl2c_player_change_money::set_change_money(::google::protobuf::int64 value) {
  set_has_change_money();
  change_money_ = value;
}

// -------------------------------------------------------------------

// packetl2c_bc_change_attr

// optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_change_attr];
inline bool packetl2c_bc_change_attr::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_bc_change_attr::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_bc_change_attr::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_bc_change_attr::clear_packet_id() {
  packet_id_ = 15011;
  clear_has_packet_id();
}
inline ::game_shuihz_protocols::e_server_msg_type packetl2c_bc_change_attr::packet_id() const {
  return static_cast< ::game_shuihz_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_bc_change_attr::set_packet_id(::game_shuihz_protocols::e_server_msg_type value) {
  assert(::game_shuihz_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 player_id = 2;
inline bool packetl2c_bc_change_attr::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_bc_change_attr::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_bc_change_attr::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_bc_change_attr::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 packetl2c_bc_change_attr::player_id() const {
  return player_id_;
}
inline void packetl2c_bc_change_attr::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional int32 item_type = 3;
inline bool packetl2c_bc_change_attr::has_item_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetl2c_bc_change_attr::set_has_item_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetl2c_bc_change_attr::clear_has_item_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetl2c_bc_change_attr::clear_item_type() {
  item_type_ = 0;
  clear_has_item_type();
}
inline ::google::protobuf::int32 packetl2c_bc_change_attr::item_type() const {
  return item_type_;
}
inline void packetl2c_bc_change_attr::set_item_type(::google::protobuf::int32 value) {
  set_has_item_type();
  item_type_ = value;
}

// optional int64 change_value = 4;
inline bool packetl2c_bc_change_attr::has_change_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void packetl2c_bc_change_attr::set_has_change_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void packetl2c_bc_change_attr::clear_has_change_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void packetl2c_bc_change_attr::clear_change_value() {
  change_value_ = GOOGLE_LONGLONG(0);
  clear_has_change_value();
}
inline ::google::protobuf::int64 packetl2c_bc_change_attr::change_value() const {
  return change_value_;
}
inline void packetl2c_bc_change_attr::set_change_value(::google::protobuf::int64 value) {
  set_has_change_value();
  change_value_ = value;
}

// -------------------------------------------------------------------

// packetc2l_supply_chip

// optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_supply_chip];
inline bool packetc2l_supply_chip::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_supply_chip::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_supply_chip::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_supply_chip::clear_packet_id() {
  packet_id_ = 10021;
  clear_has_packet_id();
}
inline ::game_shuihz_protocols::e_server_msg_type packetc2l_supply_chip::packet_id() const {
  return static_cast< ::game_shuihz_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_supply_chip::set_packet_id(::game_shuihz_protocols::e_server_msg_type value) {
  assert(::game_shuihz_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetl2c_supply_chip_result

// optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_supply_chip_result];
inline bool packetl2c_supply_chip_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_supply_chip_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_supply_chip_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_supply_chip_result::clear_packet_id() {
  packet_id_ = 15021;
  clear_has_packet_id();
}
inline ::game_shuihz_protocols::e_server_msg_type packetl2c_supply_chip_result::packet_id() const {
  return static_cast< ::game_shuihz_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_supply_chip_result::set_packet_id(::game_shuihz_protocols::e_server_msg_type value) {
  assert(::game_shuihz_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
inline bool packetl2c_supply_chip_result::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_supply_chip_result::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_supply_chip_result::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_supply_chip_result::clear_result() {
  result_ = 2;
  clear_has_result();
}
inline ::msg_type_def::e_msg_result_def packetl2c_supply_chip_result::result() const {
  return static_cast< ::msg_type_def::e_msg_result_def >(result_);
}
inline void packetl2c_supply_chip_result::set_result(::msg_type_def::e_msg_result_def value) {
  assert(::msg_type_def::e_msg_result_def_IsValid(value));
  set_has_result();
  result_ = value;
}

// optional int64 gold = 6;
inline bool packetl2c_supply_chip_result::has_gold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetl2c_supply_chip_result::set_has_gold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetl2c_supply_chip_result::clear_has_gold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetl2c_supply_chip_result::clear_gold() {
  gold_ = GOOGLE_LONGLONG(0);
  clear_has_gold();
}
inline ::google::protobuf::int64 packetl2c_supply_chip_result::gold() const {
  return gold_;
}
inline void packetl2c_supply_chip_result::set_gold(::google::protobuf::int64 value) {
  set_has_gold();
  gold_ = value;
}

// -------------------------------------------------------------------

// packetc2l_get_room_scene_info

// optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_room_scene_info];
inline bool packetc2l_get_room_scene_info::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_get_room_scene_info::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_get_room_scene_info::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_get_room_scene_info::clear_packet_id() {
  packet_id_ = 10022;
  clear_has_packet_id();
}
inline ::game_shuihz_protocols::e_server_msg_type packetc2l_get_room_scene_info::packet_id() const {
  return static_cast< ::game_shuihz_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_get_room_scene_info::set_packet_id(::game_shuihz_protocols::e_server_msg_type value) {
  assert(::game_shuihz_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetl2c_get_room_scene_info_result

// optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_room_scene_info];
inline bool packetl2c_get_room_scene_info_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_get_room_scene_info_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_get_room_scene_info_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_get_room_scene_info_result::clear_packet_id() {
  packet_id_ = 15022;
  clear_has_packet_id();
}
inline ::game_shuihz_protocols::e_server_msg_type packetl2c_get_room_scene_info_result::packet_id() const {
  return static_cast< ::game_shuihz_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_get_room_scene_info_result::set_packet_id(::game_shuihz_protocols::e_server_msg_type value) {
  assert(::game_shuihz_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 room_id = 2;
inline bool packetl2c_get_room_scene_info_result::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_get_room_scene_info_result::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_get_room_scene_info_result::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_get_room_scene_info_result::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 packetl2c_get_room_scene_info_result::room_id() const {
  return room_id_;
}
inline void packetl2c_get_room_scene_info_result::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
}

// repeated .game_shuihz_protocols.msg_player_info player_list = 3;
inline int packetl2c_get_room_scene_info_result::player_list_size() const {
  return player_list_.size();
}
inline void packetl2c_get_room_scene_info_result::clear_player_list() {
  player_list_.Clear();
}
inline const ::game_shuihz_protocols::msg_player_info& packetl2c_get_room_scene_info_result::player_list(int index) const {
  return player_list_.Get(index);
}
inline ::game_shuihz_protocols::msg_player_info* packetl2c_get_room_scene_info_result::mutable_player_list(int index) {
  return player_list_.Mutable(index);
}
inline ::game_shuihz_protocols::msg_player_info* packetl2c_get_room_scene_info_result::add_player_list() {
  return player_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_shuihz_protocols::msg_player_info >&
packetl2c_get_room_scene_info_result::player_list() const {
  return player_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_shuihz_protocols::msg_player_info >*
packetl2c_get_room_scene_info_result::mutable_player_list() {
  return &player_list_;
}

// -------------------------------------------------------------------

// packetc2l_settlement

// optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_settlement];
inline bool packetc2l_settlement::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_settlement::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_settlement::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_settlement::clear_packet_id() {
  packet_id_ = 10023;
  clear_has_packet_id();
}
inline ::game_shuihz_protocols::e_server_msg_type packetc2l_settlement::packet_id() const {
  return static_cast< ::game_shuihz_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_settlement::set_packet_id(::game_shuihz_protocols::e_server_msg_type value) {
  assert(::game_shuihz_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetl2c_settlement_result

// optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_settlement_result];
inline bool packetl2c_settlement_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_settlement_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_settlement_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_settlement_result::clear_packet_id() {
  packet_id_ = 15023;
  clear_has_packet_id();
}
inline ::game_shuihz_protocols::e_server_msg_type packetl2c_settlement_result::packet_id() const {
  return static_cast< ::game_shuihz_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_settlement_result::set_packet_id(::game_shuihz_protocols::e_server_msg_type value) {
  assert(::game_shuihz_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 result = 2;
inline bool packetl2c_settlement_result::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_settlement_result::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_settlement_result::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_settlement_result::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 packetl2c_settlement_result::result() const {
  return result_;
}
inline void packetl2c_settlement_result::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int64 gold = 3;
inline bool packetl2c_settlement_result::has_gold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetl2c_settlement_result::set_has_gold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetl2c_settlement_result::clear_has_gold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetl2c_settlement_result::clear_gold() {
  gold_ = GOOGLE_LONGLONG(0);
  clear_has_gold();
}
inline ::google::protobuf::int64 packetl2c_settlement_result::gold() const {
  return gold_;
}
inline void packetl2c_settlement_result::set_gold(::google::protobuf::int64 value) {
  set_has_gold();
  gold_ = value;
}

// -------------------------------------------------------------------

// room_player

// optional int32 player_id = 1;
inline bool room_player::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void room_player::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void room_player::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void room_player::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 room_player::player_id() const {
  return player_id_;
}
inline void room_player::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional int64 gold = 2;
inline bool room_player::has_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void room_player::set_has_gold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void room_player::clear_has_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void room_player::clear_gold() {
  gold_ = GOOGLE_LONGLONG(0);
  clear_has_gold();
}
inline ::google::protobuf::int64 room_player::gold() const {
  return gold_;
}
inline void room_player::set_gold(::google::protobuf::int64 value) {
  set_has_gold();
  gold_ = value;
}

// optional int64 bet = 3;
inline bool room_player::has_bet() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void room_player::set_has_bet() {
  _has_bits_[0] |= 0x00000004u;
}
inline void room_player::clear_has_bet() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void room_player::clear_bet() {
  bet_ = GOOGLE_LONGLONG(0);
  clear_has_bet();
}
inline ::google::protobuf::int64 room_player::bet() const {
  return bet_;
}
inline void room_player::set_bet(::google::protobuf::int64 value) {
  set_has_bet();
  bet_ = value;
}

// optional int64 profit_today = 4;
inline bool room_player::has_profit_today() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void room_player::set_has_profit_today() {
  _has_bits_[0] |= 0x00000008u;
}
inline void room_player::clear_has_profit_today() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void room_player::clear_profit_today() {
  profit_today_ = GOOGLE_LONGLONG(0);
  clear_has_profit_today();
}
inline ::google::protobuf::int64 room_player::profit_today() const {
  return profit_today_;
}
inline void room_player::set_profit_today(::google::protobuf::int64 value) {
  set_has_profit_today();
  profit_today_ = value;
}

// -------------------------------------------------------------------

// packetl2c_gm_get_room_info

// optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_gm_get_room_info];
inline bool packetl2c_gm_get_room_info::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_gm_get_room_info::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_gm_get_room_info::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_gm_get_room_info::clear_packet_id() {
  packet_id_ = 10101;
  clear_has_packet_id();
}
inline ::game_shuihz_protocols::e_server_msg_type packetl2c_gm_get_room_info::packet_id() const {
  return static_cast< ::game_shuihz_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_gm_get_room_info::set_packet_id(::game_shuihz_protocols::e_server_msg_type value) {
  assert(::game_shuihz_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetl2c_gm_get_room_info_result

// optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_gm_get_room_info_result];
inline bool packetl2c_gm_get_room_info_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_gm_get_room_info_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_gm_get_room_info_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_gm_get_room_info_result::clear_packet_id() {
  packet_id_ = 15101;
  clear_has_packet_id();
}
inline ::game_shuihz_protocols::e_server_msg_type packetl2c_gm_get_room_info_result::packet_id() const {
  return static_cast< ::game_shuihz_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_gm_get_room_info_result::set_packet_id(::game_shuihz_protocols::e_server_msg_type value) {
  assert(::game_shuihz_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 result = 2;
inline bool packetl2c_gm_get_room_info_result::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_gm_get_room_info_result::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_gm_get_room_info_result::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_gm_get_room_info_result::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 packetl2c_gm_get_room_info_result::result() const {
  return result_;
}
inline void packetl2c_gm_get_room_info_result::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 killcount = 3;
inline bool packetl2c_gm_get_room_info_result::has_killcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetl2c_gm_get_room_info_result::set_has_killcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetl2c_gm_get_room_info_result::clear_has_killcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetl2c_gm_get_room_info_result::clear_killcount() {
  killcount_ = 0;
  clear_has_killcount();
}
inline ::google::protobuf::int32 packetl2c_gm_get_room_info_result::killcount() const {
  return killcount_;
}
inline void packetl2c_gm_get_room_info_result::set_killcount(::google::protobuf::int32 value) {
  set_has_killcount();
  killcount_ = value;
}

// repeated .game_shuihz_protocols.room_player players = 4;
inline int packetl2c_gm_get_room_info_result::players_size() const {
  return players_.size();
}
inline void packetl2c_gm_get_room_info_result::clear_players() {
  players_.Clear();
}
inline const ::game_shuihz_protocols::room_player& packetl2c_gm_get_room_info_result::players(int index) const {
  return players_.Get(index);
}
inline ::game_shuihz_protocols::room_player* packetl2c_gm_get_room_info_result::mutable_players(int index) {
  return players_.Mutable(index);
}
inline ::game_shuihz_protocols::room_player* packetl2c_gm_get_room_info_result::add_players() {
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_shuihz_protocols::room_player >&
packetl2c_gm_get_room_info_result::players() const {
  return players_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_shuihz_protocols::room_player >*
packetl2c_gm_get_room_info_result::mutable_players() {
  return &players_;
}

// -------------------------------------------------------------------

// packetl2c_gm_do_kill

// optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_gm_do_kill];
inline bool packetl2c_gm_do_kill::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_gm_do_kill::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_gm_do_kill::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_gm_do_kill::clear_packet_id() {
  packet_id_ = 10102;
  clear_has_packet_id();
}
inline ::game_shuihz_protocols::e_server_msg_type packetl2c_gm_do_kill::packet_id() const {
  return static_cast< ::game_shuihz_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_gm_do_kill::set_packet_id(::game_shuihz_protocols::e_server_msg_type value) {
  assert(::game_shuihz_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 killcount = 2;
inline bool packetl2c_gm_do_kill::has_killcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_gm_do_kill::set_has_killcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_gm_do_kill::clear_has_killcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_gm_do_kill::clear_killcount() {
  killcount_ = 0;
  clear_has_killcount();
}
inline ::google::protobuf::int32 packetl2c_gm_do_kill::killcount() const {
  return killcount_;
}
inline void packetl2c_gm_do_kill::set_killcount(::google::protobuf::int32 value) {
  set_has_killcount();
  killcount_ = value;
}

// -------------------------------------------------------------------

// packetl2c_gm_do_kill_result

// optional .game_shuihz_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_gm_do_kill_result];
inline bool packetl2c_gm_do_kill_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_gm_do_kill_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_gm_do_kill_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_gm_do_kill_result::clear_packet_id() {
  packet_id_ = 15102;
  clear_has_packet_id();
}
inline ::game_shuihz_protocols::e_server_msg_type packetl2c_gm_do_kill_result::packet_id() const {
  return static_cast< ::game_shuihz_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_gm_do_kill_result::set_packet_id(::game_shuihz_protocols::e_server_msg_type value) {
  assert(::game_shuihz_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 result = 2;
inline bool packetl2c_gm_do_kill_result::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_gm_do_kill_result::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_gm_do_kill_result::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_gm_do_kill_result::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 packetl2c_gm_do_kill_result::result() const {
  return result_;
}
inline void packetl2c_gm_do_kill_result::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace game_shuihz_protocols

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_game_5fshuihz_5fprotocol_2eproto__INCLUDED
