package game_forestball_protocols;

import "game_forestball_def.proto"; 
import "msg_type_def.proto"; 

//检测游戏状态		//重连之后判断是否在桌子中
message packetc2l_check_state {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];
}

//检测是否在房间中,检测状态
message packetl2c_check_state_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];
	optional bool is_intable = 2 [default = false];//是否在房间中
}

//请求桌子内场景信息
message packetc2l_get_room_scene_info {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_room_scene_info];
}

//进入桌子或断线重连情况下调用
message packetl2c_get_room_scene_info_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_room_scene_info];
	optional int32 room_id = 2;
	optional int32 cd_time = 3;
	optional e_game_state room_state = 4;	//游戏状态
	repeated int32 self_bet_list = 5;		//下注信息,断线重连用
	repeated int32 bet_info_list = 6;
	repeated int32 history_list = 7;
	optional int32 rate_index = 8;    //赔率ID
	repeated int32 colors = 9;        //24个数值 0:红 1:绿 2:黄	
}

//离开桌子
message packetc2l_leave_room {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_room];
}

//离开桌子返回
message packetl2c_leave_room_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_room_result];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];
	optional int64 player_gold = 3;
}

//下注
message packetc2l_add_bet {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_add_bet];
	optional int32 bet_index = 2;
	optional int32 bet_count = 3;
}

//下注返回
message packetl2c_add_bet_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_add_bet];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail ];
	optional int32 bet_index = 3;
	optional int32 bet_count = 4;
}

//续压
message packetc2l_repeat_bet {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_repeat_bet];
}

//续压返回
message packetl2c_repeat_bet_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_repeat_bet];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail ];
	repeated int64 self_bet_list = 3;	
}

//玩家信息
message player_info {
	optional int32 player_id = 1;				//玩家ID
	optional string player_nickname = 2;		//玩家昵称
	optional int32 player_head_frame = 3;		//头像框
	optional string player_head_custom = 4;		//玩家头像
	optional int64 player_gold = 5;				//玩家金币
	optional int32 player_sex = 6;				// 玩家性别	
	optional int32 player_vip_lv = 7;			// Vip等级
}
//通知开始押注
message packetl2c_bc_begin_bet {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_begin_bet];
	optional int32 rate_index = 2;    //赔率ID
	repeated int32 colors = 3;        //24个数值 0:红 1:绿 2:黄
	optional int32 cd_time = 4;
}

//通知开奖
message packetl2c_bc_begin_award {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_begin_award];
	optional int32 m_award_type = 2;
	repeated int32 m_award_param_list = 3;    // m_result_type:13~17有效时: 13:1~12编号list 14:1~12编号,倍数 15:1~12编号,彩金倍数 16:0~3 狮子/熊猫/猴子/兔子 17:0~2 红绿黄 
	repeated int64 win_gold = 4;              // 12个区域
	repeated player_info player_reward_list=5;
	optional int32 cd_time = 6;
}

//所有玩家下注信息
message packetl2c_bc_sync_bets {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_sync_bets];
	repeated int64 bet_info_list = 2;
}


//游戏控制
message packetc2l_game_control {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_game_control];

	optional int32 control = 2[default = 0]; //控制类型  1和 2庄 3闲
}

message packetl2c_game_control {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_game_control];

	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success ];
}

//debug信息
message packetl2c_bc_debuginfo {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_debuginfo];
	optional int32 player_id = 2;	
	optional int64 total_profit = 3[default = 0];		//抽水
	optional int64 total_stock = 4[default = 0];		//库存
    optional int64 total_Rate = 6[default = 0];		//抽水率

	optional string debug_infos = 5; //调试信息 lua
}


message msg_bet_info
{
	optional int32 bet_index = 1;
	optional int64 bet_count = 2;
}

message gm_msg_bet_info
{
	optional player_info player_info=1;
	repeated msg_bet_info bet_info=2;
}

//通知所有玩家下注信息
message packetl2c_notice_all_bet_info 
{
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_notice_gm_all_bet_info];
	repeated gm_msg_bet_info bet_info_list = 2;//玩家信息链表

}

message packetl2c_attention_needLeave {
	optional e_server_msg_type packet_id = 1 [default = e_mst_attention_needLeave];
}
