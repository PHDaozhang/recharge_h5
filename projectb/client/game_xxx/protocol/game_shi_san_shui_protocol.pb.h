// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_shi_san_shui_protocol.proto

#ifndef PROTOBUF_game_5fshi_5fsan_5fshui_5fprotocol_2eproto__INCLUDED
#define PROTOBUF_game_5fshi_5fsan_5fshui_5fprotocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "game_shi_san_shui_def.pb.h"
#include "msg_type_def.pb.h"
// @@protoc_insertion_point(includes)

namespace game_shi_san_shui_protocols {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
void protobuf_AssignDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
void protobuf_ShutdownFile_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();

class msg_player_info;
class packetc2l_check_state;
class packetl2c_check_state_result;
class packetc2l_get_scene_info;
class msg_room_scene_info;
class msg_playing_scene_info;
class packetl2c_scene_info_result;
class packetc2l_enter_room;
class packetl2c_enter_room_result;
class packetc2l_leave_room;
class packetl2c_leave_room_result;
class packetc2l_user_trustee;
class packetl2c_user_trustee_notify;
class packetc2l_ready;
class packetl2c_send_all_playerinfos;
class packetl2c_send_playerinfo;
class cards_data;
class lane_data;
class da_qiang_data;
class bao_dao_data;
class win_result;
class packetl2c_game_start;
class packetl2c_operate_notify;
class packetc2l_operate_card;
class packetl2c_game_end;
class packetl2c_game_notify;
class gm_player_info;
class packetc2l_gm_list;
class gm_room_info;
class packetl2c_gm_list;
class packetc2l_gm_kill;

// ===================================================================

class msg_player_info : public ::google::protobuf::Message {
 public:
  msg_player_info();
  virtual ~msg_player_info();

  msg_player_info(const msg_player_info& from);

  inline msg_player_info& operator=(const msg_player_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_player_info& default_instance();

  void Swap(msg_player_info* other);

  // implements Message ----------------------------------------------

  msg_player_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_player_info& from);
  void MergeFrom(const msg_player_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // optional string player_name = 2;
  inline bool has_player_name() const;
  inline void clear_player_name();
  static const int kPlayerNameFieldNumber = 2;
  inline const ::std::string& player_name() const;
  inline void set_player_name(const ::std::string& value);
  inline void set_player_name(const char* value);
  inline void set_player_name(const char* value, size_t size);
  inline ::std::string* mutable_player_name();
  inline ::std::string* release_player_name();
  inline void set_allocated_player_name(::std::string* player_name);

  // optional int32 head_frame = 3;
  inline bool has_head_frame() const;
  inline void clear_head_frame();
  static const int kHeadFrameFieldNumber = 3;
  inline ::google::protobuf::int32 head_frame() const;
  inline void set_head_frame(::google::protobuf::int32 value);

  // optional string head_custom = 4;
  inline bool has_head_custom() const;
  inline void clear_head_custom();
  static const int kHeadCustomFieldNumber = 4;
  inline const ::std::string& head_custom() const;
  inline void set_head_custom(const ::std::string& value);
  inline void set_head_custom(const char* value);
  inline void set_head_custom(const char* value, size_t size);
  inline ::std::string* mutable_head_custom();
  inline ::std::string* release_head_custom();
  inline void set_allocated_head_custom(::std::string* head_custom);

  // optional int64 player_gold = 5;
  inline bool has_player_gold() const;
  inline void clear_player_gold();
  static const int kPlayerGoldFieldNumber = 5;
  inline ::google::protobuf::int64 player_gold() const;
  inline void set_player_gold(::google::protobuf::int64 value);

  // optional int32 player_sex = 6;
  inline bool has_player_sex() const;
  inline void clear_player_sex();
  static const int kPlayerSexFieldNumber = 6;
  inline ::google::protobuf::int32 player_sex() const;
  inline void set_player_sex(::google::protobuf::int32 value);

  // optional int32 vip_level = 7;
  inline bool has_vip_level() const;
  inline void clear_vip_level();
  static const int kVipLevelFieldNumber = 7;
  inline ::google::protobuf::int32 vip_level() const;
  inline void set_vip_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_shi_san_shui_protocols.msg_player_info)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_player_name();
  inline void clear_has_player_name();
  inline void set_has_head_frame();
  inline void clear_has_head_frame();
  inline void set_has_head_custom();
  inline void clear_has_head_custom();
  inline void set_has_player_gold();
  inline void clear_has_player_gold();
  inline void set_has_player_sex();
  inline void clear_has_player_sex();
  inline void set_has_vip_level();
  inline void clear_has_vip_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* player_name_;
  ::google::protobuf::int32 player_id_;
  ::google::protobuf::int32 head_frame_;
  ::std::string* head_custom_;
  ::google::protobuf::int64 player_gold_;
  ::google::protobuf::int32 player_sex_;
  ::google::protobuf::int32 vip_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static msg_player_info* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_check_state : public ::google::protobuf::Message {
 public:
  packetc2l_check_state();
  virtual ~packetc2l_check_state();

  packetc2l_check_state(const packetc2l_check_state& from);

  inline packetc2l_check_state& operator=(const packetc2l_check_state& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_check_state& default_instance();

  void Swap(packetc2l_check_state* other);

  // implements Message ----------------------------------------------

  packetc2l_check_state* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_check_state& from);
  void MergeFrom(const packetc2l_check_state& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shi_san_shui_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:game_shi_san_shui_protocols.packetc2l_check_state)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_check_state* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_check_state_result : public ::google::protobuf::Message {
 public:
  packetl2c_check_state_result();
  virtual ~packetl2c_check_state_result();

  packetl2c_check_state_result(const packetl2c_check_state_result& from);

  inline packetl2c_check_state_result& operator=(const packetl2c_check_state_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_check_state_result& default_instance();

  void Swap(packetl2c_check_state_result* other);

  // implements Message ----------------------------------------------

  packetl2c_check_state_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_check_state_result& from);
  void MergeFrom(const packetl2c_check_state_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shi_san_shui_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value);

  // optional int32 result = 2 [default = 0];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_shi_san_shui_protocols.packetl2c_check_state_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_check_state_result* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_get_scene_info : public ::google::protobuf::Message {
 public:
  packetc2l_get_scene_info();
  virtual ~packetc2l_get_scene_info();

  packetc2l_get_scene_info(const packetc2l_get_scene_info& from);

  inline packetc2l_get_scene_info& operator=(const packetc2l_get_scene_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_get_scene_info& default_instance();

  void Swap(packetc2l_get_scene_info* other);

  // implements Message ----------------------------------------------

  packetc2l_get_scene_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_get_scene_info& from);
  void MergeFrom(const packetc2l_get_scene_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_scene_info];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shi_san_shui_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:game_shi_san_shui_protocols.packetc2l_get_scene_info)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_get_scene_info* default_instance_;
};
// -------------------------------------------------------------------

class msg_room_scene_info : public ::google::protobuf::Message {
 public:
  msg_room_scene_info();
  virtual ~msg_room_scene_info();

  msg_room_scene_info(const msg_room_scene_info& from);

  inline msg_room_scene_info& operator=(const msg_room_scene_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_room_scene_info& default_instance();

  void Swap(msg_room_scene_info* other);

  // implements Message ----------------------------------------------

  msg_room_scene_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_room_scene_info& from);
  void MergeFrom(const msg_room_scene_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool ready = 1;
  inline bool has_ready() const;
  inline void clear_ready();
  static const int kReadyFieldNumber = 1;
  inline bool ready() const;
  inline void set_ready(bool value);

  // @@protoc_insertion_point(class_scope:game_shi_san_shui_protocols.msg_room_scene_info)
 private:
  inline void set_has_ready();
  inline void clear_has_ready();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool ready_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static msg_room_scene_info* default_instance_;
};
// -------------------------------------------------------------------

class msg_playing_scene_info : public ::google::protobuf::Message {
 public:
  msg_playing_scene_info();
  virtual ~msg_playing_scene_info();

  msg_playing_scene_info(const msg_playing_scene_info& from);

  inline msg_playing_scene_info& operator=(const msg_playing_scene_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_playing_scene_info& default_instance();

  void Swap(msg_playing_scene_info* other);

  // implements Message ----------------------------------------------

  msg_playing_scene_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_playing_scene_info& from);
  void MergeFrom(const msg_playing_scene_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 remain_seconds = 1;
  inline bool has_remain_seconds() const;
  inline void clear_remain_seconds();
  static const int kRemainSecondsFieldNumber = 1;
  inline ::google::protobuf::int32 remain_seconds() const;
  inline void set_remain_seconds(::google::protobuf::int32 value);

  // repeated bool user_trustee = 2;
  inline int user_trustee_size() const;
  inline void clear_user_trustee();
  static const int kUserTrusteeFieldNumber = 2;
  inline bool user_trustee(int index) const;
  inline void set_user_trustee(int index, bool value);
  inline void add_user_trustee(bool value);
  inline const ::google::protobuf::RepeatedField< bool >&
      user_trustee() const;
  inline ::google::protobuf::RepeatedField< bool >*
      mutable_user_trustee();

  // repeated int32 cards = 3;
  inline int cards_size() const;
  inline void clear_cards();
  static const int kCardsFieldNumber = 3;
  inline ::google::protobuf::int32 cards(int index) const;
  inline void set_cards(int index, ::google::protobuf::int32 value);
  inline void add_cards(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cards() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cards();

  // repeated bool open_cards = 4;
  inline int open_cards_size() const;
  inline void clear_open_cards();
  static const int kOpenCardsFieldNumber = 4;
  inline bool open_cards(int index) const;
  inline void set_open_cards(int index, bool value);
  inline void add_open_cards(bool value);
  inline const ::google::protobuf::RepeatedField< bool >&
      open_cards() const;
  inline ::google::protobuf::RepeatedField< bool >*
      mutable_open_cards();

  // @@protoc_insertion_point(class_scope:game_shi_san_shui_protocols.msg_playing_scene_info)
 private:
  inline void set_has_remain_seconds();
  inline void clear_has_remain_seconds();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< bool > user_trustee_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cards_;
  ::google::protobuf::RepeatedField< bool > open_cards_;
  ::google::protobuf::int32 remain_seconds_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static msg_playing_scene_info* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_scene_info_result : public ::google::protobuf::Message {
 public:
  packetl2c_scene_info_result();
  virtual ~packetl2c_scene_info_result();

  packetl2c_scene_info_result(const packetl2c_scene_info_result& from);

  inline packetl2c_scene_info_result& operator=(const packetl2c_scene_info_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_scene_info_result& default_instance();

  void Swap(packetl2c_scene_info_result* other);

  // implements Message ----------------------------------------------

  packetl2c_scene_info_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_scene_info_result& from);
  void MergeFrom(const packetl2c_scene_info_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_scene_info_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shi_san_shui_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value);

  // optional int32 room_type = 2;
  inline bool has_room_type() const;
  inline void clear_room_type();
  static const int kRoomTypeFieldNumber = 2;
  inline ::google::protobuf::int32 room_type() const;
  inline void set_room_type(::google::protobuf::int32 value);

  // optional .game_shi_san_shui_protocols.msg_playing_scene_info scene_info = 3;
  inline bool has_scene_info() const;
  inline void clear_scene_info();
  static const int kSceneInfoFieldNumber = 3;
  inline const ::game_shi_san_shui_protocols::msg_playing_scene_info& scene_info() const;
  inline ::game_shi_san_shui_protocols::msg_playing_scene_info* mutable_scene_info();
  inline ::game_shi_san_shui_protocols::msg_playing_scene_info* release_scene_info();
  inline void set_allocated_scene_info(::game_shi_san_shui_protocols::msg_playing_scene_info* scene_info);

  // optional .game_shi_san_shui_protocols.packetl2c_game_end game_end = 4;
  inline bool has_game_end() const;
  inline void clear_game_end();
  static const int kGameEndFieldNumber = 4;
  inline const ::game_shi_san_shui_protocols::packetl2c_game_end& game_end() const;
  inline ::game_shi_san_shui_protocols::packetl2c_game_end* mutable_game_end();
  inline ::game_shi_san_shui_protocols::packetl2c_game_end* release_game_end();
  inline void set_allocated_game_end(::game_shi_san_shui_protocols::packetl2c_game_end* game_end);

  // optional int32 game_status = 5;
  inline bool has_game_status() const;
  inline void clear_game_status();
  static const int kGameStatusFieldNumber = 5;
  inline ::google::protobuf::int32 game_status() const;
  inline void set_game_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_shi_san_shui_protocols.packetl2c_scene_info_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_room_type();
  inline void clear_has_room_type();
  inline void set_has_scene_info();
  inline void clear_has_scene_info();
  inline void set_has_game_end();
  inline void clear_has_game_end();
  inline void set_has_game_status();
  inline void clear_has_game_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 room_type_;
  ::game_shi_san_shui_protocols::msg_playing_scene_info* scene_info_;
  ::game_shi_san_shui_protocols::packetl2c_game_end* game_end_;
  ::google::protobuf::int32 game_status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_scene_info_result* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_enter_room : public ::google::protobuf::Message {
 public:
  packetc2l_enter_room();
  virtual ~packetc2l_enter_room();

  packetc2l_enter_room(const packetc2l_enter_room& from);

  inline packetc2l_enter_room& operator=(const packetc2l_enter_room& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_enter_room& default_instance();

  void Swap(packetc2l_enter_room* other);

  // implements Message ----------------------------------------------

  packetc2l_enter_room* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_enter_room& from);
  void MergeFrom(const packetc2l_enter_room& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_enter_room];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shi_san_shui_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value);

  // optional int32 room_type = 2;
  inline bool has_room_type() const;
  inline void clear_room_type();
  static const int kRoomTypeFieldNumber = 2;
  inline ::google::protobuf::int32 room_type() const;
  inline void set_room_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_shi_san_shui_protocols.packetc2l_enter_room)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_room_type();
  inline void clear_has_room_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 room_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_enter_room* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_enter_room_result : public ::google::protobuf::Message {
 public:
  packetl2c_enter_room_result();
  virtual ~packetl2c_enter_room_result();

  packetl2c_enter_room_result(const packetl2c_enter_room_result& from);

  inline packetl2c_enter_room_result& operator=(const packetl2c_enter_room_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_enter_room_result& default_instance();

  void Swap(packetl2c_enter_room_result* other);

  // implements Message ----------------------------------------------

  packetl2c_enter_room_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_enter_room_result& from);
  void MergeFrom(const packetl2c_enter_room_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_enter_room_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shi_san_shui_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value);

  // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::msg_type_def::e_msg_result_def result() const;
  inline void set_result(::msg_type_def::e_msg_result_def value);

  // @@protoc_insertion_point(class_scope:game_shi_san_shui_protocols.packetl2c_enter_room_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  int result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_enter_room_result* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_leave_room : public ::google::protobuf::Message {
 public:
  packetc2l_leave_room();
  virtual ~packetc2l_leave_room();

  packetc2l_leave_room(const packetc2l_leave_room& from);

  inline packetc2l_leave_room& operator=(const packetc2l_leave_room& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_leave_room& default_instance();

  void Swap(packetc2l_leave_room* other);

  // implements Message ----------------------------------------------

  packetc2l_leave_room* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_leave_room& from);
  void MergeFrom(const packetc2l_leave_room& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_room];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shi_san_shui_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:game_shi_san_shui_protocols.packetc2l_leave_room)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_leave_room* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_leave_room_result : public ::google::protobuf::Message {
 public:
  packetl2c_leave_room_result();
  virtual ~packetl2c_leave_room_result();

  packetl2c_leave_room_result(const packetl2c_leave_room_result& from);

  inline packetl2c_leave_room_result& operator=(const packetl2c_leave_room_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_leave_room_result& default_instance();

  void Swap(packetl2c_leave_room_result* other);

  // implements Message ----------------------------------------------

  packetl2c_leave_room_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_leave_room_result& from);
  void MergeFrom(const packetl2c_leave_room_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_room_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shi_san_shui_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value);

  // optional int64 player_gold = 2;
  inline bool has_player_gold() const;
  inline void clear_player_gold();
  static const int kPlayerGoldFieldNumber = 2;
  inline ::google::protobuf::int64 player_gold() const;
  inline void set_player_gold(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:game_shi_san_shui_protocols.packetl2c_leave_room_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_player_gold();
  inline void clear_has_player_gold();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 player_gold_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_leave_room_result* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_user_trustee : public ::google::protobuf::Message {
 public:
  packetc2l_user_trustee();
  virtual ~packetc2l_user_trustee();

  packetc2l_user_trustee(const packetc2l_user_trustee& from);

  inline packetc2l_user_trustee& operator=(const packetc2l_user_trustee& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_user_trustee& default_instance();

  void Swap(packetc2l_user_trustee* other);

  // implements Message ----------------------------------------------

  packetc2l_user_trustee* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_user_trustee& from);
  void MergeFrom(const packetc2l_user_trustee& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_user_trustee];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shi_san_shui_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value);

  // optional bool trustee = 2;
  inline bool has_trustee() const;
  inline void clear_trustee();
  static const int kTrusteeFieldNumber = 2;
  inline bool trustee() const;
  inline void set_trustee(bool value);

  // @@protoc_insertion_point(class_scope:game_shi_san_shui_protocols.packetc2l_user_trustee)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_trustee();
  inline void clear_has_trustee();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  bool trustee_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_user_trustee* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_user_trustee_notify : public ::google::protobuf::Message {
 public:
  packetl2c_user_trustee_notify();
  virtual ~packetl2c_user_trustee_notify();

  packetl2c_user_trustee_notify(const packetl2c_user_trustee_notify& from);

  inline packetl2c_user_trustee_notify& operator=(const packetl2c_user_trustee_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_user_trustee_notify& default_instance();

  void Swap(packetl2c_user_trustee_notify* other);

  // implements Message ----------------------------------------------

  packetl2c_user_trustee_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_user_trustee_notify& from);
  void MergeFrom(const packetl2c_user_trustee_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_user_trustee];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shi_san_shui_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value);

  // optional int32 chair_id = 2;
  inline bool has_chair_id() const;
  inline void clear_chair_id();
  static const int kChairIdFieldNumber = 2;
  inline ::google::protobuf::int32 chair_id() const;
  inline void set_chair_id(::google::protobuf::int32 value);

  // optional bool trustee = 3;
  inline bool has_trustee() const;
  inline void clear_trustee();
  static const int kTrusteeFieldNumber = 3;
  inline bool trustee() const;
  inline void set_trustee(bool value);

  // optional int32 remain_seconds = 4;
  inline bool has_remain_seconds() const;
  inline void clear_remain_seconds();
  static const int kRemainSecondsFieldNumber = 4;
  inline ::google::protobuf::int32 remain_seconds() const;
  inline void set_remain_seconds(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_shi_san_shui_protocols.packetl2c_user_trustee_notify)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_chair_id();
  inline void clear_has_chair_id();
  inline void set_has_trustee();
  inline void clear_has_trustee();
  inline void set_has_remain_seconds();
  inline void clear_has_remain_seconds();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 chair_id_;
  bool trustee_;
  ::google::protobuf::int32 remain_seconds_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_user_trustee_notify* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_ready : public ::google::protobuf::Message {
 public:
  packetc2l_ready();
  virtual ~packetc2l_ready();

  packetc2l_ready(const packetc2l_ready& from);

  inline packetc2l_ready& operator=(const packetc2l_ready& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_ready& default_instance();

  void Swap(packetc2l_ready* other);

  // implements Message ----------------------------------------------

  packetc2l_ready* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_ready& from);
  void MergeFrom(const packetc2l_ready& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_ready];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shi_san_shui_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value);

  // optional bool change_table = 2;
  inline bool has_change_table() const;
  inline void clear_change_table();
  static const int kChangeTableFieldNumber = 2;
  inline bool change_table() const;
  inline void set_change_table(bool value);

  // @@protoc_insertion_point(class_scope:game_shi_san_shui_protocols.packetc2l_ready)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_change_table();
  inline void clear_has_change_table();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  bool change_table_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_ready* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_send_all_playerinfos : public ::google::protobuf::Message {
 public:
  packetl2c_send_all_playerinfos();
  virtual ~packetl2c_send_all_playerinfos();

  packetl2c_send_all_playerinfos(const packetl2c_send_all_playerinfos& from);

  inline packetl2c_send_all_playerinfos& operator=(const packetl2c_send_all_playerinfos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_send_all_playerinfos& default_instance();

  void Swap(packetl2c_send_all_playerinfos* other);

  // implements Message ----------------------------------------------

  packetl2c_send_all_playerinfos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_send_all_playerinfos& from);
  void MergeFrom(const packetl2c_send_all_playerinfos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_send_all_playerinfos];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shi_san_shui_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value);

  // repeated .game_shi_san_shui_protocols.msg_player_info player_info = 2;
  inline int player_info_size() const;
  inline void clear_player_info();
  static const int kPlayerInfoFieldNumber = 2;
  inline const ::game_shi_san_shui_protocols::msg_player_info& player_info(int index) const;
  inline ::game_shi_san_shui_protocols::msg_player_info* mutable_player_info(int index);
  inline ::game_shi_san_shui_protocols::msg_player_info* add_player_info();
  inline const ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::msg_player_info >&
      player_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::msg_player_info >*
      mutable_player_info();

  // @@protoc_insertion_point(class_scope:game_shi_san_shui_protocols.packetl2c_send_all_playerinfos)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::msg_player_info > player_info_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_send_all_playerinfos* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_send_playerinfo : public ::google::protobuf::Message {
 public:
  packetl2c_send_playerinfo();
  virtual ~packetl2c_send_playerinfo();

  packetl2c_send_playerinfo(const packetl2c_send_playerinfo& from);

  inline packetl2c_send_playerinfo& operator=(const packetl2c_send_playerinfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_send_playerinfo& default_instance();

  void Swap(packetl2c_send_playerinfo* other);

  // implements Message ----------------------------------------------

  packetl2c_send_playerinfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_send_playerinfo& from);
  void MergeFrom(const packetl2c_send_playerinfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_send_playerinfo];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shi_san_shui_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value);

  // optional .game_shi_san_shui_protocols.msg_player_info player_info = 2;
  inline bool has_player_info() const;
  inline void clear_player_info();
  static const int kPlayerInfoFieldNumber = 2;
  inline const ::game_shi_san_shui_protocols::msg_player_info& player_info() const;
  inline ::game_shi_san_shui_protocols::msg_player_info* mutable_player_info();
  inline ::game_shi_san_shui_protocols::msg_player_info* release_player_info();
  inline void set_allocated_player_info(::game_shi_san_shui_protocols::msg_player_info* player_info);

  // optional int32 chair_id = 3;
  inline bool has_chair_id() const;
  inline void clear_chair_id();
  static const int kChairIdFieldNumber = 3;
  inline ::google::protobuf::int32 chair_id() const;
  inline void set_chair_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_shi_san_shui_protocols.packetl2c_send_playerinfo)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_player_info();
  inline void clear_has_player_info();
  inline void set_has_chair_id();
  inline void clear_has_chair_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::game_shi_san_shui_protocols::msg_player_info* player_info_;
  int packet_id_;
  ::google::protobuf::int32 chair_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_send_playerinfo* default_instance_;
};
// -------------------------------------------------------------------

class cards_data : public ::google::protobuf::Message {
 public:
  cards_data();
  virtual ~cards_data();

  cards_data(const cards_data& from);

  inline cards_data& operator=(const cards_data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cards_data& default_instance();

  void Swap(cards_data* other);

  // implements Message ----------------------------------------------

  cards_data* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const cards_data& from);
  void MergeFrom(const cards_data& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 card = 1;
  inline int card_size() const;
  inline void clear_card();
  static const int kCardFieldNumber = 1;
  inline ::google::protobuf::int32 card(int index) const;
  inline void set_card(int index, ::google::protobuf::int32 value);
  inline void add_card(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      card() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_card();

  // @@protoc_insertion_point(class_scope:game_shi_san_shui_protocols.cards_data)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > card_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static cards_data* default_instance_;
};
// -------------------------------------------------------------------

class lane_data : public ::google::protobuf::Message {
 public:
  lane_data();
  virtual ~lane_data();

  lane_data(const lane_data& from);

  inline lane_data& operator=(const lane_data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const lane_data& default_instance();

  void Swap(lane_data* other);

  // implements Message ----------------------------------------------

  lane_data* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const lane_data& from);
  void MergeFrom(const lane_data& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 lane_type = 1;
  inline bool has_lane_type() const;
  inline void clear_lane_type();
  static const int kLaneTypeFieldNumber = 1;
  inline ::google::protobuf::int32 lane_type() const;
  inline void set_lane_type(::google::protobuf::int32 value);

  // optional int32 win_shui_cnt = 2;
  inline bool has_win_shui_cnt() const;
  inline void clear_win_shui_cnt();
  static const int kWinShuiCntFieldNumber = 2;
  inline ::google::protobuf::int32 win_shui_cnt() const;
  inline void set_win_shui_cnt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_shi_san_shui_protocols.lane_data)
 private:
  inline void set_has_lane_type();
  inline void clear_has_lane_type();
  inline void set_has_win_shui_cnt();
  inline void clear_has_win_shui_cnt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 lane_type_;
  ::google::protobuf::int32 win_shui_cnt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static lane_data* default_instance_;
};
// -------------------------------------------------------------------

class da_qiang_data : public ::google::protobuf::Message {
 public:
  da_qiang_data();
  virtual ~da_qiang_data();

  da_qiang_data(const da_qiang_data& from);

  inline da_qiang_data& operator=(const da_qiang_data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const da_qiang_data& default_instance();

  void Swap(da_qiang_data* other);

  // implements Message ----------------------------------------------

  da_qiang_data* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const da_qiang_data& from);
  void MergeFrom(const da_qiang_data& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chair_id = 1;
  inline bool has_chair_id() const;
  inline void clear_chair_id();
  static const int kChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 chair_id() const;
  inline void set_chair_id(::google::protobuf::int32 value);

  // repeated int32 shui_cnt = 2;
  inline int shui_cnt_size() const;
  inline void clear_shui_cnt();
  static const int kShuiCntFieldNumber = 2;
  inline ::google::protobuf::int32 shui_cnt(int index) const;
  inline void set_shui_cnt(int index, ::google::protobuf::int32 value);
  inline void add_shui_cnt(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      shui_cnt() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_shui_cnt();

  // @@protoc_insertion_point(class_scope:game_shi_san_shui_protocols.da_qiang_data)
 private:
  inline void set_has_chair_id();
  inline void clear_has_chair_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > shui_cnt_;
  ::google::protobuf::int32 chair_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static da_qiang_data* default_instance_;
};
// -------------------------------------------------------------------

class bao_dao_data : public ::google::protobuf::Message {
 public:
  bao_dao_data();
  virtual ~bao_dao_data();

  bao_dao_data(const bao_dao_data& from);

  inline bao_dao_data& operator=(const bao_dao_data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const bao_dao_data& default_instance();

  void Swap(bao_dao_data* other);

  // implements Message ----------------------------------------------

  bao_dao_data* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const bao_dao_data& from);
  void MergeFrom(const bao_dao_data& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chair_id = 1;
  inline bool has_chair_id() const;
  inline void clear_chair_id();
  static const int kChairIdFieldNumber = 1;
  inline ::google::protobuf::int32 chair_id() const;
  inline void set_chair_id(::google::protobuf::int32 value);

  // optional int32 shui_cnt = 2;
  inline bool has_shui_cnt() const;
  inline void clear_shui_cnt();
  static const int kShuiCntFieldNumber = 2;
  inline ::google::protobuf::int32 shui_cnt() const;
  inline void set_shui_cnt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_shi_san_shui_protocols.bao_dao_data)
 private:
  inline void set_has_chair_id();
  inline void clear_has_chair_id();
  inline void set_has_shui_cnt();
  inline void clear_has_shui_cnt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 chair_id_;
  ::google::protobuf::int32 shui_cnt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static bao_dao_data* default_instance_;
};
// -------------------------------------------------------------------

class win_result : public ::google::protobuf::Message {
 public:
  win_result();
  virtual ~win_result();

  win_result(const win_result& from);

  inline win_result& operator=(const win_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const win_result& default_instance();

  void Swap(win_result* other);

  // implements Message ----------------------------------------------

  win_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const win_result& from);
  void MergeFrom(const win_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 cards = 1;
  inline int cards_size() const;
  inline void clear_cards();
  static const int kCardsFieldNumber = 1;
  inline ::google::protobuf::int32 cards(int index) const;
  inline void set_cards(int index, ::google::protobuf::int32 value);
  inline void add_cards(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cards() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cards();

  // repeated .game_shi_san_shui_protocols.lane_data lane_type = 2;
  inline int lane_type_size() const;
  inline void clear_lane_type();
  static const int kLaneTypeFieldNumber = 2;
  inline const ::game_shi_san_shui_protocols::lane_data& lane_type(int index) const;
  inline ::game_shi_san_shui_protocols::lane_data* mutable_lane_type(int index);
  inline ::game_shi_san_shui_protocols::lane_data* add_lane_type();
  inline const ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::lane_data >&
      lane_type() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::lane_data >*
      mutable_lane_type();

  // repeated .game_shi_san_shui_protocols.da_qiang_data da_qiang = 3;
  inline int da_qiang_size() const;
  inline void clear_da_qiang();
  static const int kDaQiangFieldNumber = 3;
  inline const ::game_shi_san_shui_protocols::da_qiang_data& da_qiang(int index) const;
  inline ::game_shi_san_shui_protocols::da_qiang_data* mutable_da_qiang(int index);
  inline ::game_shi_san_shui_protocols::da_qiang_data* add_da_qiang();
  inline const ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::da_qiang_data >&
      da_qiang() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::da_qiang_data >*
      mutable_da_qiang();

  // optional int32 game_score = 4;
  inline bool has_game_score() const;
  inline void clear_game_score();
  static const int kGameScoreFieldNumber = 4;
  inline ::google::protobuf::int32 game_score() const;
  inline void set_game_score(::google::protobuf::int32 value);

  // optional int32 win_account = 5;
  inline bool has_win_account() const;
  inline void clear_win_account();
  static const int kWinAccountFieldNumber = 5;
  inline ::google::protobuf::int32 win_account() const;
  inline void set_win_account(::google::protobuf::int32 value);

  // repeated .game_shi_san_shui_protocols.bao_dao_data bao_dao = 6;
  inline int bao_dao_size() const;
  inline void clear_bao_dao();
  static const int kBaoDaoFieldNumber = 6;
  inline const ::game_shi_san_shui_protocols::bao_dao_data& bao_dao(int index) const;
  inline ::game_shi_san_shui_protocols::bao_dao_data* mutable_bao_dao(int index);
  inline ::game_shi_san_shui_protocols::bao_dao_data* add_bao_dao();
  inline const ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::bao_dao_data >&
      bao_dao() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::bao_dao_data >*
      mutable_bao_dao();

  // optional int32 total_shui_cnt = 7;
  inline bool has_total_shui_cnt() const;
  inline void clear_total_shui_cnt();
  static const int kTotalShuiCntFieldNumber = 7;
  inline ::google::protobuf::int32 total_shui_cnt() const;
  inline void set_total_shui_cnt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_shi_san_shui_protocols.win_result)
 private:
  inline void set_has_game_score();
  inline void clear_has_game_score();
  inline void set_has_win_account();
  inline void clear_has_win_account();
  inline void set_has_total_shui_cnt();
  inline void clear_has_total_shui_cnt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cards_;
  ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::lane_data > lane_type_;
  ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::da_qiang_data > da_qiang_;
  ::google::protobuf::int32 game_score_;
  ::google::protobuf::int32 win_account_;
  ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::bao_dao_data > bao_dao_;
  ::google::protobuf::int32 total_shui_cnt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static win_result* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_game_start : public ::google::protobuf::Message {
 public:
  packetl2c_game_start();
  virtual ~packetl2c_game_start();

  packetl2c_game_start(const packetl2c_game_start& from);

  inline packetl2c_game_start& operator=(const packetl2c_game_start& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_game_start& default_instance();

  void Swap(packetl2c_game_start* other);

  // implements Message ----------------------------------------------

  packetl2c_game_start* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_game_start& from);
  void MergeFrom(const packetl2c_game_start& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_game_start];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shi_san_shui_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value);

  // repeated .game_shi_san_shui_protocols.cards_data cards = 2;
  inline int cards_size() const;
  inline void clear_cards();
  static const int kCardsFieldNumber = 2;
  inline const ::game_shi_san_shui_protocols::cards_data& cards(int index) const;
  inline ::game_shi_san_shui_protocols::cards_data* mutable_cards(int index);
  inline ::game_shi_san_shui_protocols::cards_data* add_cards();
  inline const ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::cards_data >&
      cards() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::cards_data >*
      mutable_cards();

  // @@protoc_insertion_point(class_scope:game_shi_san_shui_protocols.packetl2c_game_start)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::cards_data > cards_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_game_start* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_operate_notify : public ::google::protobuf::Message {
 public:
  packetl2c_operate_notify();
  virtual ~packetl2c_operate_notify();

  packetl2c_operate_notify(const packetl2c_operate_notify& from);

  inline packetl2c_operate_notify& operator=(const packetl2c_operate_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_operate_notify& default_instance();

  void Swap(packetl2c_operate_notify* other);

  // implements Message ----------------------------------------------

  packetl2c_operate_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_operate_notify& from);
  void MergeFrom(const packetl2c_operate_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_operate_notify];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shi_san_shui_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value);

  // optional int32 chair_idx = 2;
  inline bool has_chair_idx() const;
  inline void clear_chair_idx();
  static const int kChairIdxFieldNumber = 2;
  inline ::google::protobuf::int32 chair_idx() const;
  inline void set_chair_idx(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_shi_san_shui_protocols.packetl2c_operate_notify)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_chair_idx();
  inline void clear_has_chair_idx();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 chair_idx_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_operate_notify* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_operate_card : public ::google::protobuf::Message {
 public:
  packetc2l_operate_card();
  virtual ~packetc2l_operate_card();

  packetc2l_operate_card(const packetc2l_operate_card& from);

  inline packetc2l_operate_card& operator=(const packetc2l_operate_card& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_operate_card& default_instance();

  void Swap(packetc2l_operate_card* other);

  // implements Message ----------------------------------------------

  packetc2l_operate_card* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_operate_card& from);
  void MergeFrom(const packetc2l_operate_card& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_operate_card];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shi_san_shui_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value);

  // repeated int32 cards = 2;
  inline int cards_size() const;
  inline void clear_cards();
  static const int kCardsFieldNumber = 2;
  inline ::google::protobuf::int32 cards(int index) const;
  inline void set_cards(int index, ::google::protobuf::int32 value);
  inline void add_cards(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cards() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cards();

  // @@protoc_insertion_point(class_scope:game_shi_san_shui_protocols.packetc2l_operate_card)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cards_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_operate_card* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_game_end : public ::google::protobuf::Message {
 public:
  packetl2c_game_end();
  virtual ~packetl2c_game_end();

  packetl2c_game_end(const packetl2c_game_end& from);

  inline packetl2c_game_end& operator=(const packetl2c_game_end& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_game_end& default_instance();

  void Swap(packetl2c_game_end* other);

  // implements Message ----------------------------------------------

  packetl2c_game_end* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_game_end& from);
  void MergeFrom(const packetl2c_game_end& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_game_end];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shi_san_shui_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value);

  // repeated .game_shi_san_shui_protocols.win_result win = 2;
  inline int win_size() const;
  inline void clear_win();
  static const int kWinFieldNumber = 2;
  inline const ::game_shi_san_shui_protocols::win_result& win(int index) const;
  inline ::game_shi_san_shui_protocols::win_result* mutable_win(int index);
  inline ::game_shi_san_shui_protocols::win_result* add_win();
  inline const ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::win_result >&
      win() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::win_result >*
      mutable_win();

  // @@protoc_insertion_point(class_scope:game_shi_san_shui_protocols.packetl2c_game_end)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::win_result > win_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_game_end* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_game_notify : public ::google::protobuf::Message {
 public:
  packetl2c_game_notify();
  virtual ~packetl2c_game_notify();

  packetl2c_game_notify(const packetl2c_game_notify& from);

  inline packetl2c_game_notify& operator=(const packetl2c_game_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_game_notify& default_instance();

  void Swap(packetl2c_game_notify* other);

  // implements Message ----------------------------------------------

  packetl2c_game_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_game_notify& from);
  void MergeFrom(const packetl2c_game_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_game_notify];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shi_san_shui_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value);

  // optional .game_shi_san_shui_protocols.e_notify_type notify_type = 2;
  inline bool has_notify_type() const;
  inline void clear_notify_type();
  static const int kNotifyTypeFieldNumber = 2;
  inline ::game_shi_san_shui_protocols::e_notify_type notify_type() const;
  inline void set_notify_type(::game_shi_san_shui_protocols::e_notify_type value);

  // optional int32 notify_param = 3;
  inline bool has_notify_param() const;
  inline void clear_notify_param();
  static const int kNotifyParamFieldNumber = 3;
  inline ::google::protobuf::int32 notify_param() const;
  inline void set_notify_param(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_shi_san_shui_protocols.packetl2c_game_notify)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_notify_type();
  inline void clear_has_notify_type();
  inline void set_has_notify_param();
  inline void clear_has_notify_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  int notify_type_;
  ::google::protobuf::int32 notify_param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_game_notify* default_instance_;
};
// -------------------------------------------------------------------

class gm_player_info : public ::google::protobuf::Message {
 public:
  gm_player_info();
  virtual ~gm_player_info();

  gm_player_info(const gm_player_info& from);

  inline gm_player_info& operator=(const gm_player_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gm_player_info& default_instance();

  void Swap(gm_player_info* other);

  // implements Message ----------------------------------------------

  gm_player_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gm_player_info& from);
  void MergeFrom(const gm_player_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // optional string player_name = 2;
  inline bool has_player_name() const;
  inline void clear_player_name();
  static const int kPlayerNameFieldNumber = 2;
  inline const ::std::string& player_name() const;
  inline void set_player_name(const ::std::string& value);
  inline void set_player_name(const char* value);
  inline void set_player_name(const char* value, size_t size);
  inline ::std::string* mutable_player_name();
  inline ::std::string* release_player_name();
  inline void set_allocated_player_name(::std::string* player_name);

  // optional int64 player_gold = 3;
  inline bool has_player_gold() const;
  inline void clear_player_gold();
  static const int kPlayerGoldFieldNumber = 3;
  inline ::google::protobuf::int64 player_gold() const;
  inline void set_player_gold(::google::protobuf::int64 value);

  // optional int32 player_room = 4;
  inline bool has_player_room() const;
  inline void clear_player_room();
  static const int kPlayerRoomFieldNumber = 4;
  inline ::google::protobuf::int32 player_room() const;
  inline void set_player_room(::google::protobuf::int32 value);

  // optional int64 player_profit = 5;
  inline bool has_player_profit() const;
  inline void clear_player_profit();
  static const int kPlayerProfitFieldNumber = 5;
  inline ::google::protobuf::int64 player_profit() const;
  inline void set_player_profit(::google::protobuf::int64 value);

  // optional int64 player_kill_type = 6;
  inline bool has_player_kill_type() const;
  inline void clear_player_kill_type();
  static const int kPlayerKillTypeFieldNumber = 6;
  inline ::google::protobuf::int64 player_kill_type() const;
  inline void set_player_kill_type(::google::protobuf::int64 value);

  // optional int64 player_kill_cnt = 7;
  inline bool has_player_kill_cnt() const;
  inline void clear_player_kill_cnt();
  static const int kPlayerKillCntFieldNumber = 7;
  inline ::google::protobuf::int64 player_kill_cnt() const;
  inline void set_player_kill_cnt(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:game_shi_san_shui_protocols.gm_player_info)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_player_name();
  inline void clear_has_player_name();
  inline void set_has_player_gold();
  inline void clear_has_player_gold();
  inline void set_has_player_room();
  inline void clear_has_player_room();
  inline void set_has_player_profit();
  inline void clear_has_player_profit();
  inline void set_has_player_kill_type();
  inline void clear_has_player_kill_type();
  inline void set_has_player_kill_cnt();
  inline void clear_has_player_kill_cnt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* player_name_;
  ::google::protobuf::int32 player_id_;
  ::google::protobuf::int32 player_room_;
  ::google::protobuf::int64 player_gold_;
  ::google::protobuf::int64 player_profit_;
  ::google::protobuf::int64 player_kill_type_;
  ::google::protobuf::int64 player_kill_cnt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static gm_player_info* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_gm_list : public ::google::protobuf::Message {
 public:
  packetc2l_gm_list();
  virtual ~packetc2l_gm_list();

  packetc2l_gm_list(const packetc2l_gm_list& from);

  inline packetc2l_gm_list& operator=(const packetc2l_gm_list& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_gm_list& default_instance();

  void Swap(packetc2l_gm_list* other);

  // implements Message ----------------------------------------------

  packetc2l_gm_list* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_gm_list& from);
  void MergeFrom(const packetc2l_gm_list& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_gm_list];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shi_san_shui_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value);

  // optional int32 hours = 2;
  inline bool has_hours() const;
  inline void clear_hours();
  static const int kHoursFieldNumber = 2;
  inline ::google::protobuf::int32 hours() const;
  inline void set_hours(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_shi_san_shui_protocols.packetc2l_gm_list)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_hours();
  inline void clear_has_hours();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 hours_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_gm_list* default_instance_;
};
// -------------------------------------------------------------------

class gm_room_info : public ::google::protobuf::Message {
 public:
  gm_room_info();
  virtual ~gm_room_info();

  gm_room_info(const gm_room_info& from);

  inline gm_room_info& operator=(const gm_room_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const gm_room_info& default_instance();

  void Swap(gm_room_info* other);

  // implements Message ----------------------------------------------

  gm_room_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const gm_room_info& from);
  void MergeFrom(const gm_room_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 player_fee = 2;
  inline bool has_player_fee() const;
  inline void clear_player_fee();
  static const int kPlayerFeeFieldNumber = 2;
  inline ::google::protobuf::int32 player_fee() const;
  inline void set_player_fee(::google::protobuf::int32 value);

  // optional int64 player_win = 3;
  inline bool has_player_win() const;
  inline void clear_player_win();
  static const int kPlayerWinFieldNumber = 3;
  inline ::google::protobuf::int64 player_win() const;
  inline void set_player_win(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:game_shi_san_shui_protocols.gm_room_info)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_player_fee();
  inline void clear_has_player_fee();
  inline void set_has_player_win();
  inline void clear_has_player_win();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 player_fee_;
  ::google::protobuf::int64 player_win_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static gm_room_info* default_instance_;
};
// -------------------------------------------------------------------

class packetl2c_gm_list : public ::google::protobuf::Message {
 public:
  packetl2c_gm_list();
  virtual ~packetl2c_gm_list();

  packetl2c_gm_list(const packetl2c_gm_list& from);

  inline packetl2c_gm_list& operator=(const packetl2c_gm_list& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetl2c_gm_list& default_instance();

  void Swap(packetl2c_gm_list* other);

  // implements Message ----------------------------------------------

  packetl2c_gm_list* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetl2c_gm_list& from);
  void MergeFrom(const packetl2c_gm_list& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_gm_list];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shi_san_shui_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value);

  // repeated .game_shi_san_shui_protocols.gm_player_info players = 2;
  inline int players_size() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 2;
  inline const ::game_shi_san_shui_protocols::gm_player_info& players(int index) const;
  inline ::game_shi_san_shui_protocols::gm_player_info* mutable_players(int index);
  inline ::game_shi_san_shui_protocols::gm_player_info* add_players();
  inline const ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::gm_player_info >&
      players() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::gm_player_info >*
      mutable_players();

  // repeated .game_shi_san_shui_protocols.gm_room_info rooms = 3;
  inline int rooms_size() const;
  inline void clear_rooms();
  static const int kRoomsFieldNumber = 3;
  inline const ::game_shi_san_shui_protocols::gm_room_info& rooms(int index) const;
  inline ::game_shi_san_shui_protocols::gm_room_info* mutable_rooms(int index);
  inline ::game_shi_san_shui_protocols::gm_room_info* add_rooms();
  inline const ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::gm_room_info >&
      rooms() const;
  inline ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::gm_room_info >*
      mutable_rooms();

  // @@protoc_insertion_point(class_scope:game_shi_san_shui_protocols.packetl2c_gm_list)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::gm_player_info > players_;
  ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::gm_room_info > rooms_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetl2c_gm_list* default_instance_;
};
// -------------------------------------------------------------------

class packetc2l_gm_kill : public ::google::protobuf::Message {
 public:
  packetc2l_gm_kill();
  virtual ~packetc2l_gm_kill();

  packetc2l_gm_kill(const packetc2l_gm_kill& from);

  inline packetc2l_gm_kill& operator=(const packetc2l_gm_kill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2l_gm_kill& default_instance();

  void Swap(packetc2l_gm_kill* other);

  // implements Message ----------------------------------------------

  packetc2l_gm_kill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2l_gm_kill& from);
  void MergeFrom(const packetc2l_gm_kill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_gm_kill];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::game_shi_san_shui_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value);

  // optional int32 player_id = 2;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // optional int32 kill_type = 3;
  inline bool has_kill_type() const;
  inline void clear_kill_type();
  static const int kKillTypeFieldNumber = 3;
  inline ::google::protobuf::int32 kill_type() const;
  inline void set_kill_type(::google::protobuf::int32 value);

  // optional int32 kill_cnt = 4;
  inline bool has_kill_cnt() const;
  inline void clear_kill_cnt();
  static const int kKillCntFieldNumber = 4;
  inline ::google::protobuf::int32 kill_cnt() const;
  inline void set_kill_cnt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_shi_san_shui_protocols.packetc2l_gm_kill)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_kill_type();
  inline void clear_has_kill_type();
  inline void set_has_kill_cnt();
  inline void clear_has_kill_cnt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 player_id_;
  ::google::protobuf::int32 kill_type_;
  ::google::protobuf::int32 kill_cnt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_game_5fshi_5fsan_5fshui_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static packetc2l_gm_kill* default_instance_;
};
// ===================================================================


// ===================================================================

// msg_player_info

// optional int32 player_id = 1;
inline bool msg_player_info::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_player_info::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_player_info::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_player_info::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 msg_player_info::player_id() const {
  return player_id_;
}
inline void msg_player_info::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional string player_name = 2;
inline bool msg_player_info::has_player_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_player_info::set_has_player_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_player_info::clear_has_player_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_player_info::clear_player_name() {
  if (player_name_ != &::google::protobuf::internal::kEmptyString) {
    player_name_->clear();
  }
  clear_has_player_name();
}
inline const ::std::string& msg_player_info::player_name() const {
  return *player_name_;
}
inline void msg_player_info::set_player_name(const ::std::string& value) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::kEmptyString) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(value);
}
inline void msg_player_info::set_player_name(const char* value) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::kEmptyString) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(value);
}
inline void msg_player_info::set_player_name(const char* value, size_t size) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::kEmptyString) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* msg_player_info::mutable_player_name() {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::kEmptyString) {
    player_name_ = new ::std::string;
  }
  return player_name_;
}
inline ::std::string* msg_player_info::release_player_name() {
  clear_has_player_name();
  if (player_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = player_name_;
    player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void msg_player_info::set_allocated_player_name(::std::string* player_name) {
  if (player_name_ != &::google::protobuf::internal::kEmptyString) {
    delete player_name_;
  }
  if (player_name) {
    set_has_player_name();
    player_name_ = player_name;
  } else {
    clear_has_player_name();
    player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 head_frame = 3;
inline bool msg_player_info::has_head_frame() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_player_info::set_has_head_frame() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_player_info::clear_has_head_frame() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_player_info::clear_head_frame() {
  head_frame_ = 0;
  clear_has_head_frame();
}
inline ::google::protobuf::int32 msg_player_info::head_frame() const {
  return head_frame_;
}
inline void msg_player_info::set_head_frame(::google::protobuf::int32 value) {
  set_has_head_frame();
  head_frame_ = value;
}

// optional string head_custom = 4;
inline bool msg_player_info::has_head_custom() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void msg_player_info::set_has_head_custom() {
  _has_bits_[0] |= 0x00000008u;
}
inline void msg_player_info::clear_has_head_custom() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void msg_player_info::clear_head_custom() {
  if (head_custom_ != &::google::protobuf::internal::kEmptyString) {
    head_custom_->clear();
  }
  clear_has_head_custom();
}
inline const ::std::string& msg_player_info::head_custom() const {
  return *head_custom_;
}
inline void msg_player_info::set_head_custom(const ::std::string& value) {
  set_has_head_custom();
  if (head_custom_ == &::google::protobuf::internal::kEmptyString) {
    head_custom_ = new ::std::string;
  }
  head_custom_->assign(value);
}
inline void msg_player_info::set_head_custom(const char* value) {
  set_has_head_custom();
  if (head_custom_ == &::google::protobuf::internal::kEmptyString) {
    head_custom_ = new ::std::string;
  }
  head_custom_->assign(value);
}
inline void msg_player_info::set_head_custom(const char* value, size_t size) {
  set_has_head_custom();
  if (head_custom_ == &::google::protobuf::internal::kEmptyString) {
    head_custom_ = new ::std::string;
  }
  head_custom_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* msg_player_info::mutable_head_custom() {
  set_has_head_custom();
  if (head_custom_ == &::google::protobuf::internal::kEmptyString) {
    head_custom_ = new ::std::string;
  }
  return head_custom_;
}
inline ::std::string* msg_player_info::release_head_custom() {
  clear_has_head_custom();
  if (head_custom_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = head_custom_;
    head_custom_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void msg_player_info::set_allocated_head_custom(::std::string* head_custom) {
  if (head_custom_ != &::google::protobuf::internal::kEmptyString) {
    delete head_custom_;
  }
  if (head_custom) {
    set_has_head_custom();
    head_custom_ = head_custom;
  } else {
    clear_has_head_custom();
    head_custom_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 player_gold = 5;
inline bool msg_player_info::has_player_gold() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void msg_player_info::set_has_player_gold() {
  _has_bits_[0] |= 0x00000010u;
}
inline void msg_player_info::clear_has_player_gold() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void msg_player_info::clear_player_gold() {
  player_gold_ = GOOGLE_LONGLONG(0);
  clear_has_player_gold();
}
inline ::google::protobuf::int64 msg_player_info::player_gold() const {
  return player_gold_;
}
inline void msg_player_info::set_player_gold(::google::protobuf::int64 value) {
  set_has_player_gold();
  player_gold_ = value;
}

// optional int32 player_sex = 6;
inline bool msg_player_info::has_player_sex() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void msg_player_info::set_has_player_sex() {
  _has_bits_[0] |= 0x00000020u;
}
inline void msg_player_info::clear_has_player_sex() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void msg_player_info::clear_player_sex() {
  player_sex_ = 0;
  clear_has_player_sex();
}
inline ::google::protobuf::int32 msg_player_info::player_sex() const {
  return player_sex_;
}
inline void msg_player_info::set_player_sex(::google::protobuf::int32 value) {
  set_has_player_sex();
  player_sex_ = value;
}

// optional int32 vip_level = 7;
inline bool msg_player_info::has_vip_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void msg_player_info::set_has_vip_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void msg_player_info::clear_has_vip_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void msg_player_info::clear_vip_level() {
  vip_level_ = 0;
  clear_has_vip_level();
}
inline ::google::protobuf::int32 msg_player_info::vip_level() const {
  return vip_level_;
}
inline void msg_player_info::set_vip_level(::google::protobuf::int32 value) {
  set_has_vip_level();
  vip_level_ = value;
}

// -------------------------------------------------------------------

// packetc2l_check_state

// optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];
inline bool packetc2l_check_state::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_check_state::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_check_state::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_check_state::clear_packet_id() {
  packet_id_ = 10001;
  clear_has_packet_id();
}
inline ::game_shi_san_shui_protocols::e_server_msg_type packetc2l_check_state::packet_id() const {
  return static_cast< ::game_shi_san_shui_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_check_state::set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value) {
  assert(::game_shi_san_shui_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetl2c_check_state_result

// optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];
inline bool packetl2c_check_state_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_check_state_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_check_state_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_check_state_result::clear_packet_id() {
  packet_id_ = 15001;
  clear_has_packet_id();
}
inline ::game_shi_san_shui_protocols::e_server_msg_type packetl2c_check_state_result::packet_id() const {
  return static_cast< ::game_shi_san_shui_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_check_state_result::set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value) {
  assert(::game_shi_san_shui_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 result = 2 [default = 0];
inline bool packetl2c_check_state_result::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_check_state_result::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_check_state_result::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_check_state_result::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 packetl2c_check_state_result::result() const {
  return result_;
}
inline void packetl2c_check_state_result::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// packetc2l_get_scene_info

// optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_scene_info];
inline bool packetc2l_get_scene_info::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_get_scene_info::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_get_scene_info::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_get_scene_info::clear_packet_id() {
  packet_id_ = 10002;
  clear_has_packet_id();
}
inline ::game_shi_san_shui_protocols::e_server_msg_type packetc2l_get_scene_info::packet_id() const {
  return static_cast< ::game_shi_san_shui_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_get_scene_info::set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value) {
  assert(::game_shi_san_shui_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// msg_room_scene_info

// optional bool ready = 1;
inline bool msg_room_scene_info::has_ready() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_room_scene_info::set_has_ready() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_room_scene_info::clear_has_ready() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_room_scene_info::clear_ready() {
  ready_ = false;
  clear_has_ready();
}
inline bool msg_room_scene_info::ready() const {
  return ready_;
}
inline void msg_room_scene_info::set_ready(bool value) {
  set_has_ready();
  ready_ = value;
}

// -------------------------------------------------------------------

// msg_playing_scene_info

// optional int32 remain_seconds = 1;
inline bool msg_playing_scene_info::has_remain_seconds() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_playing_scene_info::set_has_remain_seconds() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_playing_scene_info::clear_has_remain_seconds() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_playing_scene_info::clear_remain_seconds() {
  remain_seconds_ = 0;
  clear_has_remain_seconds();
}
inline ::google::protobuf::int32 msg_playing_scene_info::remain_seconds() const {
  return remain_seconds_;
}
inline void msg_playing_scene_info::set_remain_seconds(::google::protobuf::int32 value) {
  set_has_remain_seconds();
  remain_seconds_ = value;
}

// repeated bool user_trustee = 2;
inline int msg_playing_scene_info::user_trustee_size() const {
  return user_trustee_.size();
}
inline void msg_playing_scene_info::clear_user_trustee() {
  user_trustee_.Clear();
}
inline bool msg_playing_scene_info::user_trustee(int index) const {
  return user_trustee_.Get(index);
}
inline void msg_playing_scene_info::set_user_trustee(int index, bool value) {
  user_trustee_.Set(index, value);
}
inline void msg_playing_scene_info::add_user_trustee(bool value) {
  user_trustee_.Add(value);
}
inline const ::google::protobuf::RepeatedField< bool >&
msg_playing_scene_info::user_trustee() const {
  return user_trustee_;
}
inline ::google::protobuf::RepeatedField< bool >*
msg_playing_scene_info::mutable_user_trustee() {
  return &user_trustee_;
}

// repeated int32 cards = 3;
inline int msg_playing_scene_info::cards_size() const {
  return cards_.size();
}
inline void msg_playing_scene_info::clear_cards() {
  cards_.Clear();
}
inline ::google::protobuf::int32 msg_playing_scene_info::cards(int index) const {
  return cards_.Get(index);
}
inline void msg_playing_scene_info::set_cards(int index, ::google::protobuf::int32 value) {
  cards_.Set(index, value);
}
inline void msg_playing_scene_info::add_cards(::google::protobuf::int32 value) {
  cards_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_playing_scene_info::cards() const {
  return cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_playing_scene_info::mutable_cards() {
  return &cards_;
}

// repeated bool open_cards = 4;
inline int msg_playing_scene_info::open_cards_size() const {
  return open_cards_.size();
}
inline void msg_playing_scene_info::clear_open_cards() {
  open_cards_.Clear();
}
inline bool msg_playing_scene_info::open_cards(int index) const {
  return open_cards_.Get(index);
}
inline void msg_playing_scene_info::set_open_cards(int index, bool value) {
  open_cards_.Set(index, value);
}
inline void msg_playing_scene_info::add_open_cards(bool value) {
  open_cards_.Add(value);
}
inline const ::google::protobuf::RepeatedField< bool >&
msg_playing_scene_info::open_cards() const {
  return open_cards_;
}
inline ::google::protobuf::RepeatedField< bool >*
msg_playing_scene_info::mutable_open_cards() {
  return &open_cards_;
}

// -------------------------------------------------------------------

// packetl2c_scene_info_result

// optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_scene_info_result];
inline bool packetl2c_scene_info_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_scene_info_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_scene_info_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_scene_info_result::clear_packet_id() {
  packet_id_ = 15002;
  clear_has_packet_id();
}
inline ::game_shi_san_shui_protocols::e_server_msg_type packetl2c_scene_info_result::packet_id() const {
  return static_cast< ::game_shi_san_shui_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_scene_info_result::set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value) {
  assert(::game_shi_san_shui_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 room_type = 2;
inline bool packetl2c_scene_info_result::has_room_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_scene_info_result::set_has_room_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_scene_info_result::clear_has_room_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_scene_info_result::clear_room_type() {
  room_type_ = 0;
  clear_has_room_type();
}
inline ::google::protobuf::int32 packetl2c_scene_info_result::room_type() const {
  return room_type_;
}
inline void packetl2c_scene_info_result::set_room_type(::google::protobuf::int32 value) {
  set_has_room_type();
  room_type_ = value;
}

// optional .game_shi_san_shui_protocols.msg_playing_scene_info scene_info = 3;
inline bool packetl2c_scene_info_result::has_scene_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetl2c_scene_info_result::set_has_scene_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetl2c_scene_info_result::clear_has_scene_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetl2c_scene_info_result::clear_scene_info() {
  if (scene_info_ != NULL) scene_info_->::game_shi_san_shui_protocols::msg_playing_scene_info::Clear();
  clear_has_scene_info();
}
inline const ::game_shi_san_shui_protocols::msg_playing_scene_info& packetl2c_scene_info_result::scene_info() const {
  return scene_info_ != NULL ? *scene_info_ : *default_instance_->scene_info_;
}
inline ::game_shi_san_shui_protocols::msg_playing_scene_info* packetl2c_scene_info_result::mutable_scene_info() {
  set_has_scene_info();
  if (scene_info_ == NULL) scene_info_ = new ::game_shi_san_shui_protocols::msg_playing_scene_info;
  return scene_info_;
}
inline ::game_shi_san_shui_protocols::msg_playing_scene_info* packetl2c_scene_info_result::release_scene_info() {
  clear_has_scene_info();
  ::game_shi_san_shui_protocols::msg_playing_scene_info* temp = scene_info_;
  scene_info_ = NULL;
  return temp;
}
inline void packetl2c_scene_info_result::set_allocated_scene_info(::game_shi_san_shui_protocols::msg_playing_scene_info* scene_info) {
  delete scene_info_;
  scene_info_ = scene_info;
  if (scene_info) {
    set_has_scene_info();
  } else {
    clear_has_scene_info();
  }
}

// optional .game_shi_san_shui_protocols.packetl2c_game_end game_end = 4;
inline bool packetl2c_scene_info_result::has_game_end() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void packetl2c_scene_info_result::set_has_game_end() {
  _has_bits_[0] |= 0x00000008u;
}
inline void packetl2c_scene_info_result::clear_has_game_end() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void packetl2c_scene_info_result::clear_game_end() {
  if (game_end_ != NULL) game_end_->::game_shi_san_shui_protocols::packetl2c_game_end::Clear();
  clear_has_game_end();
}
inline const ::game_shi_san_shui_protocols::packetl2c_game_end& packetl2c_scene_info_result::game_end() const {
  return game_end_ != NULL ? *game_end_ : *default_instance_->game_end_;
}
inline ::game_shi_san_shui_protocols::packetl2c_game_end* packetl2c_scene_info_result::mutable_game_end() {
  set_has_game_end();
  if (game_end_ == NULL) game_end_ = new ::game_shi_san_shui_protocols::packetl2c_game_end;
  return game_end_;
}
inline ::game_shi_san_shui_protocols::packetl2c_game_end* packetl2c_scene_info_result::release_game_end() {
  clear_has_game_end();
  ::game_shi_san_shui_protocols::packetl2c_game_end* temp = game_end_;
  game_end_ = NULL;
  return temp;
}
inline void packetl2c_scene_info_result::set_allocated_game_end(::game_shi_san_shui_protocols::packetl2c_game_end* game_end) {
  delete game_end_;
  game_end_ = game_end;
  if (game_end) {
    set_has_game_end();
  } else {
    clear_has_game_end();
  }
}

// optional int32 game_status = 5;
inline bool packetl2c_scene_info_result::has_game_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void packetl2c_scene_info_result::set_has_game_status() {
  _has_bits_[0] |= 0x00000010u;
}
inline void packetl2c_scene_info_result::clear_has_game_status() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void packetl2c_scene_info_result::clear_game_status() {
  game_status_ = 0;
  clear_has_game_status();
}
inline ::google::protobuf::int32 packetl2c_scene_info_result::game_status() const {
  return game_status_;
}
inline void packetl2c_scene_info_result::set_game_status(::google::protobuf::int32 value) {
  set_has_game_status();
  game_status_ = value;
}

// -------------------------------------------------------------------

// packetc2l_enter_room

// optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_enter_room];
inline bool packetc2l_enter_room::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_enter_room::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_enter_room::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_enter_room::clear_packet_id() {
  packet_id_ = 10009;
  clear_has_packet_id();
}
inline ::game_shi_san_shui_protocols::e_server_msg_type packetc2l_enter_room::packet_id() const {
  return static_cast< ::game_shi_san_shui_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_enter_room::set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value) {
  assert(::game_shi_san_shui_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 room_type = 2;
inline bool packetc2l_enter_room::has_room_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetc2l_enter_room::set_has_room_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetc2l_enter_room::clear_has_room_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetc2l_enter_room::clear_room_type() {
  room_type_ = 0;
  clear_has_room_type();
}
inline ::google::protobuf::int32 packetc2l_enter_room::room_type() const {
  return room_type_;
}
inline void packetc2l_enter_room::set_room_type(::google::protobuf::int32 value) {
  set_has_room_type();
  room_type_ = value;
}

// -------------------------------------------------------------------

// packetl2c_enter_room_result

// optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_enter_room_result];
inline bool packetl2c_enter_room_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_enter_room_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_enter_room_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_enter_room_result::clear_packet_id() {
  packet_id_ = 15009;
  clear_has_packet_id();
}
inline ::game_shi_san_shui_protocols::e_server_msg_type packetl2c_enter_room_result::packet_id() const {
  return static_cast< ::game_shi_san_shui_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_enter_room_result::set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value) {
  assert(::game_shi_san_shui_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
inline bool packetl2c_enter_room_result::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_enter_room_result::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_enter_room_result::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_enter_room_result::clear_result() {
  result_ = 2;
  clear_has_result();
}
inline ::msg_type_def::e_msg_result_def packetl2c_enter_room_result::result() const {
  return static_cast< ::msg_type_def::e_msg_result_def >(result_);
}
inline void packetl2c_enter_room_result::set_result(::msg_type_def::e_msg_result_def value) {
  assert(::msg_type_def::e_msg_result_def_IsValid(value));
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// packetc2l_leave_room

// optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_room];
inline bool packetc2l_leave_room::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_leave_room::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_leave_room::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_leave_room::clear_packet_id() {
  packet_id_ = 10010;
  clear_has_packet_id();
}
inline ::game_shi_san_shui_protocols::e_server_msg_type packetc2l_leave_room::packet_id() const {
  return static_cast< ::game_shi_san_shui_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_leave_room::set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value) {
  assert(::game_shi_san_shui_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetl2c_leave_room_result

// optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_room_result];
inline bool packetl2c_leave_room_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_leave_room_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_leave_room_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_leave_room_result::clear_packet_id() {
  packet_id_ = 15010;
  clear_has_packet_id();
}
inline ::game_shi_san_shui_protocols::e_server_msg_type packetl2c_leave_room_result::packet_id() const {
  return static_cast< ::game_shi_san_shui_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_leave_room_result::set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value) {
  assert(::game_shi_san_shui_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int64 player_gold = 2;
inline bool packetl2c_leave_room_result::has_player_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_leave_room_result::set_has_player_gold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_leave_room_result::clear_has_player_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_leave_room_result::clear_player_gold() {
  player_gold_ = GOOGLE_LONGLONG(0);
  clear_has_player_gold();
}
inline ::google::protobuf::int64 packetl2c_leave_room_result::player_gold() const {
  return player_gold_;
}
inline void packetl2c_leave_room_result::set_player_gold(::google::protobuf::int64 value) {
  set_has_player_gold();
  player_gold_ = value;
}

// -------------------------------------------------------------------

// packetc2l_user_trustee

// optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_user_trustee];
inline bool packetc2l_user_trustee::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_user_trustee::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_user_trustee::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_user_trustee::clear_packet_id() {
  packet_id_ = 10003;
  clear_has_packet_id();
}
inline ::game_shi_san_shui_protocols::e_server_msg_type packetc2l_user_trustee::packet_id() const {
  return static_cast< ::game_shi_san_shui_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_user_trustee::set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value) {
  assert(::game_shi_san_shui_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional bool trustee = 2;
inline bool packetc2l_user_trustee::has_trustee() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetc2l_user_trustee::set_has_trustee() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetc2l_user_trustee::clear_has_trustee() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetc2l_user_trustee::clear_trustee() {
  trustee_ = false;
  clear_has_trustee();
}
inline bool packetc2l_user_trustee::trustee() const {
  return trustee_;
}
inline void packetc2l_user_trustee::set_trustee(bool value) {
  set_has_trustee();
  trustee_ = value;
}

// -------------------------------------------------------------------

// packetl2c_user_trustee_notify

// optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_user_trustee];
inline bool packetl2c_user_trustee_notify::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_user_trustee_notify::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_user_trustee_notify::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_user_trustee_notify::clear_packet_id() {
  packet_id_ = 15008;
  clear_has_packet_id();
}
inline ::game_shi_san_shui_protocols::e_server_msg_type packetl2c_user_trustee_notify::packet_id() const {
  return static_cast< ::game_shi_san_shui_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_user_trustee_notify::set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value) {
  assert(::game_shi_san_shui_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 chair_id = 2;
inline bool packetl2c_user_trustee_notify::has_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_user_trustee_notify::set_has_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_user_trustee_notify::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_user_trustee_notify::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
inline ::google::protobuf::int32 packetl2c_user_trustee_notify::chair_id() const {
  return chair_id_;
}
inline void packetl2c_user_trustee_notify::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
}

// optional bool trustee = 3;
inline bool packetl2c_user_trustee_notify::has_trustee() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetl2c_user_trustee_notify::set_has_trustee() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetl2c_user_trustee_notify::clear_has_trustee() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetl2c_user_trustee_notify::clear_trustee() {
  trustee_ = false;
  clear_has_trustee();
}
inline bool packetl2c_user_trustee_notify::trustee() const {
  return trustee_;
}
inline void packetl2c_user_trustee_notify::set_trustee(bool value) {
  set_has_trustee();
  trustee_ = value;
}

// optional int32 remain_seconds = 4;
inline bool packetl2c_user_trustee_notify::has_remain_seconds() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void packetl2c_user_trustee_notify::set_has_remain_seconds() {
  _has_bits_[0] |= 0x00000008u;
}
inline void packetl2c_user_trustee_notify::clear_has_remain_seconds() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void packetl2c_user_trustee_notify::clear_remain_seconds() {
  remain_seconds_ = 0;
  clear_has_remain_seconds();
}
inline ::google::protobuf::int32 packetl2c_user_trustee_notify::remain_seconds() const {
  return remain_seconds_;
}
inline void packetl2c_user_trustee_notify::set_remain_seconds(::google::protobuf::int32 value) {
  set_has_remain_seconds();
  remain_seconds_ = value;
}

// -------------------------------------------------------------------

// packetc2l_ready

// optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_ready];
inline bool packetc2l_ready::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_ready::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_ready::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_ready::clear_packet_id() {
  packet_id_ = 10011;
  clear_has_packet_id();
}
inline ::game_shi_san_shui_protocols::e_server_msg_type packetc2l_ready::packet_id() const {
  return static_cast< ::game_shi_san_shui_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_ready::set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value) {
  assert(::game_shi_san_shui_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional bool change_table = 2;
inline bool packetc2l_ready::has_change_table() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetc2l_ready::set_has_change_table() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetc2l_ready::clear_has_change_table() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetc2l_ready::clear_change_table() {
  change_table_ = false;
  clear_has_change_table();
}
inline bool packetc2l_ready::change_table() const {
  return change_table_;
}
inline void packetc2l_ready::set_change_table(bool value) {
  set_has_change_table();
  change_table_ = value;
}

// -------------------------------------------------------------------

// packetl2c_send_all_playerinfos

// optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_send_all_playerinfos];
inline bool packetl2c_send_all_playerinfos::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_send_all_playerinfos::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_send_all_playerinfos::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_send_all_playerinfos::clear_packet_id() {
  packet_id_ = 15017;
  clear_has_packet_id();
}
inline ::game_shi_san_shui_protocols::e_server_msg_type packetl2c_send_all_playerinfos::packet_id() const {
  return static_cast< ::game_shi_san_shui_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_send_all_playerinfos::set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value) {
  assert(::game_shi_san_shui_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// repeated .game_shi_san_shui_protocols.msg_player_info player_info = 2;
inline int packetl2c_send_all_playerinfos::player_info_size() const {
  return player_info_.size();
}
inline void packetl2c_send_all_playerinfos::clear_player_info() {
  player_info_.Clear();
}
inline const ::game_shi_san_shui_protocols::msg_player_info& packetl2c_send_all_playerinfos::player_info(int index) const {
  return player_info_.Get(index);
}
inline ::game_shi_san_shui_protocols::msg_player_info* packetl2c_send_all_playerinfos::mutable_player_info(int index) {
  return player_info_.Mutable(index);
}
inline ::game_shi_san_shui_protocols::msg_player_info* packetl2c_send_all_playerinfos::add_player_info() {
  return player_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::msg_player_info >&
packetl2c_send_all_playerinfos::player_info() const {
  return player_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::msg_player_info >*
packetl2c_send_all_playerinfos::mutable_player_info() {
  return &player_info_;
}

// -------------------------------------------------------------------

// packetl2c_send_playerinfo

// optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_send_playerinfo];
inline bool packetl2c_send_playerinfo::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_send_playerinfo::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_send_playerinfo::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_send_playerinfo::clear_packet_id() {
  packet_id_ = 15014;
  clear_has_packet_id();
}
inline ::game_shi_san_shui_protocols::e_server_msg_type packetl2c_send_playerinfo::packet_id() const {
  return static_cast< ::game_shi_san_shui_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_send_playerinfo::set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value) {
  assert(::game_shi_san_shui_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional .game_shi_san_shui_protocols.msg_player_info player_info = 2;
inline bool packetl2c_send_playerinfo::has_player_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_send_playerinfo::set_has_player_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_send_playerinfo::clear_has_player_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_send_playerinfo::clear_player_info() {
  if (player_info_ != NULL) player_info_->::game_shi_san_shui_protocols::msg_player_info::Clear();
  clear_has_player_info();
}
inline const ::game_shi_san_shui_protocols::msg_player_info& packetl2c_send_playerinfo::player_info() const {
  return player_info_ != NULL ? *player_info_ : *default_instance_->player_info_;
}
inline ::game_shi_san_shui_protocols::msg_player_info* packetl2c_send_playerinfo::mutable_player_info() {
  set_has_player_info();
  if (player_info_ == NULL) player_info_ = new ::game_shi_san_shui_protocols::msg_player_info;
  return player_info_;
}
inline ::game_shi_san_shui_protocols::msg_player_info* packetl2c_send_playerinfo::release_player_info() {
  clear_has_player_info();
  ::game_shi_san_shui_protocols::msg_player_info* temp = player_info_;
  player_info_ = NULL;
  return temp;
}
inline void packetl2c_send_playerinfo::set_allocated_player_info(::game_shi_san_shui_protocols::msg_player_info* player_info) {
  delete player_info_;
  player_info_ = player_info;
  if (player_info) {
    set_has_player_info();
  } else {
    clear_has_player_info();
  }
}

// optional int32 chair_id = 3;
inline bool packetl2c_send_playerinfo::has_chair_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetl2c_send_playerinfo::set_has_chair_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetl2c_send_playerinfo::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetl2c_send_playerinfo::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
inline ::google::protobuf::int32 packetl2c_send_playerinfo::chair_id() const {
  return chair_id_;
}
inline void packetl2c_send_playerinfo::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
}

// -------------------------------------------------------------------

// cards_data

// repeated int32 card = 1;
inline int cards_data::card_size() const {
  return card_.size();
}
inline void cards_data::clear_card() {
  card_.Clear();
}
inline ::google::protobuf::int32 cards_data::card(int index) const {
  return card_.Get(index);
}
inline void cards_data::set_card(int index, ::google::protobuf::int32 value) {
  card_.Set(index, value);
}
inline void cards_data::add_card(::google::protobuf::int32 value) {
  card_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
cards_data::card() const {
  return card_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
cards_data::mutable_card() {
  return &card_;
}

// -------------------------------------------------------------------

// lane_data

// optional int32 lane_type = 1;
inline bool lane_data::has_lane_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void lane_data::set_has_lane_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void lane_data::clear_has_lane_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void lane_data::clear_lane_type() {
  lane_type_ = 0;
  clear_has_lane_type();
}
inline ::google::protobuf::int32 lane_data::lane_type() const {
  return lane_type_;
}
inline void lane_data::set_lane_type(::google::protobuf::int32 value) {
  set_has_lane_type();
  lane_type_ = value;
}

// optional int32 win_shui_cnt = 2;
inline bool lane_data::has_win_shui_cnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void lane_data::set_has_win_shui_cnt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void lane_data::clear_has_win_shui_cnt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void lane_data::clear_win_shui_cnt() {
  win_shui_cnt_ = 0;
  clear_has_win_shui_cnt();
}
inline ::google::protobuf::int32 lane_data::win_shui_cnt() const {
  return win_shui_cnt_;
}
inline void lane_data::set_win_shui_cnt(::google::protobuf::int32 value) {
  set_has_win_shui_cnt();
  win_shui_cnt_ = value;
}

// -------------------------------------------------------------------

// da_qiang_data

// optional int32 chair_id = 1;
inline bool da_qiang_data::has_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void da_qiang_data::set_has_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void da_qiang_data::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void da_qiang_data::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
inline ::google::protobuf::int32 da_qiang_data::chair_id() const {
  return chair_id_;
}
inline void da_qiang_data::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
}

// repeated int32 shui_cnt = 2;
inline int da_qiang_data::shui_cnt_size() const {
  return shui_cnt_.size();
}
inline void da_qiang_data::clear_shui_cnt() {
  shui_cnt_.Clear();
}
inline ::google::protobuf::int32 da_qiang_data::shui_cnt(int index) const {
  return shui_cnt_.Get(index);
}
inline void da_qiang_data::set_shui_cnt(int index, ::google::protobuf::int32 value) {
  shui_cnt_.Set(index, value);
}
inline void da_qiang_data::add_shui_cnt(::google::protobuf::int32 value) {
  shui_cnt_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
da_qiang_data::shui_cnt() const {
  return shui_cnt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
da_qiang_data::mutable_shui_cnt() {
  return &shui_cnt_;
}

// -------------------------------------------------------------------

// bao_dao_data

// optional int32 chair_id = 1;
inline bool bao_dao_data::has_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void bao_dao_data::set_has_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void bao_dao_data::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void bao_dao_data::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
inline ::google::protobuf::int32 bao_dao_data::chair_id() const {
  return chair_id_;
}
inline void bao_dao_data::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
}

// optional int32 shui_cnt = 2;
inline bool bao_dao_data::has_shui_cnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void bao_dao_data::set_has_shui_cnt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void bao_dao_data::clear_has_shui_cnt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void bao_dao_data::clear_shui_cnt() {
  shui_cnt_ = 0;
  clear_has_shui_cnt();
}
inline ::google::protobuf::int32 bao_dao_data::shui_cnt() const {
  return shui_cnt_;
}
inline void bao_dao_data::set_shui_cnt(::google::protobuf::int32 value) {
  set_has_shui_cnt();
  shui_cnt_ = value;
}

// -------------------------------------------------------------------

// win_result

// repeated int32 cards = 1;
inline int win_result::cards_size() const {
  return cards_.size();
}
inline void win_result::clear_cards() {
  cards_.Clear();
}
inline ::google::protobuf::int32 win_result::cards(int index) const {
  return cards_.Get(index);
}
inline void win_result::set_cards(int index, ::google::protobuf::int32 value) {
  cards_.Set(index, value);
}
inline void win_result::add_cards(::google::protobuf::int32 value) {
  cards_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
win_result::cards() const {
  return cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
win_result::mutable_cards() {
  return &cards_;
}

// repeated .game_shi_san_shui_protocols.lane_data lane_type = 2;
inline int win_result::lane_type_size() const {
  return lane_type_.size();
}
inline void win_result::clear_lane_type() {
  lane_type_.Clear();
}
inline const ::game_shi_san_shui_protocols::lane_data& win_result::lane_type(int index) const {
  return lane_type_.Get(index);
}
inline ::game_shi_san_shui_protocols::lane_data* win_result::mutable_lane_type(int index) {
  return lane_type_.Mutable(index);
}
inline ::game_shi_san_shui_protocols::lane_data* win_result::add_lane_type() {
  return lane_type_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::lane_data >&
win_result::lane_type() const {
  return lane_type_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::lane_data >*
win_result::mutable_lane_type() {
  return &lane_type_;
}

// repeated .game_shi_san_shui_protocols.da_qiang_data da_qiang = 3;
inline int win_result::da_qiang_size() const {
  return da_qiang_.size();
}
inline void win_result::clear_da_qiang() {
  da_qiang_.Clear();
}
inline const ::game_shi_san_shui_protocols::da_qiang_data& win_result::da_qiang(int index) const {
  return da_qiang_.Get(index);
}
inline ::game_shi_san_shui_protocols::da_qiang_data* win_result::mutable_da_qiang(int index) {
  return da_qiang_.Mutable(index);
}
inline ::game_shi_san_shui_protocols::da_qiang_data* win_result::add_da_qiang() {
  return da_qiang_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::da_qiang_data >&
win_result::da_qiang() const {
  return da_qiang_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::da_qiang_data >*
win_result::mutable_da_qiang() {
  return &da_qiang_;
}

// optional int32 game_score = 4;
inline bool win_result::has_game_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void win_result::set_has_game_score() {
  _has_bits_[0] |= 0x00000008u;
}
inline void win_result::clear_has_game_score() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void win_result::clear_game_score() {
  game_score_ = 0;
  clear_has_game_score();
}
inline ::google::protobuf::int32 win_result::game_score() const {
  return game_score_;
}
inline void win_result::set_game_score(::google::protobuf::int32 value) {
  set_has_game_score();
  game_score_ = value;
}

// optional int32 win_account = 5;
inline bool win_result::has_win_account() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void win_result::set_has_win_account() {
  _has_bits_[0] |= 0x00000010u;
}
inline void win_result::clear_has_win_account() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void win_result::clear_win_account() {
  win_account_ = 0;
  clear_has_win_account();
}
inline ::google::protobuf::int32 win_result::win_account() const {
  return win_account_;
}
inline void win_result::set_win_account(::google::protobuf::int32 value) {
  set_has_win_account();
  win_account_ = value;
}

// repeated .game_shi_san_shui_protocols.bao_dao_data bao_dao = 6;
inline int win_result::bao_dao_size() const {
  return bao_dao_.size();
}
inline void win_result::clear_bao_dao() {
  bao_dao_.Clear();
}
inline const ::game_shi_san_shui_protocols::bao_dao_data& win_result::bao_dao(int index) const {
  return bao_dao_.Get(index);
}
inline ::game_shi_san_shui_protocols::bao_dao_data* win_result::mutable_bao_dao(int index) {
  return bao_dao_.Mutable(index);
}
inline ::game_shi_san_shui_protocols::bao_dao_data* win_result::add_bao_dao() {
  return bao_dao_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::bao_dao_data >&
win_result::bao_dao() const {
  return bao_dao_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::bao_dao_data >*
win_result::mutable_bao_dao() {
  return &bao_dao_;
}

// optional int32 total_shui_cnt = 7;
inline bool win_result::has_total_shui_cnt() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void win_result::set_has_total_shui_cnt() {
  _has_bits_[0] |= 0x00000040u;
}
inline void win_result::clear_has_total_shui_cnt() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void win_result::clear_total_shui_cnt() {
  total_shui_cnt_ = 0;
  clear_has_total_shui_cnt();
}
inline ::google::protobuf::int32 win_result::total_shui_cnt() const {
  return total_shui_cnt_;
}
inline void win_result::set_total_shui_cnt(::google::protobuf::int32 value) {
  set_has_total_shui_cnt();
  total_shui_cnt_ = value;
}

// -------------------------------------------------------------------

// packetl2c_game_start

// optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_game_start];
inline bool packetl2c_game_start::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_game_start::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_game_start::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_game_start::clear_packet_id() {
  packet_id_ = 15013;
  clear_has_packet_id();
}
inline ::game_shi_san_shui_protocols::e_server_msg_type packetl2c_game_start::packet_id() const {
  return static_cast< ::game_shi_san_shui_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_game_start::set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value) {
  assert(::game_shi_san_shui_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// repeated .game_shi_san_shui_protocols.cards_data cards = 2;
inline int packetl2c_game_start::cards_size() const {
  return cards_.size();
}
inline void packetl2c_game_start::clear_cards() {
  cards_.Clear();
}
inline const ::game_shi_san_shui_protocols::cards_data& packetl2c_game_start::cards(int index) const {
  return cards_.Get(index);
}
inline ::game_shi_san_shui_protocols::cards_data* packetl2c_game_start::mutable_cards(int index) {
  return cards_.Mutable(index);
}
inline ::game_shi_san_shui_protocols::cards_data* packetl2c_game_start::add_cards() {
  return cards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::cards_data >&
packetl2c_game_start::cards() const {
  return cards_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::cards_data >*
packetl2c_game_start::mutable_cards() {
  return &cards_;
}

// -------------------------------------------------------------------

// packetl2c_operate_notify

// optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_operate_notify];
inline bool packetl2c_operate_notify::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_operate_notify::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_operate_notify::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_operate_notify::clear_packet_id() {
  packet_id_ = 15015;
  clear_has_packet_id();
}
inline ::game_shi_san_shui_protocols::e_server_msg_type packetl2c_operate_notify::packet_id() const {
  return static_cast< ::game_shi_san_shui_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_operate_notify::set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value) {
  assert(::game_shi_san_shui_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 chair_idx = 2;
inline bool packetl2c_operate_notify::has_chair_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_operate_notify::set_has_chair_idx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_operate_notify::clear_has_chair_idx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_operate_notify::clear_chair_idx() {
  chair_idx_ = 0;
  clear_has_chair_idx();
}
inline ::google::protobuf::int32 packetl2c_operate_notify::chair_idx() const {
  return chair_idx_;
}
inline void packetl2c_operate_notify::set_chair_idx(::google::protobuf::int32 value) {
  set_has_chair_idx();
  chair_idx_ = value;
}

// -------------------------------------------------------------------

// packetc2l_operate_card

// optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_operate_card];
inline bool packetc2l_operate_card::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_operate_card::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_operate_card::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_operate_card::clear_packet_id() {
  packet_id_ = 10014;
  clear_has_packet_id();
}
inline ::game_shi_san_shui_protocols::e_server_msg_type packetc2l_operate_card::packet_id() const {
  return static_cast< ::game_shi_san_shui_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_operate_card::set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value) {
  assert(::game_shi_san_shui_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// repeated int32 cards = 2;
inline int packetc2l_operate_card::cards_size() const {
  return cards_.size();
}
inline void packetc2l_operate_card::clear_cards() {
  cards_.Clear();
}
inline ::google::protobuf::int32 packetc2l_operate_card::cards(int index) const {
  return cards_.Get(index);
}
inline void packetc2l_operate_card::set_cards(int index, ::google::protobuf::int32 value) {
  cards_.Set(index, value);
}
inline void packetc2l_operate_card::add_cards(::google::protobuf::int32 value) {
  cards_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
packetc2l_operate_card::cards() const {
  return cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
packetc2l_operate_card::mutable_cards() {
  return &cards_;
}

// -------------------------------------------------------------------

// packetl2c_game_end

// optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_game_end];
inline bool packetl2c_game_end::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_game_end::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_game_end::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_game_end::clear_packet_id() {
  packet_id_ = 15016;
  clear_has_packet_id();
}
inline ::game_shi_san_shui_protocols::e_server_msg_type packetl2c_game_end::packet_id() const {
  return static_cast< ::game_shi_san_shui_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_game_end::set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value) {
  assert(::game_shi_san_shui_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// repeated .game_shi_san_shui_protocols.win_result win = 2;
inline int packetl2c_game_end::win_size() const {
  return win_.size();
}
inline void packetl2c_game_end::clear_win() {
  win_.Clear();
}
inline const ::game_shi_san_shui_protocols::win_result& packetl2c_game_end::win(int index) const {
  return win_.Get(index);
}
inline ::game_shi_san_shui_protocols::win_result* packetl2c_game_end::mutable_win(int index) {
  return win_.Mutable(index);
}
inline ::game_shi_san_shui_protocols::win_result* packetl2c_game_end::add_win() {
  return win_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::win_result >&
packetl2c_game_end::win() const {
  return win_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::win_result >*
packetl2c_game_end::mutable_win() {
  return &win_;
}

// -------------------------------------------------------------------

// packetl2c_game_notify

// optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_game_notify];
inline bool packetl2c_game_notify::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_game_notify::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_game_notify::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_game_notify::clear_packet_id() {
  packet_id_ = 15018;
  clear_has_packet_id();
}
inline ::game_shi_san_shui_protocols::e_server_msg_type packetl2c_game_notify::packet_id() const {
  return static_cast< ::game_shi_san_shui_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_game_notify::set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value) {
  assert(::game_shi_san_shui_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional .game_shi_san_shui_protocols.e_notify_type notify_type = 2;
inline bool packetl2c_game_notify::has_notify_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetl2c_game_notify::set_has_notify_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetl2c_game_notify::clear_has_notify_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetl2c_game_notify::clear_notify_type() {
  notify_type_ = 1;
  clear_has_notify_type();
}
inline ::game_shi_san_shui_protocols::e_notify_type packetl2c_game_notify::notify_type() const {
  return static_cast< ::game_shi_san_shui_protocols::e_notify_type >(notify_type_);
}
inline void packetl2c_game_notify::set_notify_type(::game_shi_san_shui_protocols::e_notify_type value) {
  assert(::game_shi_san_shui_protocols::e_notify_type_IsValid(value));
  set_has_notify_type();
  notify_type_ = value;
}

// optional int32 notify_param = 3;
inline bool packetl2c_game_notify::has_notify_param() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetl2c_game_notify::set_has_notify_param() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetl2c_game_notify::clear_has_notify_param() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetl2c_game_notify::clear_notify_param() {
  notify_param_ = 0;
  clear_has_notify_param();
}
inline ::google::protobuf::int32 packetl2c_game_notify::notify_param() const {
  return notify_param_;
}
inline void packetl2c_game_notify::set_notify_param(::google::protobuf::int32 value) {
  set_has_notify_param();
  notify_param_ = value;
}

// -------------------------------------------------------------------

// gm_player_info

// optional int32 player_id = 1;
inline bool gm_player_info::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gm_player_info::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gm_player_info::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gm_player_info::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 gm_player_info::player_id() const {
  return player_id_;
}
inline void gm_player_info::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional string player_name = 2;
inline bool gm_player_info::has_player_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gm_player_info::set_has_player_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gm_player_info::clear_has_player_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gm_player_info::clear_player_name() {
  if (player_name_ != &::google::protobuf::internal::kEmptyString) {
    player_name_->clear();
  }
  clear_has_player_name();
}
inline const ::std::string& gm_player_info::player_name() const {
  return *player_name_;
}
inline void gm_player_info::set_player_name(const ::std::string& value) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::kEmptyString) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(value);
}
inline void gm_player_info::set_player_name(const char* value) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::kEmptyString) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(value);
}
inline void gm_player_info::set_player_name(const char* value, size_t size) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::kEmptyString) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* gm_player_info::mutable_player_name() {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::kEmptyString) {
    player_name_ = new ::std::string;
  }
  return player_name_;
}
inline ::std::string* gm_player_info::release_player_name() {
  clear_has_player_name();
  if (player_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = player_name_;
    player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void gm_player_info::set_allocated_player_name(::std::string* player_name) {
  if (player_name_ != &::google::protobuf::internal::kEmptyString) {
    delete player_name_;
  }
  if (player_name) {
    set_has_player_name();
    player_name_ = player_name;
  } else {
    clear_has_player_name();
    player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 player_gold = 3;
inline bool gm_player_info::has_player_gold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gm_player_info::set_has_player_gold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gm_player_info::clear_has_player_gold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gm_player_info::clear_player_gold() {
  player_gold_ = GOOGLE_LONGLONG(0);
  clear_has_player_gold();
}
inline ::google::protobuf::int64 gm_player_info::player_gold() const {
  return player_gold_;
}
inline void gm_player_info::set_player_gold(::google::protobuf::int64 value) {
  set_has_player_gold();
  player_gold_ = value;
}

// optional int32 player_room = 4;
inline bool gm_player_info::has_player_room() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void gm_player_info::set_has_player_room() {
  _has_bits_[0] |= 0x00000008u;
}
inline void gm_player_info::clear_has_player_room() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void gm_player_info::clear_player_room() {
  player_room_ = 0;
  clear_has_player_room();
}
inline ::google::protobuf::int32 gm_player_info::player_room() const {
  return player_room_;
}
inline void gm_player_info::set_player_room(::google::protobuf::int32 value) {
  set_has_player_room();
  player_room_ = value;
}

// optional int64 player_profit = 5;
inline bool gm_player_info::has_player_profit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void gm_player_info::set_has_player_profit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void gm_player_info::clear_has_player_profit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void gm_player_info::clear_player_profit() {
  player_profit_ = GOOGLE_LONGLONG(0);
  clear_has_player_profit();
}
inline ::google::protobuf::int64 gm_player_info::player_profit() const {
  return player_profit_;
}
inline void gm_player_info::set_player_profit(::google::protobuf::int64 value) {
  set_has_player_profit();
  player_profit_ = value;
}

// optional int64 player_kill_type = 6;
inline bool gm_player_info::has_player_kill_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void gm_player_info::set_has_player_kill_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void gm_player_info::clear_has_player_kill_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void gm_player_info::clear_player_kill_type() {
  player_kill_type_ = GOOGLE_LONGLONG(0);
  clear_has_player_kill_type();
}
inline ::google::protobuf::int64 gm_player_info::player_kill_type() const {
  return player_kill_type_;
}
inline void gm_player_info::set_player_kill_type(::google::protobuf::int64 value) {
  set_has_player_kill_type();
  player_kill_type_ = value;
}

// optional int64 player_kill_cnt = 7;
inline bool gm_player_info::has_player_kill_cnt() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void gm_player_info::set_has_player_kill_cnt() {
  _has_bits_[0] |= 0x00000040u;
}
inline void gm_player_info::clear_has_player_kill_cnt() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void gm_player_info::clear_player_kill_cnt() {
  player_kill_cnt_ = GOOGLE_LONGLONG(0);
  clear_has_player_kill_cnt();
}
inline ::google::protobuf::int64 gm_player_info::player_kill_cnt() const {
  return player_kill_cnt_;
}
inline void gm_player_info::set_player_kill_cnt(::google::protobuf::int64 value) {
  set_has_player_kill_cnt();
  player_kill_cnt_ = value;
}

// -------------------------------------------------------------------

// packetc2l_gm_list

// optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_gm_list];
inline bool packetc2l_gm_list::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_gm_list::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_gm_list::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_gm_list::clear_packet_id() {
  packet_id_ = 10015;
  clear_has_packet_id();
}
inline ::game_shi_san_shui_protocols::e_server_msg_type packetc2l_gm_list::packet_id() const {
  return static_cast< ::game_shi_san_shui_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_gm_list::set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value) {
  assert(::game_shi_san_shui_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 hours = 2;
inline bool packetc2l_gm_list::has_hours() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetc2l_gm_list::set_has_hours() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetc2l_gm_list::clear_has_hours() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetc2l_gm_list::clear_hours() {
  hours_ = 0;
  clear_has_hours();
}
inline ::google::protobuf::int32 packetc2l_gm_list::hours() const {
  return hours_;
}
inline void packetc2l_gm_list::set_hours(::google::protobuf::int32 value) {
  set_has_hours();
  hours_ = value;
}

// -------------------------------------------------------------------

// gm_room_info

// optional int32 id = 1;
inline bool gm_room_info::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void gm_room_info::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void gm_room_info::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void gm_room_info::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 gm_room_info::id() const {
  return id_;
}
inline void gm_room_info::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 player_fee = 2;
inline bool gm_room_info::has_player_fee() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void gm_room_info::set_has_player_fee() {
  _has_bits_[0] |= 0x00000002u;
}
inline void gm_room_info::clear_has_player_fee() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void gm_room_info::clear_player_fee() {
  player_fee_ = 0;
  clear_has_player_fee();
}
inline ::google::protobuf::int32 gm_room_info::player_fee() const {
  return player_fee_;
}
inline void gm_room_info::set_player_fee(::google::protobuf::int32 value) {
  set_has_player_fee();
  player_fee_ = value;
}

// optional int64 player_win = 3;
inline bool gm_room_info::has_player_win() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void gm_room_info::set_has_player_win() {
  _has_bits_[0] |= 0x00000004u;
}
inline void gm_room_info::clear_has_player_win() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void gm_room_info::clear_player_win() {
  player_win_ = GOOGLE_LONGLONG(0);
  clear_has_player_win();
}
inline ::google::protobuf::int64 gm_room_info::player_win() const {
  return player_win_;
}
inline void gm_room_info::set_player_win(::google::protobuf::int64 value) {
  set_has_player_win();
  player_win_ = value;
}

// -------------------------------------------------------------------

// packetl2c_gm_list

// optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_gm_list];
inline bool packetl2c_gm_list::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetl2c_gm_list::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetl2c_gm_list::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetl2c_gm_list::clear_packet_id() {
  packet_id_ = 15019;
  clear_has_packet_id();
}
inline ::game_shi_san_shui_protocols::e_server_msg_type packetl2c_gm_list::packet_id() const {
  return static_cast< ::game_shi_san_shui_protocols::e_server_msg_type >(packet_id_);
}
inline void packetl2c_gm_list::set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value) {
  assert(::game_shi_san_shui_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// repeated .game_shi_san_shui_protocols.gm_player_info players = 2;
inline int packetl2c_gm_list::players_size() const {
  return players_.size();
}
inline void packetl2c_gm_list::clear_players() {
  players_.Clear();
}
inline const ::game_shi_san_shui_protocols::gm_player_info& packetl2c_gm_list::players(int index) const {
  return players_.Get(index);
}
inline ::game_shi_san_shui_protocols::gm_player_info* packetl2c_gm_list::mutable_players(int index) {
  return players_.Mutable(index);
}
inline ::game_shi_san_shui_protocols::gm_player_info* packetl2c_gm_list::add_players() {
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::gm_player_info >&
packetl2c_gm_list::players() const {
  return players_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::gm_player_info >*
packetl2c_gm_list::mutable_players() {
  return &players_;
}

// repeated .game_shi_san_shui_protocols.gm_room_info rooms = 3;
inline int packetl2c_gm_list::rooms_size() const {
  return rooms_.size();
}
inline void packetl2c_gm_list::clear_rooms() {
  rooms_.Clear();
}
inline const ::game_shi_san_shui_protocols::gm_room_info& packetl2c_gm_list::rooms(int index) const {
  return rooms_.Get(index);
}
inline ::game_shi_san_shui_protocols::gm_room_info* packetl2c_gm_list::mutable_rooms(int index) {
  return rooms_.Mutable(index);
}
inline ::game_shi_san_shui_protocols::gm_room_info* packetl2c_gm_list::add_rooms() {
  return rooms_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::gm_room_info >&
packetl2c_gm_list::rooms() const {
  return rooms_;
}
inline ::google::protobuf::RepeatedPtrField< ::game_shi_san_shui_protocols::gm_room_info >*
packetl2c_gm_list::mutable_rooms() {
  return &rooms_;
}

// -------------------------------------------------------------------

// packetc2l_gm_kill

// optional .game_shi_san_shui_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_gm_kill];
inline bool packetc2l_gm_kill::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2l_gm_kill::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2l_gm_kill::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2l_gm_kill::clear_packet_id() {
  packet_id_ = 10016;
  clear_has_packet_id();
}
inline ::game_shi_san_shui_protocols::e_server_msg_type packetc2l_gm_kill::packet_id() const {
  return static_cast< ::game_shi_san_shui_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2l_gm_kill::set_packet_id(::game_shi_san_shui_protocols::e_server_msg_type value) {
  assert(::game_shi_san_shui_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 player_id = 2;
inline bool packetc2l_gm_kill::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetc2l_gm_kill::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetc2l_gm_kill::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetc2l_gm_kill::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 packetc2l_gm_kill::player_id() const {
  return player_id_;
}
inline void packetc2l_gm_kill::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional int32 kill_type = 3;
inline bool packetc2l_gm_kill::has_kill_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetc2l_gm_kill::set_has_kill_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetc2l_gm_kill::clear_has_kill_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetc2l_gm_kill::clear_kill_type() {
  kill_type_ = 0;
  clear_has_kill_type();
}
inline ::google::protobuf::int32 packetc2l_gm_kill::kill_type() const {
  return kill_type_;
}
inline void packetc2l_gm_kill::set_kill_type(::google::protobuf::int32 value) {
  set_has_kill_type();
  kill_type_ = value;
}

// optional int32 kill_cnt = 4;
inline bool packetc2l_gm_kill::has_kill_cnt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void packetc2l_gm_kill::set_has_kill_cnt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void packetc2l_gm_kill::clear_has_kill_cnt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void packetc2l_gm_kill::clear_kill_cnt() {
  kill_cnt_ = 0;
  clear_has_kill_cnt();
}
inline ::google::protobuf::int32 packetc2l_gm_kill::kill_cnt() const {
  return kill_cnt_;
}
inline void packetc2l_gm_kill::set_kill_cnt(::google::protobuf::int32 value) {
  set_has_kill_cnt();
  kill_cnt_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace game_shi_san_shui_protocols

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_game_5fshi_5fsan_5fshui_5fprotocol_2eproto__INCLUDED
