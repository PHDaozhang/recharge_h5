// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pump_type.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "pump_type.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::EnumDescriptor* PropertyReasonType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_pump_5ftype_2eproto() {
  protobuf_AddDesc_pump_5ftype_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "pump_type.proto");
  GOOGLE_CHECK(file != NULL);
  PropertyReasonType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_pump_5ftype_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_pump_5ftype_2eproto() {
}

void protobuf_AddDesc_pump_5ftype_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017pump_type.proto*\270\r\n\022PropertyReasonType"
    "\022\031\n\014type_default\020\377\377\377\377\377\377\377\377\377\001\022\034\n\030type_reas"
    "on_dial_lottery\020\001\022\035\n\031type_reason_online_"
    "reward\020\002\022\037\n\033type_reason_deposit_safebox\020"
    "\003\022\034\n\030type_reason_draw_safebox\020\004\022\031\n\025type_"
    "reason_send_gift\020\005\022\033\n\027type_reason_accept"
    "_gift\020\006\022\035\n\031type_reason_player_notify\020\007\022\030"
    "\n\024type_reason_exchange\020\010\022\"\n\036type_reason_"
    "buy_commodity_gain\020\t\022\034\n\030type_reason_rece"
    "ive_alms\020\n\022$\n type_reason_single_round_b"
    "alance\020\013\022$\n type_reason_buy_commodity_ex"
    "pend\020\014\022\035\n\031type_reason_buy_fishlevel\020\r\022\034\n"
    "\030type_reason_buy_fishitem\020\016\022\034\n\030type_reas"
    "on_fish_uplevel\020\017\022\031\n\025type_reason_new_gui"
    "ld\020\020\022\033\n\027type_reason_update_icon\020\021\022\030\n\024typ"
    "e_reason_recharge\020\022\022\037\n\033type_reason_modif"
    "y_nickname\020\023\022\035\n\031type_reason_recharge_sen"
    "d\020\024\022\033\n\027type_reason_gm_recharge\020\025\022 \n\034type"
    "_reason_gm_recharge_send\020\026\022%\n!type_reaso"
    "n_month_card_daily_recv\020\027\022\035\n\031type_reason"
    "_recharge_gift\020\030\022\032\n\026type_reason_daily_si"
    "gn\020\031\022!\n\035type_reason_daily_box_lottery\020\032\022"
    "\"\n\036type_reason_thank_you_exchange\020\033\022\'\n#t"
    "ype_reason_continuous_send_speaker\020\034\022\034\n\030"
    "type_reason_receive_mail\020\035\022\035\n\031type_reaso"
    "n_fishlord_drop\020\036\022\036\n\032type_reason_create_"
    "account\020\037\022\'\n#type_reason_receive_activit"
    "y_reward\020 \022\032\n\026type_reason_rob_banker\020!\022\034"
    "\n\030type_reason_leave_banker\020\"\022\031\n\025type_rea"
    "son_use_skill\020#\022\033\n\027type_reason_double_ga"
    "me\020$\022\032\n\026type_reason_dragons_lv\020%\022\032\n\026type"
    "_reason_star_award\020&\022\034\n\030type_reason_star"
    "_lottery\020\'\022\032\n\026type_reason_new_player\020(\022\032"
    "\n\026type_reason_daily_task\020)\022\033\n\027type_reaso"
    "n_achievement\020*\022\027\n\023type_reason_missile\020+"
    "\022 \n\034type_reason_recharge_lottery\020,\022\030\n\024ty"
    "pe_reason_shopping\020-\022\020\n\014cdk_exchange\020.\022\037"
    "\n\033type_reason_alipay_transfer\020/\022&\n\"type_"
    "reason_alipay_transfer_return\0200\022\033\n\027type_"
    "reason_bind_reward\0201\022\034\n\030type_reason_shar"
    "e_reward\0202\022\037\n\033type_reason_sevenday_rewar"
    "d\0203\022\036\n\032type_reason_inviter_reward\0204\022 \n\034t"
    "ype_reason_inviter_ranklist\0205\022\035\n\031type_re"
    "ason_banker_settle\0206", 1740);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "pump_type.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_pump_5ftype_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_pump_5ftype_2eproto {
  StaticDescriptorInitializer_pump_5ftype_2eproto() {
    protobuf_AddDesc_pump_5ftype_2eproto();
  }
} static_descriptor_initializer_pump_5ftype_2eproto_;
const ::google::protobuf::EnumDescriptor* PropertyReasonType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PropertyReasonType_descriptor_;
}
bool PropertyReasonType_IsValid(int value) {
  switch(value) {
    case -1:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
