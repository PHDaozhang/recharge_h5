// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_calfRoping_def.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "game_calfRoping_def.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace game_calfRoping_protocols {

namespace {

const ::google::protobuf::EnumDescriptor* e_server_msg_type_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_game_5fcalfRoping_5fdef_2eproto() {
  protobuf_AddDesc_game_5fcalfRoping_5fdef_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "game_calfRoping_def.proto");
  GOOGLE_CHECK(file != NULL);
  e_server_msg_type_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_game_5fcalfRoping_5fdef_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_game_5fcalfRoping_5fdef_2eproto() {
}

void protobuf_AddDesc_game_5fcalfRoping_5fdef_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\031game_calfRoping_def.proto\022\031game_calfRo"
    "ping_protocols*\322\005\n\021e_server_msg_type\022\024\n\017"
    "e_mst_start_c2l\020\220N\022\036\n\031e_mst_c2l_get_play"
    "er_info\020\221N\022\035\n\030e_mst_c2l_req_start_game\020\222"
    "N\022\027\n\022e_mst_c2l_req_pass\020\223N\022\027\n\022e_mst_c2l_"
    "req_miss\020\224N\022\032\n\025e_mst_c2l_req_buylife\020\225N\022"
    "\030\n\023e_mst_c2l_req_pause\020\226N\022\033\n\026e_mst_c2l_r"
    "eq_continue\020\227N\022\031\n\024e_mst_c2l_req_reward\020\230"
    "N\022\035\n\030e_mst_c2l_req_leave_game\020\231N\022\035\n\030e_ms"
    "t_c2l_req_begin_pass\020\232N\022\036\n\031e_mst_c2l_req"
    "_go_to_lobby\020\233N\022\024\n\017e_mst_start_l2c\020\230u\022\036\n"
    "\031e_mst_l2c_get_player_info\020\231u\022\035\n\030e_mst_l"
    "2c_req_start_game\020\232u\022\027\n\022e_mst_l2c_req_pa"
    "ss\020\233u\022\027\n\022e_mst_12c_req_miss\020\234u\022\032\n\025e_mst_"
    "l2c_req_buylife\020\235u\022\030\n\023e_mst_l2c_req_paus"
    "e\020\236u\022\033\n\026e_mst_l2c_req_continue\020\237u\022\031\n\024e_m"
    "st_l2c_req_reward\020\240u\022\035\n\030e_mst_l2c_req_le"
    "ave_game\020\241u\022\035\n\030e_mst_l2c_req_begin_pass\020"
    "\242u\022\036\n\031e_mst_l2c_req_go_to_lobby\020\243u\022\027\n\021e_"
    "mst_clend_index\020\240\234\001", 779);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "game_calfRoping_def.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_game_5fcalfRoping_5fdef_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_game_5fcalfRoping_5fdef_2eproto {
  StaticDescriptorInitializer_game_5fcalfRoping_5fdef_2eproto() {
    protobuf_AddDesc_game_5fcalfRoping_5fdef_2eproto();
  }
} static_descriptor_initializer_game_5fcalfRoping_5fdef_2eproto_;
const ::google::protobuf::EnumDescriptor* e_server_msg_type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_server_msg_type_descriptor_;
}
bool e_server_msg_type_IsValid(int value) {
  switch(value) {
    case 10000:
    case 10001:
    case 10002:
    case 10003:
    case 10004:
    case 10005:
    case 10006:
    case 10007:
    case 10008:
    case 10009:
    case 10010:
    case 10011:
    case 15000:
    case 15001:
    case 15002:
    case 15003:
    case 15004:
    case 15005:
    case 15006:
    case 15007:
    case 15008:
    case 15009:
    case 15010:
    case 15011:
    case 20000:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace game_calfRoping_protocols

// @@protoc_insertion_point(global_scope)
