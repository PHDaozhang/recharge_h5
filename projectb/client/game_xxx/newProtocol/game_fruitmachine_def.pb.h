// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_fruitmachine_def.proto

#ifndef PROTOBUF_game_5ffruitmachine_5fdef_2eproto__INCLUDED
#define PROTOBUF_game_5ffruitmachine_5fdef_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace game_fruitmachine_protocols {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_game_5ffruitmachine_5fdef_2eproto();
void protobuf_AssignDesc_game_5ffruitmachine_5fdef_2eproto();
void protobuf_ShutdownFile_game_5ffruitmachine_5fdef_2eproto();

class msg_bet_info;
class msg_result_index;

enum e_server_msg_type {
  e_mst_start_c2l = 10000,
  e_mst_c2l_get_room_info = 10001,
  e_mst_c2l_enter_room = 10002,
  e_mst_c2l_leave_room = 10003,
  e_mst_c2l_add_bet = 10004,
  e_mst_c2l_repeat_bet = 10005,
  e_mst_c2l_get_room_scene_info = 10007,
  e_mst_c2l_check_state = 10008,
  e_mst_c2l_gm = 10009,
  e_mst_c2l_start_game = 10010,
  e_mst_c2l_start_bigsmall = 10011,
  e_mst_c2l_break_bigsmall = 10012,
  e_mst_c2l_cancel_bet = 10013,
  e_mst_c2l_debug = 10014,
  e_mst_start_l2c = 15000,
  e_mst_l2c_get_room_info_result = 15001,
  e_mst_l2c_enter_room_result = 15002,
  e_mst_l2c_leave_room_result = 15003,
  e_mst_l2c_add_bet = 15004,
  e_mst_l2c_repeat_bet = 15005,
  e_mst_l2c_get_room_scene_info = 15010,
  e_mst_l2c_check_state_result = 15013,
  e_mst_l2c_start_game = 15014,
  e_mst_l2c_start_bigsmall = 15015,
  e_mst_l2c_break_bigsmall_result = 15016,
  e_mst_l2c_cancel_bet_result = 15017,
  e_mst_l2c_notify_water = 15018,
  e_mst_l2c_player_list = 15019,
  e_mst_l2c_debug_result = 15020,
  e_mst_clend_index = 20000
};
bool e_server_msg_type_IsValid(int value);
const e_server_msg_type e_server_msg_type_MIN = e_mst_start_c2l;
const e_server_msg_type e_server_msg_type_MAX = e_mst_clend_index;
const int e_server_msg_type_ARRAYSIZE = e_server_msg_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* e_server_msg_type_descriptor();
inline const ::std::string& e_server_msg_type_Name(e_server_msg_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    e_server_msg_type_descriptor(), value);
}
inline bool e_server_msg_type_Parse(
    const ::std::string& name, e_server_msg_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<e_server_msg_type>(
    e_server_msg_type_descriptor(), name, value);
}
enum e_game_state {
  e_state_game_wait = 0,
  e_state_game_bigsmall = 1
};
bool e_game_state_IsValid(int value);
const e_game_state e_game_state_MIN = e_state_game_wait;
const e_game_state e_game_state_MAX = e_state_game_bigsmall;
const int e_game_state_ARRAYSIZE = e_game_state_MAX + 1;

const ::google::protobuf::EnumDescriptor* e_game_state_descriptor();
inline const ::std::string& e_game_state_Name(e_game_state value) {
  return ::google::protobuf::internal::NameOfEnum(
    e_game_state_descriptor(), value);
}
inline bool e_game_state_Parse(
    const ::std::string& name, e_game_state* value) {
  return ::google::protobuf::internal::ParseNamedEnum<e_game_state>(
    e_game_state_descriptor(), name, value);
}
// ===================================================================

class msg_bet_info : public ::google::protobuf::Message {
 public:
  msg_bet_info();
  virtual ~msg_bet_info();

  msg_bet_info(const msg_bet_info& from);

  inline msg_bet_info& operator=(const msg_bet_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_bet_info& default_instance();

  void Swap(msg_bet_info* other);

  // implements Message ----------------------------------------------

  msg_bet_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_bet_info& from);
  void MergeFrom(const msg_bet_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 bet_index = 1;
  inline bool has_bet_index() const;
  inline void clear_bet_index();
  static const int kBetIndexFieldNumber = 1;
  inline ::google::protobuf::int32 bet_index() const;
  inline void set_bet_index(::google::protobuf::int32 value);

  // optional int32 bet_count = 2;
  inline bool has_bet_count() const;
  inline void clear_bet_count();
  static const int kBetCountFieldNumber = 2;
  inline ::google::protobuf::int32 bet_count() const;
  inline void set_bet_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_fruitmachine_protocols.msg_bet_info)
 private:
  inline void set_has_bet_index();
  inline void clear_has_bet_index();
  inline void set_has_bet_count();
  inline void clear_has_bet_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 bet_index_;
  ::google::protobuf::int32 bet_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5ffruitmachine_5fdef_2eproto();
  friend void protobuf_AssignDesc_game_5ffruitmachine_5fdef_2eproto();
  friend void protobuf_ShutdownFile_game_5ffruitmachine_5fdef_2eproto();

  void InitAsDefaultInstance();
  static msg_bet_info* default_instance_;
};
// -------------------------------------------------------------------

class msg_result_index : public ::google::protobuf::Message {
 public:
  msg_result_index();
  virtual ~msg_result_index();

  msg_result_index(const msg_result_index& from);

  inline msg_result_index& operator=(const msg_result_index& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_result_index& default_instance();

  void Swap(msg_result_index* other);

  // implements Message ----------------------------------------------

  msg_result_index* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_result_index& from);
  void MergeFrom(const msg_result_index& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:game_fruitmachine_protocols.msg_result_index)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_game_5ffruitmachine_5fdef_2eproto();
  friend void protobuf_AssignDesc_game_5ffruitmachine_5fdef_2eproto();
  friend void protobuf_ShutdownFile_game_5ffruitmachine_5fdef_2eproto();

  void InitAsDefaultInstance();
  static msg_result_index* default_instance_;
};
// ===================================================================


// ===================================================================

// msg_bet_info

// optional int32 bet_index = 1;
inline bool msg_bet_info::has_bet_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_bet_info::set_has_bet_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_bet_info::clear_has_bet_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_bet_info::clear_bet_index() {
  bet_index_ = 0;
  clear_has_bet_index();
}
inline ::google::protobuf::int32 msg_bet_info::bet_index() const {
  return bet_index_;
}
inline void msg_bet_info::set_bet_index(::google::protobuf::int32 value) {
  set_has_bet_index();
  bet_index_ = value;
}

// optional int32 bet_count = 2;
inline bool msg_bet_info::has_bet_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_bet_info::set_has_bet_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_bet_info::clear_has_bet_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_bet_info::clear_bet_count() {
  bet_count_ = 0;
  clear_has_bet_count();
}
inline ::google::protobuf::int32 msg_bet_info::bet_count() const {
  return bet_count_;
}
inline void msg_bet_info::set_bet_count(::google::protobuf::int32 value) {
  set_has_bet_count();
  bet_count_ = value;
}

// -------------------------------------------------------------------

// msg_result_index

// optional int32 id = 1;
inline bool msg_result_index::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_result_index::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_result_index::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_result_index::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 msg_result_index::id() const {
  return id_;
}
inline void msg_result_index::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 count = 2;
inline bool msg_result_index::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_result_index::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_result_index::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_result_index::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 msg_result_index::count() const {
  return count_;
}
inline void msg_result_index::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace game_fruitmachine_protocols

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::game_fruitmachine_protocols::e_server_msg_type>() {
  return ::game_fruitmachine_protocols::e_server_msg_type_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::game_fruitmachine_protocols::e_game_state>() {
  return ::game_fruitmachine_protocols::e_game_state_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_game_5ffruitmachine_5fdef_2eproto__INCLUDED
