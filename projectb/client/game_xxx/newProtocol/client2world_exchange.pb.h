// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2world_exchange.proto

#ifndef PROTOBUF_client2world_5fexchange_2eproto__INCLUDED
#define PROTOBUF_client2world_5fexchange_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "client2world_msg_type.pb.h"
#include "msg_type_def.pb.h"
#include "msg_info_def.pb.h"
// @@protoc_insertion_point(includes)

namespace client2world_protocols {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_client2world_5fexchange_2eproto();
void protobuf_AssignDesc_client2world_5fexchange_2eproto();
void protobuf_ShutdownFile_client2world_5fexchange_2eproto();

class agency_info;
class packetc2w_agency;
class packetw2c_agency_result;
class payopen_info;
class packetc2w_askPayopen;
class packetw2c_askPayopen_result;

// ===================================================================

class agency_info : public ::google::protobuf::Message {
 public:
  agency_info();
  virtual ~agency_info();

  agency_info(const agency_info& from);

  inline agency_info& operator=(const agency_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const agency_info& default_instance();

  void Swap(agency_info* other);

  // implements Message ----------------------------------------------

  agency_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const agency_info& from);
  void MergeFrom(const agency_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 agencyName = 1;
  inline bool has_agencyname() const;
  inline void clear_agencyname();
  static const int kAgencyNameFieldNumber = 1;
  inline ::google::protobuf::int32 agencyname() const;
  inline void set_agencyname(::google::protobuf::int32 value);

  // optional int32 agencyType = 2;
  inline bool has_agencytype() const;
  inline void clear_agencytype();
  static const int kAgencyTypeFieldNumber = 2;
  inline ::google::protobuf::int32 agencytype() const;
  inline void set_agencytype(::google::protobuf::int32 value);

  // optional string agencyMsg = 3;
  inline bool has_agencymsg() const;
  inline void clear_agencymsg();
  static const int kAgencyMsgFieldNumber = 3;
  inline const ::std::string& agencymsg() const;
  inline void set_agencymsg(const ::std::string& value);
  inline void set_agencymsg(const char* value);
  inline void set_agencymsg(const char* value, size_t size);
  inline ::std::string* mutable_agencymsg();
  inline ::std::string* release_agencymsg();
  inline void set_allocated_agencymsg(::std::string* agencymsg);

  // @@protoc_insertion_point(class_scope:client2world_protocols.agency_info)
 private:
  inline void set_has_agencyname();
  inline void clear_has_agencyname();
  inline void set_has_agencytype();
  inline void clear_has_agencytype();
  inline void set_has_agencymsg();
  inline void clear_has_agencymsg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 agencyname_;
  ::google::protobuf::int32 agencytype_;
  ::std::string* agencymsg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fexchange_2eproto();
  friend void protobuf_AssignDesc_client2world_5fexchange_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fexchange_2eproto();

  void InitAsDefaultInstance();
  static agency_info* default_instance_;
};
// -------------------------------------------------------------------

class packetc2w_agency : public ::google::protobuf::Message {
 public:
  packetc2w_agency();
  virtual ~packetc2w_agency();

  packetc2w_agency(const packetc2w_agency& from);

  inline packetc2w_agency& operator=(const packetc2w_agency& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2w_agency& default_instance();

  void Swap(packetc2w_agency* other);

  // implements Message ----------------------------------------------

  packetc2w_agency* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2w_agency& from);
  void MergeFrom(const packetc2w_agency& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_agency];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetc2w_agency)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fexchange_2eproto();
  friend void protobuf_AssignDesc_client2world_5fexchange_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fexchange_2eproto();

  void InitAsDefaultInstance();
  static packetc2w_agency* default_instance_;
};
// -------------------------------------------------------------------

class packetw2c_agency_result : public ::google::protobuf::Message {
 public:
  packetw2c_agency_result();
  virtual ~packetw2c_agency_result();

  packetw2c_agency_result(const packetw2c_agency_result& from);

  inline packetw2c_agency_result& operator=(const packetw2c_agency_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetw2c_agency_result& default_instance();

  void Swap(packetw2c_agency_result* other);

  // implements Message ----------------------------------------------

  packetw2c_agency_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetw2c_agency_result& from);
  void MergeFrom(const packetw2c_agency_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_agency_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // repeated .client2world_protocols.agency_info info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::client2world_protocols::agency_info& info(int index) const;
  inline ::client2world_protocols::agency_info* mutable_info(int index);
  inline ::client2world_protocols::agency_info* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::agency_info >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::agency_info >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetw2c_agency_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client2world_protocols::agency_info > info_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fexchange_2eproto();
  friend void protobuf_AssignDesc_client2world_5fexchange_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fexchange_2eproto();

  void InitAsDefaultInstance();
  static packetw2c_agency_result* default_instance_;
};
// -------------------------------------------------------------------

class payopen_info : public ::google::protobuf::Message {
 public:
  payopen_info();
  virtual ~payopen_info();

  payopen_info(const payopen_info& from);

  inline payopen_info& operator=(const payopen_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const payopen_info& default_instance();

  void Swap(payopen_info* other);

  // implements Message ----------------------------------------------

  payopen_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const payopen_info& from);
  void MergeFrom(const payopen_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional bool isopen = 2;
  inline bool has_isopen() const;
  inline void clear_isopen();
  static const int kIsopenFieldNumber = 2;
  inline bool isopen() const;
  inline void set_isopen(bool value);

  // optional bool ishot = 3;
  inline bool has_ishot() const;
  inline void clear_ishot();
  static const int kIshotFieldNumber = 3;
  inline bool ishot() const;
  inline void set_ishot(bool value);

  // optional int32 priority = 4;
  inline bool has_priority() const;
  inline void clear_priority();
  static const int kPriorityFieldNumber = 4;
  inline ::google::protobuf::int32 priority() const;
  inline void set_priority(::google::protobuf::int32 value);

  // optional string chipsValue = 5;
  inline bool has_chipsvalue() const;
  inline void clear_chipsvalue();
  static const int kChipsValueFieldNumber = 5;
  inline const ::std::string& chipsvalue() const;
  inline void set_chipsvalue(const ::std::string& value);
  inline void set_chipsvalue(const char* value);
  inline void set_chipsvalue(const char* value, size_t size);
  inline ::std::string* mutable_chipsvalue();
  inline ::std::string* release_chipsvalue();
  inline void set_allocated_chipsvalue(::std::string* chipsvalue);

  // optional int32 max_value_per_time = 6;
  inline bool has_max_value_per_time() const;
  inline void clear_max_value_per_time();
  static const int kMaxValuePerTimeFieldNumber = 6;
  inline ::google::protobuf::int32 max_value_per_time() const;
  inline void set_max_value_per_time(::google::protobuf::int32 value);

  // optional bool isshow = 7 [default = true];
  inline bool has_isshow() const;
  inline void clear_isshow();
  static const int kIsshowFieldNumber = 7;
  inline bool isshow() const;
  inline void set_isshow(bool value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.payopen_info)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_isopen();
  inline void clear_has_isopen();
  inline void set_has_ishot();
  inline void clear_has_ishot();
  inline void set_has_priority();
  inline void clear_has_priority();
  inline void set_has_chipsvalue();
  inline void clear_has_chipsvalue();
  inline void set_has_max_value_per_time();
  inline void clear_has_max_value_per_time();
  inline void set_has_isshow();
  inline void clear_has_isshow();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 priority_;
  bool isopen_;
  bool ishot_;
  bool isshow_;
  ::google::protobuf::int32 max_value_per_time_;
  ::std::string* chipsvalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fexchange_2eproto();
  friend void protobuf_AssignDesc_client2world_5fexchange_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fexchange_2eproto();

  void InitAsDefaultInstance();
  static payopen_info* default_instance_;
};
// -------------------------------------------------------------------

class packetc2w_askPayopen : public ::google::protobuf::Message {
 public:
  packetc2w_askPayopen();
  virtual ~packetc2w_askPayopen();

  packetc2w_askPayopen(const packetc2w_askPayopen& from);

  inline packetc2w_askPayopen& operator=(const packetc2w_askPayopen& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2w_askPayopen& default_instance();

  void Swap(packetc2w_askPayopen* other);

  // implements Message ----------------------------------------------

  packetc2w_askPayopen* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2w_askPayopen& from);
  void MergeFrom(const packetc2w_askPayopen& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_askPayopen];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetc2w_askPayopen)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fexchange_2eproto();
  friend void protobuf_AssignDesc_client2world_5fexchange_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fexchange_2eproto();

  void InitAsDefaultInstance();
  static packetc2w_askPayopen* default_instance_;
};
// -------------------------------------------------------------------

class packetw2c_askPayopen_result : public ::google::protobuf::Message {
 public:
  packetw2c_askPayopen_result();
  virtual ~packetw2c_askPayopen_result();

  packetw2c_askPayopen_result(const packetw2c_askPayopen_result& from);

  inline packetw2c_askPayopen_result& operator=(const packetw2c_askPayopen_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetw2c_askPayopen_result& default_instance();

  void Swap(packetw2c_askPayopen_result* other);

  // implements Message ----------------------------------------------

  packetw2c_askPayopen_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetw2c_askPayopen_result& from);
  void MergeFrom(const packetw2c_askPayopen_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_askPayopen_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // repeated .client2world_protocols.payopen_info info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::client2world_protocols::payopen_info& info(int index) const;
  inline ::client2world_protocols::payopen_info* mutable_info(int index);
  inline ::client2world_protocols::payopen_info* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::payopen_info >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::payopen_info >*
      mutable_info();

  // optional bool isAppStoreOpen = 3;
  inline bool has_isappstoreopen() const;
  inline void clear_isappstoreopen();
  static const int kIsAppStoreOpenFieldNumber = 3;
  inline bool isappstoreopen() const;
  inline void set_isappstoreopen(bool value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetw2c_askPayopen_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_isappstoreopen();
  inline void clear_has_isappstoreopen();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client2world_protocols::payopen_info > info_;
  int packet_id_;
  bool isappstoreopen_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fexchange_2eproto();
  friend void protobuf_AssignDesc_client2world_5fexchange_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fexchange_2eproto();

  void InitAsDefaultInstance();
  static packetw2c_askPayopen_result* default_instance_;
};
// ===================================================================


// ===================================================================

// agency_info

// optional int32 agencyName = 1;
inline bool agency_info::has_agencyname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void agency_info::set_has_agencyname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void agency_info::clear_has_agencyname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void agency_info::clear_agencyname() {
  agencyname_ = 0;
  clear_has_agencyname();
}
inline ::google::protobuf::int32 agency_info::agencyname() const {
  return agencyname_;
}
inline void agency_info::set_agencyname(::google::protobuf::int32 value) {
  set_has_agencyname();
  agencyname_ = value;
}

// optional int32 agencyType = 2;
inline bool agency_info::has_agencytype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void agency_info::set_has_agencytype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void agency_info::clear_has_agencytype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void agency_info::clear_agencytype() {
  agencytype_ = 0;
  clear_has_agencytype();
}
inline ::google::protobuf::int32 agency_info::agencytype() const {
  return agencytype_;
}
inline void agency_info::set_agencytype(::google::protobuf::int32 value) {
  set_has_agencytype();
  agencytype_ = value;
}

// optional string agencyMsg = 3;
inline bool agency_info::has_agencymsg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void agency_info::set_has_agencymsg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void agency_info::clear_has_agencymsg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void agency_info::clear_agencymsg() {
  if (agencymsg_ != &::google::protobuf::internal::kEmptyString) {
    agencymsg_->clear();
  }
  clear_has_agencymsg();
}
inline const ::std::string& agency_info::agencymsg() const {
  return *agencymsg_;
}
inline void agency_info::set_agencymsg(const ::std::string& value) {
  set_has_agencymsg();
  if (agencymsg_ == &::google::protobuf::internal::kEmptyString) {
    agencymsg_ = new ::std::string;
  }
  agencymsg_->assign(value);
}
inline void agency_info::set_agencymsg(const char* value) {
  set_has_agencymsg();
  if (agencymsg_ == &::google::protobuf::internal::kEmptyString) {
    agencymsg_ = new ::std::string;
  }
  agencymsg_->assign(value);
}
inline void agency_info::set_agencymsg(const char* value, size_t size) {
  set_has_agencymsg();
  if (agencymsg_ == &::google::protobuf::internal::kEmptyString) {
    agencymsg_ = new ::std::string;
  }
  agencymsg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* agency_info::mutable_agencymsg() {
  set_has_agencymsg();
  if (agencymsg_ == &::google::protobuf::internal::kEmptyString) {
    agencymsg_ = new ::std::string;
  }
  return agencymsg_;
}
inline ::std::string* agency_info::release_agencymsg() {
  clear_has_agencymsg();
  if (agencymsg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = agencymsg_;
    agencymsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void agency_info::set_allocated_agencymsg(::std::string* agencymsg) {
  if (agencymsg_ != &::google::protobuf::internal::kEmptyString) {
    delete agencymsg_;
  }
  if (agencymsg) {
    set_has_agencymsg();
    agencymsg_ = agencymsg;
  } else {
    clear_has_agencymsg();
    agencymsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// packetc2w_agency

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_agency];
inline bool packetc2w_agency::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2w_agency::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2w_agency::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2w_agency::clear_packet_id() {
  packet_id_ = 5074;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetc2w_agency::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2w_agency::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetw2c_agency_result

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_agency_result];
inline bool packetw2c_agency_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetw2c_agency_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetw2c_agency_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetw2c_agency_result::clear_packet_id() {
  packet_id_ = 7580;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetw2c_agency_result::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetw2c_agency_result::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// repeated .client2world_protocols.agency_info info = 2;
inline int packetw2c_agency_result::info_size() const {
  return info_.size();
}
inline void packetw2c_agency_result::clear_info() {
  info_.Clear();
}
inline const ::client2world_protocols::agency_info& packetw2c_agency_result::info(int index) const {
  return info_.Get(index);
}
inline ::client2world_protocols::agency_info* packetw2c_agency_result::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::client2world_protocols::agency_info* packetw2c_agency_result::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::agency_info >&
packetw2c_agency_result::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::agency_info >*
packetw2c_agency_result::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// payopen_info

// optional int32 type = 1;
inline bool payopen_info::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void payopen_info::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void payopen_info::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void payopen_info::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 payopen_info::type() const {
  return type_;
}
inline void payopen_info::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional bool isopen = 2;
inline bool payopen_info::has_isopen() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void payopen_info::set_has_isopen() {
  _has_bits_[0] |= 0x00000002u;
}
inline void payopen_info::clear_has_isopen() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void payopen_info::clear_isopen() {
  isopen_ = false;
  clear_has_isopen();
}
inline bool payopen_info::isopen() const {
  return isopen_;
}
inline void payopen_info::set_isopen(bool value) {
  set_has_isopen();
  isopen_ = value;
}

// optional bool ishot = 3;
inline bool payopen_info::has_ishot() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void payopen_info::set_has_ishot() {
  _has_bits_[0] |= 0x00000004u;
}
inline void payopen_info::clear_has_ishot() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void payopen_info::clear_ishot() {
  ishot_ = false;
  clear_has_ishot();
}
inline bool payopen_info::ishot() const {
  return ishot_;
}
inline void payopen_info::set_ishot(bool value) {
  set_has_ishot();
  ishot_ = value;
}

// optional int32 priority = 4;
inline bool payopen_info::has_priority() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void payopen_info::set_has_priority() {
  _has_bits_[0] |= 0x00000008u;
}
inline void payopen_info::clear_has_priority() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void payopen_info::clear_priority() {
  priority_ = 0;
  clear_has_priority();
}
inline ::google::protobuf::int32 payopen_info::priority() const {
  return priority_;
}
inline void payopen_info::set_priority(::google::protobuf::int32 value) {
  set_has_priority();
  priority_ = value;
}

// optional string chipsValue = 5;
inline bool payopen_info::has_chipsvalue() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void payopen_info::set_has_chipsvalue() {
  _has_bits_[0] |= 0x00000010u;
}
inline void payopen_info::clear_has_chipsvalue() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void payopen_info::clear_chipsvalue() {
  if (chipsvalue_ != &::google::protobuf::internal::kEmptyString) {
    chipsvalue_->clear();
  }
  clear_has_chipsvalue();
}
inline const ::std::string& payopen_info::chipsvalue() const {
  return *chipsvalue_;
}
inline void payopen_info::set_chipsvalue(const ::std::string& value) {
  set_has_chipsvalue();
  if (chipsvalue_ == &::google::protobuf::internal::kEmptyString) {
    chipsvalue_ = new ::std::string;
  }
  chipsvalue_->assign(value);
}
inline void payopen_info::set_chipsvalue(const char* value) {
  set_has_chipsvalue();
  if (chipsvalue_ == &::google::protobuf::internal::kEmptyString) {
    chipsvalue_ = new ::std::string;
  }
  chipsvalue_->assign(value);
}
inline void payopen_info::set_chipsvalue(const char* value, size_t size) {
  set_has_chipsvalue();
  if (chipsvalue_ == &::google::protobuf::internal::kEmptyString) {
    chipsvalue_ = new ::std::string;
  }
  chipsvalue_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* payopen_info::mutable_chipsvalue() {
  set_has_chipsvalue();
  if (chipsvalue_ == &::google::protobuf::internal::kEmptyString) {
    chipsvalue_ = new ::std::string;
  }
  return chipsvalue_;
}
inline ::std::string* payopen_info::release_chipsvalue() {
  clear_has_chipsvalue();
  if (chipsvalue_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = chipsvalue_;
    chipsvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void payopen_info::set_allocated_chipsvalue(::std::string* chipsvalue) {
  if (chipsvalue_ != &::google::protobuf::internal::kEmptyString) {
    delete chipsvalue_;
  }
  if (chipsvalue) {
    set_has_chipsvalue();
    chipsvalue_ = chipsvalue;
  } else {
    clear_has_chipsvalue();
    chipsvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 max_value_per_time = 6;
inline bool payopen_info::has_max_value_per_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void payopen_info::set_has_max_value_per_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void payopen_info::clear_has_max_value_per_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void payopen_info::clear_max_value_per_time() {
  max_value_per_time_ = 0;
  clear_has_max_value_per_time();
}
inline ::google::protobuf::int32 payopen_info::max_value_per_time() const {
  return max_value_per_time_;
}
inline void payopen_info::set_max_value_per_time(::google::protobuf::int32 value) {
  set_has_max_value_per_time();
  max_value_per_time_ = value;
}

// optional bool isshow = 7 [default = true];
inline bool payopen_info::has_isshow() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void payopen_info::set_has_isshow() {
  _has_bits_[0] |= 0x00000040u;
}
inline void payopen_info::clear_has_isshow() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void payopen_info::clear_isshow() {
  isshow_ = true;
  clear_has_isshow();
}
inline bool payopen_info::isshow() const {
  return isshow_;
}
inline void payopen_info::set_isshow(bool value) {
  set_has_isshow();
  isshow_ = value;
}

// -------------------------------------------------------------------

// packetc2w_askPayopen

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_askPayopen];
inline bool packetc2w_askPayopen::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2w_askPayopen::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2w_askPayopen::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2w_askPayopen::clear_packet_id() {
  packet_id_ = 5084;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetc2w_askPayopen::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2w_askPayopen::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetw2c_askPayopen_result

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_askPayopen_result];
inline bool packetw2c_askPayopen_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetw2c_askPayopen_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetw2c_askPayopen_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetw2c_askPayopen_result::clear_packet_id() {
  packet_id_ = 7592;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetw2c_askPayopen_result::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetw2c_askPayopen_result::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// repeated .client2world_protocols.payopen_info info = 2;
inline int packetw2c_askPayopen_result::info_size() const {
  return info_.size();
}
inline void packetw2c_askPayopen_result::clear_info() {
  info_.Clear();
}
inline const ::client2world_protocols::payopen_info& packetw2c_askPayopen_result::info(int index) const {
  return info_.Get(index);
}
inline ::client2world_protocols::payopen_info* packetw2c_askPayopen_result::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::client2world_protocols::payopen_info* packetw2c_askPayopen_result::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::payopen_info >&
packetw2c_askPayopen_result::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::payopen_info >*
packetw2c_askPayopen_result::mutable_info() {
  return &info_;
}

// optional bool isAppStoreOpen = 3;
inline bool packetw2c_askPayopen_result::has_isappstoreopen() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetw2c_askPayopen_result::set_has_isappstoreopen() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetw2c_askPayopen_result::clear_has_isappstoreopen() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetw2c_askPayopen_result::clear_isappstoreopen() {
  isappstoreopen_ = false;
  clear_has_isappstoreopen();
}
inline bool packetw2c_askPayopen_result::isappstoreopen() const {
  return isappstoreopen_;
}
inline void packetw2c_askPayopen_result::set_isappstoreopen(bool value) {
  set_has_isappstoreopen();
  isappstoreopen_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace client2world_protocols

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_client2world_5fexchange_2eproto__INCLUDED
