import "client2gstate_msg_type.proto";
import "msg_type_def.proto";
import "msg_info_def.proto";

package client2gstate_protocols;

//连接gstate服务器
message packetc2gs_player_connect {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2gs_player_connect];	
	optional int32 playerid = 2;						//玩家id
	optional int32 gameid = 3;							//游戏id
}

//连接返回
message packetgs2c_player_connect_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_gs2c_player_connect_result];		
	optional msg_type_def.e_msg_result_def result = 2  [default = e_rmt_unknow];	//返回结果 
}

//断开gstate
message packetc2gs_player_disconnect {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2gs_player_disconnect];	
	optional int32 playerid = 2;						//玩家id
}

//
message packetgs2c_player_disconnect_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_gs2c_player_disconnect_result];		
	optional msg_type_def.e_msg_result_def result = 2  [default = e_rmt_unknow];	//返回结果
}

//获取所有牌路数据
message packetc2gs_game_history{
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2gs_game_history]; 	
	optional int32 gameid = 2;					// 游戏id
}

//牌路数据房间基本信息
message gs_base_room_info{
	optional int32 game_id		= 1;				//游戏id		
	optional int32 room_id		= 2;				//房间id
	optional int32 game_state	= 3;				//游戏状态
	optional int32 state_time	= 4;				//游戏状态剩余时间	
	optional int64 time_stamp	= 5;				//时间戳(客户端可以不理会这个值)
	optional int32 calc_time	= 6;				//服务器及时计算剩余时间（给客户端用）
}

//cows 牌路数据
message gs_msg_cows_history{
	repeated bool is_win = 1;						//赢的标志
}
message gs_msg_cows_room_history
{	
	optional gs_base_room_info	base_room_info = 1; 		//游戏房间基本信息				
	optional int32 total_count	= 2;						//总局数
	repeated int32 win_counts	= 3;						//赢的局数
	repeated int32 lose_counts	= 4;						//输的局数
	repeated gs_msg_cows_history history_list = 5;			//房间牌路数据
}

message packetgs2c_cows_game_history_result
{	
	optional e_server_msg_type packet_id = 1 [default = e_mst_gs2c_cows_history_result]; 
	optional int32 all_data_flag	= 2;				//所有游戏数据标志 1代表所有，2,代表更新游戏状态和时间，0代表追加数据
	repeated gs_msg_cows_room_history room_history = 3;	//游戏数据
}

//shcd 牌路数据
message gs_msg_shcd_history
{
	optional int32 card_type	= 1;		//牌的类型
	optional int32 card_value	= 2;		//牌值
	optional int32 open_type	= 3;		//开牌类型
}
message gs_msg_shcd_room_info
{
	optional gs_base_room_info	base_room_info = 1; 		//游戏房间基本信息	
	repeated gs_msg_shcd_history shcd_info = 2;				//房间牌路数据
}

//请求所有黑红梅方牌路结果、主动发送追加数据包也是这个
message packetgs2c_shcd_game_history_result
{	
	optional e_server_msg_type packet_id = 1 [default = e_mst_gs2c_shcd_history_result]; 
	optional int32 all_data_flag	= 2;				//所有游戏数据标志 1代表所有，2,代表更新游戏状态和时间，0代表追加数据,3代表牌路清空
	repeated gs_msg_shcd_room_info room_history = 3;    //游戏数据
}

//baccarat 牌路数据
message gs_msg_baccarat_history
{
	optional bool is_tie			= 1;		//是否和
	optional bool is_player_win		= 2;		//是否闲胜
	optional bool is_player_pair	= 3;		//是否闲对
	optional bool is_banker_pair	= 4;		//是否庄对
	optional bool is_banker_win		= 5;		//是否庄胜
	optional int32  win_point		= 6;		//胜者点数
}
message gs_msg_baccarat_room_info
{
	optional gs_base_room_info	base_room_info = 1; 				//游戏房间基本信息
	repeated gs_msg_baccarat_history baccarat_info = 2;				//房间牌路数据
}

//请求所有百家乐牌路结果、主动发送追加数据包也是这个
message packetgs2c_baccarat_game_history_result
{	
	optional e_server_msg_type packet_id = 1 [default = e_mst_gs2c_baccarat_history_result]; 
	optional int32 all_data_flag	= 2;				//所有游戏数据标志 1代表所有，2,代表更新游戏状态和时间，0代表追加数据,3代表牌路清空
	repeated gs_msg_baccarat_room_info room_history = 3;
}

//goldshark 牌路数据
message gs_msg_goldshark_history
{
	optional int32 result = 1;	//开奖结果
}
message gs_msg_goldshark_room_info
{
	optional gs_base_room_info	base_room_info = 1; 				//游戏房间基本信息
	repeated gs_msg_goldshark_history goldshark_info = 2;			//房间牌路数据
}

//请求所有金鲨银鲨牌路结果、主动发送追加数据包也是这个
message packetgs2c_goldshark_game_history_result
{	
	optional e_server_msg_type packet_id = 1 [default = e_mst_gs2c_goldshark_history_result]; 
	optional int32 all_data_flag	= 2;				//所有游戏数据标志 1代表所有，2,代表更新游戏状态和时间，0代表追加数据
	repeated gs_msg_goldshark_room_info room_history = 3;
}

//lhd 牌路数据
message gs_msg_lhd_history
{
	optional int32 cards_info = 1;	// 0:龙 1:虎 2:和
}
message gs_msg_lhd_room_info
{
	optional gs_base_room_info	base_room_info = 1;		//游戏房间基本信息
	repeated int32 total_win = 2;						//总共赢的局数
	repeated int32 total_lose = 3;						//总共输的局数
	repeated gs_msg_lhd_history lhd_info = 4;			//房间牌路数据
}

//请求所有龙虎斗牌路结果、主动发送追加数据包也是这个
message packetgs2c_lhd_game_history_result
{	
	optional e_server_msg_type packet_id = 1 [default = e_mst_gs2c_lhd_history_result]; 
	optional int32 all_data_flag	= 2;				//所有游戏数据标志 1代表所有，2,代表更新游戏状态和时间，0代表追加数据
	repeated gs_msg_lhd_room_info room_history = 3;
}

//benzbmw 牌路数据
message gs_msg_benzbmw_history
{
	optional int32 result = 1;							//开奖结果
}
message gs_msg_benzbmw_room_info
{
	optional gs_base_room_info	base_room_info = 1; 				//游戏房间基本信息
	repeated gs_msg_benzbmw_history card_road_info = 2;				//房间牌路数据
}
//请求所有奔驰宝马牌路结果、主动发送追加数据包也是这个
message packetgs2c_benzbmw_game_history_result
{	
	optional e_server_msg_type packet_id = 1 [default = e_mst_gs2c_benzbmw_history_result]; 
	optional int32 all_data_flag	= 2;				//所有游戏数据标志 1代表所有，2,代表更新游戏状态和时间，0代表追加数据
	repeated gs_msg_benzbmw_room_info room_history = 3;
}

//multiredblack 牌路数据
message gs_msg_multiredblack_history
{
	optional int32 result = 1;				//牌路记录 <100红赢 / >=100黑赢  %100 0:高牌 2~13:对2~对K 14:对A 20:顺子 21:同花 22:同花顺 23：三条
}
message gs_msg_multiredblack_room_info
{
	optional gs_base_room_info	base_room_info = 1; 				//游戏房间基本信息
	repeated gs_msg_multiredblack_history card_road_info = 2;		//房间牌路数据
}
//请求所有百人红黑牌路结果、主动发送追加数据包也是这个
message packetgs2c_multiredblack_game_history_result
{	
	optional e_server_msg_type packet_id = 1 [default = e_mst_gs2c_multiredblack_history_result]; 
	optional int32 all_data_flag	= 2;				//所有游戏数据标志 1代表所有，2,代表更新游戏状态和时间，0代表追加数据
	repeated gs_msg_multiredblack_room_info room_history = 3;
}

//二八杠 牌路数据
message gs_msg_ebg_history
{
	repeated bool is_win = 1;						// 3家
	repeated int32 cards_id = 2;					// 3家 + 庄家 [xxyy]xx,yy,1到9筒,10为白皮
}
message gs_msg_ebg_room_info
{
	optional gs_base_room_info	base_room_info = 1;		//游戏房间基本信息
	optional int32 total_count = 2;						//总共局数
	repeated int32 win_counts = 3;						//赢的局数
	repeated int32 lose_counts = 4;						//输的局数
	repeated gs_msg_ebg_history card_road_info = 5;			//房间牌路数据
	optional int32 banker_cnt	= 6;					//0的时候表示新的一轮开始
	repeated int32 out_cards	= 7;					//当前一轮已经出去的所有牌
}
//请求所有二八扛牌路结果、主动发送追加数据包也是这个
message packetgs2c_ebg_game_history_result
{	
	optional e_server_msg_type packet_id = 1 [default = e_mst_gs2c_ebg_history_result]; 
	optional int32 all_data_flag	= 2;				//所有游戏数据标志 1代表所有;2,代表更新游戏状态和时间;0代表追加数据;4代表bank_cnt是=0,清空out_cards数据
	repeated gs_msg_ebg_room_info room_history = 3;
}

//欢乐骰宝 牌路数据
message gs_msg_dice_history
{
	optional int32 dice1 = 1;				//骰宝点数1			
	optional int32 dice2 = 2;				//骰宝点数2			
	optional int32 dice3 = 3;				//骰宝点数3				
}
message gs_msg_dice_room_info
{
	optional gs_base_room_info	base_room_info = 1; 				//游戏房间基本信息
	repeated gs_msg_dice_history card_road_info = 2;				//房间牌路数据
}
//请求所有欢乐骰宝路结果、主动发送追加数据包也是这个
message packetgs2c_dice_game_history_result
{	
	optional e_server_msg_type packet_id = 1 [default = e_mst_gs2c_dice_history_result]; 
	optional int32 all_data_flag	= 2;				//所有游戏数据标志 1代表所有，2,代表更新游戏状态和时间，0代表追加数据
	repeated gs_msg_dice_room_info room_history = 3;
}

//抢庄牛牛 房间彩金
message gs_msg_qznn_room_info
{
	optional gs_base_room_info	base_room_info = 1; 		//游戏房间基本信息
	optional int64 total_award = 2;							//总的彩金数
}
//请求抢庄牛房间彩金通知结果、主动发送追加数据包也是这个
message packetgs2c_qznn_game_history_result
{	
	optional e_server_msg_type packet_id = 1 [default = e_mst_gs2c_qznn_history_result]; 
	optional int32 all_data_flag	= 2;				//所有游戏数据标志 1代表所有，0代表追加数据
	repeated gs_msg_qznn_room_info room_history = 3;
}

//通比牛牛 房间彩金
message gs_msg_tbnn_room_info
{
	optional gs_base_room_info	base_room_info = 1; 		//游戏房间基本信息
	optional int64 total_award = 2;							//总的彩金数
}
//请求通比牛房间彩金通知结果、主动发送追加数据包也是这个
message packetgs2c_tbnn_game_history_result
{	
	optional e_server_msg_type packet_id = 1 [default = e_mst_gs2c_tbnn_history_result]; 
	optional int32 all_data_flag	= 2;				//所有游戏数据标志 1代表所有，0代表追加数据
	repeated gs_msg_tbnn_room_info room_history = 3;
}

//豪车大亨 牌路数据
message gs_msg_carsmagnate_history
{
	optional int32 history_val = 1;
}
message gs_msg_carsmagnate_room_info
{
	optional gs_base_room_info	base_room_info = 1; 				//游戏房间基本信息
	repeated gs_msg_carsmagnate_history card_road_info = 2;			//房间牌路数据
}
//请求所有豪车大亨路结果、主动发送追加数据包也是这个
message packetgs2c_carsmagnate_game_history_result
{	
	optional e_server_msg_type packet_id = 1 [default = e_mst_gs2c_carsmagnate_history_result]; 
	optional int32 all_data_flag	= 2;				//所有游戏数据标志 1代表所有，2,代表更新游戏状态和时间，0代表追加数据
	repeated gs_msg_carsmagnate_room_info room_history = 3;
}

//万人德州 牌路数据
message gs_msg_multitexas_history
{
	repeated int32 win = 1;					//0:failed 1:win 2:和
}
message gs_msg_multitexas_room_info
{
	optional gs_base_room_info	base_room_info = 1; 				//游戏房间基本信息
	repeated gs_msg_multitexas_history card_road_info = 2;			//房间牌路数据
}
//请求所有万人德州结果、主动发送追加数据包也是这个
message packetgs2c_multitexas_game_history_result
{	
	optional e_server_msg_type packet_id = 1 [default = e_mst_gs2c_multitexas_history_result]; 
	optional int32 all_data_flag	= 2;				//所有游戏数据标志 1代表所有，2,代表更新游戏状态和时间，0代表追加数据
	repeated gs_msg_multitexas_room_info room_history = 3;
}

//水果缤纷 牌路数据
message gs_msg_fruits_history
{
	optional int32 history_val = 1;
}
message gs_msg_fruits_room_info
{
	optional gs_base_room_info	base_room_info = 1; 			//游戏房间基本信息
	repeated gs_msg_fruits_history card_road_info = 2;			//房间牌路数据
}
//请求所有水果缤纷结果、主动发送追加数据包也是这个
message packetgs2c_fruits_game_history_result
{	
	optional e_server_msg_type packet_id = 1 [default = e_mst_gs2c_fruits_history_result]; 
	optional int32 all_data_flag	= 2;				//所有游戏数据标志 1代表所有，2,代表更新游戏状态和时间，0代表追加数据
	repeated gs_msg_fruits_room_info room_history = 3;
}

//森林舞会 牌路数据
message gs_msg_forest_history
{
	optional int32 history_val = 1;
}
message gs_msg_forest_room_info
{
	optional gs_base_room_info	base_room_info = 1; 				//游戏房间基本信息
	repeated gs_msg_forest_history card_road_info = 2;			//房间牌路数据
}
//请求所有森林舞会结果、主动发送追加数据包也是这个
message packetgs2c_forest_game_history_result
{	
	optional e_server_msg_type packet_id = 1 [default = e_mst_gs2c_forest_history_result]; 
	optional int32 all_data_flag	= 2;				//所有游戏数据标志 1代表所有，2,代表更新游戏状态和时间，0代表追加数据
	repeated gs_msg_forest_room_info room_history = 3;
}

//四色球 牌路数据
message gs_msg_fourcolorball_history
{
	optional int32 history_val = 1;
}
message gs_msg_fourcolorball_room_info
{
	optional gs_base_room_info	base_room_info = 1; 				//游戏房间基本信息
	repeated gs_msg_fourcolorball_history card_road_info = 2;			//房间牌路数据
}
//请求所有四色球结果、主动发送追加数据包也是这个
message packetgs2c_fourcolorball_game_history_result
{	
	optional e_server_msg_type packet_id = 1 [default = e_mst_gs2c_fourcolorball_history_result]; 
	optional int32 all_data_flag	= 2;				//所有游戏数据标志 1代表所有，2,代表更新游戏状态和时间，0代表追加数据
	repeated gs_msg_fourcolorball_room_info room_history = 3;
}

//欢乐至尊 牌路数据
message gs_msg_happySupremacy_history
{
	optional bool is_forward_win = 1; //顺门
	optional bool is_reverse_win = 2; //倒门
	optional bool is_opposite_win = 3; //对门
	repeated int32 cards = 4; //0:决定发牌顺序,忽略 1~7  e_card_owner * 1000 + e_card_flower * 100 + card_point
	repeated int32 cards_type = 5 ; //e_card_owner * 100 + card_type
}
message gs_msg_happySupremacy_room_info
{
	optional gs_base_room_info	base_room_info = 1; 				//游戏房间基本信息
	repeated gs_msg_happySupremacy_history card_road_info = 2;			//房间牌路数据
}
//请求所有欢乐至尊结果、主动发送追加数据包也是这个
message packetgs2c_happySupremacy_game_history_result
{	
	optional e_server_msg_type packet_id = 1 [default = e_mst_gs2c_happySupremacy_history_result]; 
	optional int32 all_data_flag	= 2;				//所有游戏数据标志 1代表所有，2,代表更新游戏状态和时间，0代表追加数据
	repeated gs_msg_happySupremacy_room_info room_history = 3;
}

//推筒子 牌路数据
message gs_msg_ttz_history
{	
	repeated int32 cardid = 1; //前三位是其它cardid，第四位是庄家cardid	
}
message gs_msg_ttz_room_info
{
	optional gs_base_room_info	base_room_info = 1; 					//游戏房间基本信息
	repeated gs_msg_ttz_history card_road_info = 2;			//房间牌路数据
}
//请求所有推筒子结果、主动发送追加数据包也是这个
message packetgs2c_ttz_game_history_result
{	
	optional e_server_msg_type packet_id = 1 [default = e_mst_gs2c_ttz_history_result]; 
	optional int32 all_data_flag	= 2;				//所有游戏数据标志 1代表所有，2,代表更新游戏状态和时间，0代表追加数据
	repeated gs_msg_ttz_room_info room_history = 3;
}