// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2world_other.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "client2world_other.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace client2world_protocols {

namespace {

const ::google::protobuf::Descriptor* packetc2w_ac_bind_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packetc2w_ac_bind_reflection_ = NULL;
const ::google::protobuf::Descriptor* packetw2c_ac_bind_result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packetw2c_ac_bind_result_reflection_ = NULL;
const ::google::protobuf::Descriptor* packetc2w_ac_transfer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packetc2w_ac_transfer_reflection_ = NULL;
const ::google::protobuf::Descriptor* packetw2c_ac_transfer_result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packetw2c_ac_transfer_result_reflection_ = NULL;
const ::google::protobuf::Descriptor* packetc2w_ac_url_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packetc2w_ac_url_reflection_ = NULL;
const ::google::protobuf::Descriptor* packetw2c_ac_url_result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packetw2c_ac_url_result_reflection_ = NULL;
const ::google::protobuf::Descriptor* packetc2w_ask_check_payment_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packetc2w_ask_check_payment_reflection_ = NULL;
const ::google::protobuf::Descriptor* packetc2w_ask_test_payment_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packetc2w_ask_test_payment_reflection_ = NULL;
const ::google::protobuf::Descriptor* packetw2c_ask_check_payment_result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packetw2c_ask_check_payment_result_reflection_ = NULL;
const ::google::protobuf::Descriptor* msg_bank_info_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  msg_bank_info_reflection_ = NULL;
const ::google::protobuf::Descriptor* packetc2w_req_bank_list_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packetc2w_req_bank_list_reflection_ = NULL;
const ::google::protobuf::Descriptor* packetw2c_req_bank_list_result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packetw2c_req_bank_list_result_reflection_ = NULL;
const ::google::protobuf::Descriptor* packetc2w_bind_bank_card_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packetc2w_bind_bank_card_reflection_ = NULL;
const ::google::protobuf::Descriptor* packetw2c_bind_bank_card_result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packetw2c_bind_bank_card_result_reflection_ = NULL;
const ::google::protobuf::Descriptor* packetc2w_req_bank_card_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packetc2w_req_bank_card_reflection_ = NULL;
const ::google::protobuf::Descriptor* packetw2c_req_bank_card_result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packetw2c_req_bank_card_result_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_client2world_5fother_2eproto() {
  protobuf_AddDesc_client2world_5fother_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "client2world_other.proto");
  GOOGLE_CHECK(file != NULL);
  packetc2w_ac_bind_descriptor_ = file->message_type(0);
  static const int packetc2w_ac_bind_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_ac_bind, packet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_ac_bind, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_ac_bind, real_name_),
  };
  packetc2w_ac_bind_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packetc2w_ac_bind_descriptor_,
      packetc2w_ac_bind::default_instance_,
      packetc2w_ac_bind_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_ac_bind, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_ac_bind, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packetc2w_ac_bind));
  packetw2c_ac_bind_result_descriptor_ = file->message_type(1);
  static const int packetw2c_ac_bind_result_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_ac_bind_result, packet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_ac_bind_result, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_ac_bind_result, error_info_),
  };
  packetw2c_ac_bind_result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packetw2c_ac_bind_result_descriptor_,
      packetw2c_ac_bind_result::default_instance_,
      packetw2c_ac_bind_result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_ac_bind_result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_ac_bind_result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packetw2c_ac_bind_result));
  packetc2w_ac_transfer_descriptor_ = file->message_type(2);
  static const int packetc2w_ac_transfer_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_ac_transfer, packet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_ac_transfer, gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_ac_transfer, type_),
  };
  packetc2w_ac_transfer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packetc2w_ac_transfer_descriptor_,
      packetc2w_ac_transfer::default_instance_,
      packetc2w_ac_transfer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_ac_transfer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_ac_transfer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packetc2w_ac_transfer));
  packetw2c_ac_transfer_result_descriptor_ = file->message_type(3);
  static const int packetw2c_ac_transfer_result_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_ac_transfer_result, packet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_ac_transfer_result, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_ac_transfer_result, gold_),
  };
  packetw2c_ac_transfer_result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packetw2c_ac_transfer_result_descriptor_,
      packetw2c_ac_transfer_result::default_instance_,
      packetw2c_ac_transfer_result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_ac_transfer_result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_ac_transfer_result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packetw2c_ac_transfer_result));
  packetc2w_ac_url_descriptor_ = file->message_type(4);
  static const int packetc2w_ac_url_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_ac_url, packet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_ac_url, gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_ac_url, paytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_ac_url, param_),
  };
  packetc2w_ac_url_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packetc2w_ac_url_descriptor_,
      packetc2w_ac_url::default_instance_,
      packetc2w_ac_url_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_ac_url, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_ac_url, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packetc2w_ac_url));
  packetw2c_ac_url_result_descriptor_ = file->message_type(5);
  static const int packetw2c_ac_url_result_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_ac_url_result, packet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_ac_url_result, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_ac_url_result, url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_ac_url_result, order_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_ac_url_result, is_webview_),
  };
  packetw2c_ac_url_result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packetw2c_ac_url_result_descriptor_,
      packetw2c_ac_url_result::default_instance_,
      packetw2c_ac_url_result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_ac_url_result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_ac_url_result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packetw2c_ac_url_result));
  packetc2w_ask_check_payment_descriptor_ = file->message_type(6);
  static const int packetc2w_ask_check_payment_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_ask_check_payment, packet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_ask_check_payment, orderid_),
  };
  packetc2w_ask_check_payment_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packetc2w_ask_check_payment_descriptor_,
      packetc2w_ask_check_payment::default_instance_,
      packetc2w_ask_check_payment_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_ask_check_payment, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_ask_check_payment, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packetc2w_ask_check_payment));
  packetc2w_ask_test_payment_descriptor_ = file->message_type(7);
  static const int packetc2w_ask_test_payment_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_ask_test_payment, packet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_ask_test_payment, pay_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_ask_test_payment, pay_value_),
  };
  packetc2w_ask_test_payment_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packetc2w_ask_test_payment_descriptor_,
      packetc2w_ask_test_payment::default_instance_,
      packetc2w_ask_test_payment_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_ask_test_payment, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_ask_test_payment, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packetc2w_ask_test_payment));
  packetw2c_ask_check_payment_result_descriptor_ = file->message_type(8);
  static const int packetw2c_ask_check_payment_result_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_ask_check_payment_result, packet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_ask_check_payment_result, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_ask_check_payment_result, pay_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_ask_check_payment_result, pay_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_ask_check_payment_result, vip_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_ask_check_payment_result, orderid_),
  };
  packetw2c_ask_check_payment_result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packetw2c_ask_check_payment_result_descriptor_,
      packetw2c_ask_check_payment_result::default_instance_,
      packetw2c_ask_check_payment_result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_ask_check_payment_result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_ask_check_payment_result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packetw2c_ask_check_payment_result));
  msg_bank_info_descriptor_ = file->message_type(9);
  static const int msg_bank_info_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_bank_info, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_bank_info, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_bank_info, open_),
  };
  msg_bank_info_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      msg_bank_info_descriptor_,
      msg_bank_info::default_instance_,
      msg_bank_info_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_bank_info, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(msg_bank_info, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(msg_bank_info));
  packetc2w_req_bank_list_descriptor_ = file->message_type(10);
  static const int packetc2w_req_bank_list_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_req_bank_list, packet_id_),
  };
  packetc2w_req_bank_list_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packetc2w_req_bank_list_descriptor_,
      packetc2w_req_bank_list::default_instance_,
      packetc2w_req_bank_list_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_req_bank_list, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_req_bank_list, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packetc2w_req_bank_list));
  packetw2c_req_bank_list_result_descriptor_ = file->message_type(11);
  static const int packetw2c_req_bank_list_result_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_req_bank_list_result, packet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_req_bank_list_result, bank_list_),
  };
  packetw2c_req_bank_list_result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packetw2c_req_bank_list_result_descriptor_,
      packetw2c_req_bank_list_result::default_instance_,
      packetw2c_req_bank_list_result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_req_bank_list_result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_req_bank_list_result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packetw2c_req_bank_list_result));
  packetc2w_bind_bank_card_descriptor_ = file->message_type(12);
  static const int packetc2w_bind_bank_card_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_bind_bank_card, packet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_bind_bank_card, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_bind_bank_card, card_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_bind_bank_card, identity_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_bind_bank_card, bank_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_bind_bank_card, card_number2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_bind_bank_card, phone_number_),
  };
  packetc2w_bind_bank_card_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packetc2w_bind_bank_card_descriptor_,
      packetc2w_bind_bank_card::default_instance_,
      packetc2w_bind_bank_card_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_bind_bank_card, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_bind_bank_card, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packetc2w_bind_bank_card));
  packetw2c_bind_bank_card_result_descriptor_ = file->message_type(13);
  static const int packetw2c_bind_bank_card_result_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_bind_bank_card_result, packet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_bind_bank_card_result, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_bind_bank_card_result, error_info_),
  };
  packetw2c_bind_bank_card_result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packetw2c_bind_bank_card_result_descriptor_,
      packetw2c_bind_bank_card_result::default_instance_,
      packetw2c_bind_bank_card_result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_bind_bank_card_result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_bind_bank_card_result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packetw2c_bind_bank_card_result));
  packetc2w_req_bank_card_descriptor_ = file->message_type(14);
  static const int packetc2w_req_bank_card_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_req_bank_card, packet_id_),
  };
  packetc2w_req_bank_card_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packetc2w_req_bank_card_descriptor_,
      packetc2w_req_bank_card::default_instance_,
      packetc2w_req_bank_card_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_req_bank_card, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetc2w_req_bank_card, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packetc2w_req_bank_card));
  packetw2c_req_bank_card_result_descriptor_ = file->message_type(15);
  static const int packetw2c_req_bank_card_result_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_req_bank_card_result, packet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_req_bank_card_result, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_req_bank_card_result, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_req_bank_card_result, card_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_req_bank_card_result, bank_name_),
  };
  packetw2c_req_bank_card_result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packetw2c_req_bank_card_result_descriptor_,
      packetw2c_req_bank_card_result::default_instance_,
      packetw2c_req_bank_card_result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_req_bank_card_result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packetw2c_req_bank_card_result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packetw2c_req_bank_card_result));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_client2world_5fother_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packetc2w_ac_bind_descriptor_, &packetc2w_ac_bind::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packetw2c_ac_bind_result_descriptor_, &packetw2c_ac_bind_result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packetc2w_ac_transfer_descriptor_, &packetc2w_ac_transfer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packetw2c_ac_transfer_result_descriptor_, &packetw2c_ac_transfer_result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packetc2w_ac_url_descriptor_, &packetc2w_ac_url::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packetw2c_ac_url_result_descriptor_, &packetw2c_ac_url_result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packetc2w_ask_check_payment_descriptor_, &packetc2w_ask_check_payment::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packetc2w_ask_test_payment_descriptor_, &packetc2w_ask_test_payment::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packetw2c_ask_check_payment_result_descriptor_, &packetw2c_ask_check_payment_result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    msg_bank_info_descriptor_, &msg_bank_info::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packetc2w_req_bank_list_descriptor_, &packetc2w_req_bank_list::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packetw2c_req_bank_list_result_descriptor_, &packetw2c_req_bank_list_result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packetc2w_bind_bank_card_descriptor_, &packetc2w_bind_bank_card::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packetw2c_bind_bank_card_result_descriptor_, &packetw2c_bind_bank_card_result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packetc2w_req_bank_card_descriptor_, &packetc2w_req_bank_card::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packetw2c_req_bank_card_result_descriptor_, &packetw2c_req_bank_card_result::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_client2world_5fother_2eproto() {
  delete packetc2w_ac_bind::default_instance_;
  delete packetc2w_ac_bind_reflection_;
  delete packetw2c_ac_bind_result::default_instance_;
  delete packetw2c_ac_bind_result_reflection_;
  delete packetc2w_ac_transfer::default_instance_;
  delete packetc2w_ac_transfer_reflection_;
  delete packetw2c_ac_transfer_result::default_instance_;
  delete packetw2c_ac_transfer_result_reflection_;
  delete packetc2w_ac_url::default_instance_;
  delete packetc2w_ac_url_reflection_;
  delete packetw2c_ac_url_result::default_instance_;
  delete packetw2c_ac_url_result_reflection_;
  delete packetc2w_ask_check_payment::default_instance_;
  delete packetc2w_ask_check_payment_reflection_;
  delete packetc2w_ask_test_payment::default_instance_;
  delete packetc2w_ask_test_payment_reflection_;
  delete packetw2c_ask_check_payment_result::default_instance_;
  delete packetw2c_ask_check_payment_result_reflection_;
  delete msg_bank_info::default_instance_;
  delete msg_bank_info_reflection_;
  delete packetc2w_req_bank_list::default_instance_;
  delete packetc2w_req_bank_list_reflection_;
  delete packetw2c_req_bank_list_result::default_instance_;
  delete packetw2c_req_bank_list_result_reflection_;
  delete packetc2w_bind_bank_card::default_instance_;
  delete packetc2w_bind_bank_card_reflection_;
  delete packetw2c_bind_bank_card_result::default_instance_;
  delete packetw2c_bind_bank_card_result_reflection_;
  delete packetc2w_req_bank_card::default_instance_;
  delete packetc2w_req_bank_card_reflection_;
  delete packetw2c_req_bank_card_result::default_instance_;
  delete packetw2c_req_bank_card_result_reflection_;
}

void protobuf_AddDesc_client2world_5fother_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::client2world_protocols::protobuf_AddDesc_client2world_5fmsg_5ftype_2eproto();
  ::msg_type_def::protobuf_AddDesc_msg_5ftype_5fdef_2eproto();
  ::msg_info_def::protobuf_AddDesc_msg_5finfo_5fdef_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030client2world_other.proto\022\026client2world"
    "_protocols\032\033client2world_msg_type.proto\032"
    "\022msg_type_def.proto\032\022msg_info_def.proto\""
    "\210\001\n\021packetc2w_ac_bind\022O\n\tpacket_id\030\001 \001(\016"
    "2).client2world_protocols.e_server_msg_t"
    "ype:\021e_mst_c2w_ac_bind\022\017\n\007account\030\002 \001(\t\022"
    "\021\n\treal_name\030\003 \001(\t\"\302\001\n\030packetw2c_ac_bind"
    "_result\022V\n\tpacket_id\030\001 \001(\0162).client2worl"
    "d_protocols.e_server_msg_type:\030e_mst_w2c"
    "_ac_bind_result\022:\n\006result\030\002 \001(\0162\036.msg_ty"
    "pe_def.e_msg_result_def:\ne_rmt_fail\022\022\n\ne"
    "rror_info\030\003 \001(\t\"\213\001\n\025packetc2w_ac_transfe"
    "r\022S\n\tpacket_id\030\001 \001(\0162).client2world_prot"
    "ocols.e_server_msg_type:\025e_mst_c2w_ac_tr"
    "ansfer\022\014\n\004gold\030\002 \001(\003\022\017\n\004type\030\003 \001(\005:\0011\"\304\001"
    "\n\034packetw2c_ac_transfer_result\022Z\n\tpacket"
    "_id\030\001 \001(\0162).client2world_protocols.e_ser"
    "ver_msg_type:\034e_mst_w2c_ac_transfer_resu"
    "lt\022:\n\006result\030\002 \001(\0162\036.msg_type_def.e_msg_"
    "result_def:\ne_rmt_fail\022\014\n\004gold\030\003 \001(\003\"\223\001\n"
    "\020packetc2w_ac_url\022N\n\tpacket_id\030\001 \001(\0162).c"
    "lient2world_protocols.e_server_msg_type:"
    "\020e_mst_c2w_ac_url\022\014\n\004gold\030\002 \001(\003\022\022\n\007payty"
    "pe\030\003 \001(\005:\0011\022\r\n\005param\030\004 \001(\t\"\346\001\n\027packetw2c"
    "_ac_url_result\022U\n\tpacket_id\030\001 \001(\0162).clie"
    "nt2world_protocols.e_server_msg_type:\027e_"
    "mst_w2c_ac_url_result\022:\n\006result\030\002 \001(\0162\036."
    "msg_type_def.e_msg_result_def:\ne_rmt_fai"
    "l\022\013\n\003url\030\003 \001(\t\022\020\n\010order_id\030\004 \001(\t\022\031\n\nis_w"
    "ebview\030\005 \001(\010:\005false\"\211\001\n\033packetc2w_ask_ch"
    "eck_payment\022Y\n\tpacket_id\030\001 \001(\0162).client2"
    "world_protocols.e_server_msg_type:\033e_mst"
    "_c2w_ask_check_payment\022\017\n\007orderid\030\002 \001(\t\""
    "\233\001\n\032packetc2w_ask_test_payment\022X\n\tpacket"
    "_id\030\001 \001(\0162).client2world_protocols.e_ser"
    "ver_msg_type:\032e_mst_c2w_ask_test_payment"
    "\022\020\n\010pay_type\030\002 \001(\005\022\021\n\tpay_value\030\003 \001(\005\"\211\002"
    "\n\"packetw2c_ask_check_payment_result\022`\n\t"
    "packet_id\030\001 \001(\0162).client2world_protocols"
    ".e_server_msg_type:\"e_mst_w2c_ask_check_"
    "payment_result\022:\n\006result\030\002 \001(\0162\036.msg_typ"
    "e_def.e_msg_result_def:\ne_rmt_fail\022\020\n\010pa"
    "y_type\030\003 \001(\005\022\021\n\tpay_value\030\004 \001(\005\022\017\n\007vip_e"
    "xp\030\005 \001(\005\022\017\n\007orderid\030\006 \001(\t\"9\n\rmsg_bank_in"
    "fo\022\014\n\004code\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\014\n\004open\030\003"
    " \001(\010\"p\n\027packetc2w_req_bank_list\022U\n\tpacke"
    "t_id\030\001 \001(\0162).client2world_protocols.e_se"
    "rver_msg_type:\027e_mst_c2w_req_bank_list\"\270"
    "\001\n\036packetw2c_req_bank_list_result\022\\\n\tpac"
    "ket_id\030\001 \001(\0162).client2world_protocols.e_"
    "server_msg_type:\036e_mst_w2c_req_bank_list"
    "_result\0228\n\tbank_list\030\002 \003(\0132%.client2worl"
    "d_protocols.msg_bank_info\"\355\001\n\030packetc2w_"
    "bind_bank_card\022V\n\tpacket_id\030\001 \001(\0162).clie"
    "nt2world_protocols.e_server_msg_type:\030e_"
    "mst_c2w_bind_bank_card\022\014\n\004name\030\002 \001(\t\022\023\n\013"
    "card_number\030\003 \001(\t\022\027\n\017identity_number\030\004 \001"
    "(\t\022\021\n\tbank_name\030\005 \001(\t\022\024\n\014card_number2\030\006 "
    "\001(\t\022\024\n\014phone_number\030\007 \001(\t\"\320\001\n\037packetw2c_"
    "bind_bank_card_result\022]\n\tpacket_id\030\001 \001(\016"
    "2).client2world_protocols.e_server_msg_t"
    "ype:\037e_mst_w2c_bind_bank_card_result\022:\n\006"
    "result\030\002 \001(\0162\036.msg_type_def.e_msg_result"
    "_def:\ne_rmt_fail\022\022\n\nerror_info\030\003 \001(\t\"p\n\027"
    "packetc2w_req_bank_card\022U\n\tpacket_id\030\001 \001"
    "(\0162).client2world_protocols.e_server_msg"
    "_type:\027e_mst_c2w_req_bank_card\"\360\001\n\036packe"
    "tw2c_req_bank_card_result\022\\\n\tpacket_id\030\001"
    " \001(\0162).client2world_protocols.e_server_m"
    "sg_type:\036e_mst_w2c_req_bank_card_result\022"
    ":\n\006result\030\002 \001(\0162\036.msg_type_def.e_msg_res"
    "ult_def:\ne_rmt_fail\022\014\n\004name\030\003 \001(\t\022\023\n\013car"
    "d_number\030\004 \001(\t\022\021\n\tbank_name\030\005 \001(\t", 2913);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "client2world_other.proto", &protobuf_RegisterTypes);
  packetc2w_ac_bind::default_instance_ = new packetc2w_ac_bind();
  packetw2c_ac_bind_result::default_instance_ = new packetw2c_ac_bind_result();
  packetc2w_ac_transfer::default_instance_ = new packetc2w_ac_transfer();
  packetw2c_ac_transfer_result::default_instance_ = new packetw2c_ac_transfer_result();
  packetc2w_ac_url::default_instance_ = new packetc2w_ac_url();
  packetw2c_ac_url_result::default_instance_ = new packetw2c_ac_url_result();
  packetc2w_ask_check_payment::default_instance_ = new packetc2w_ask_check_payment();
  packetc2w_ask_test_payment::default_instance_ = new packetc2w_ask_test_payment();
  packetw2c_ask_check_payment_result::default_instance_ = new packetw2c_ask_check_payment_result();
  msg_bank_info::default_instance_ = new msg_bank_info();
  packetc2w_req_bank_list::default_instance_ = new packetc2w_req_bank_list();
  packetw2c_req_bank_list_result::default_instance_ = new packetw2c_req_bank_list_result();
  packetc2w_bind_bank_card::default_instance_ = new packetc2w_bind_bank_card();
  packetw2c_bind_bank_card_result::default_instance_ = new packetw2c_bind_bank_card_result();
  packetc2w_req_bank_card::default_instance_ = new packetc2w_req_bank_card();
  packetw2c_req_bank_card_result::default_instance_ = new packetw2c_req_bank_card_result();
  packetc2w_ac_bind::default_instance_->InitAsDefaultInstance();
  packetw2c_ac_bind_result::default_instance_->InitAsDefaultInstance();
  packetc2w_ac_transfer::default_instance_->InitAsDefaultInstance();
  packetw2c_ac_transfer_result::default_instance_->InitAsDefaultInstance();
  packetc2w_ac_url::default_instance_->InitAsDefaultInstance();
  packetw2c_ac_url_result::default_instance_->InitAsDefaultInstance();
  packetc2w_ask_check_payment::default_instance_->InitAsDefaultInstance();
  packetc2w_ask_test_payment::default_instance_->InitAsDefaultInstance();
  packetw2c_ask_check_payment_result::default_instance_->InitAsDefaultInstance();
  msg_bank_info::default_instance_->InitAsDefaultInstance();
  packetc2w_req_bank_list::default_instance_->InitAsDefaultInstance();
  packetw2c_req_bank_list_result::default_instance_->InitAsDefaultInstance();
  packetc2w_bind_bank_card::default_instance_->InitAsDefaultInstance();
  packetw2c_bind_bank_card_result::default_instance_->InitAsDefaultInstance();
  packetc2w_req_bank_card::default_instance_->InitAsDefaultInstance();
  packetw2c_req_bank_card_result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_client2world_5fother_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_client2world_5fother_2eproto {
  StaticDescriptorInitializer_client2world_5fother_2eproto() {
    protobuf_AddDesc_client2world_5fother_2eproto();
  }
} static_descriptor_initializer_client2world_5fother_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int packetc2w_ac_bind::kPacketIdFieldNumber;
const int packetc2w_ac_bind::kAccountFieldNumber;
const int packetc2w_ac_bind::kRealNameFieldNumber;
#endif  // !_MSC_VER

packetc2w_ac_bind::packetc2w_ac_bind()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void packetc2w_ac_bind::InitAsDefaultInstance() {
}

packetc2w_ac_bind::packetc2w_ac_bind(const packetc2w_ac_bind& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void packetc2w_ac_bind::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 5075;
  account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  real_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packetc2w_ac_bind::~packetc2w_ac_bind() {
  SharedDtor();
}

void packetc2w_ac_bind::SharedDtor() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (real_name_ != &::google::protobuf::internal::kEmptyString) {
    delete real_name_;
  }
  if (this != default_instance_) {
  }
}

void packetc2w_ac_bind::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packetc2w_ac_bind::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packetc2w_ac_bind_descriptor_;
}

const packetc2w_ac_bind& packetc2w_ac_bind::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client2world_5fother_2eproto();
  return *default_instance_;
}

packetc2w_ac_bind* packetc2w_ac_bind::default_instance_ = NULL;

packetc2w_ac_bind* packetc2w_ac_bind::New() const {
  return new packetc2w_ac_bind;
}

void packetc2w_ac_bind::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    packet_id_ = 5075;
    if (has_account()) {
      if (account_ != &::google::protobuf::internal::kEmptyString) {
        account_->clear();
      }
    }
    if (has_real_name()) {
      if (real_name_ != &::google::protobuf::internal::kEmptyString) {
        real_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packetc2w_ac_bind::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_ac_bind];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::client2world_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::client2world_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_account;
        break;
      }

      // optional string account = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_account:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_real_name;
        break;
      }

      // optional string real_name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_real_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_real_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->real_name().data(), this->real_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void packetc2w_ac_bind::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_ac_bind];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  // optional string account = 2;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->account(), output);
  }

  // optional string real_name = 3;
  if (has_real_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->real_name().data(), this->real_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->real_name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* packetc2w_ac_bind::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_ac_bind];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  // optional string account = 2;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account(), target);
  }

  // optional string real_name = 3;
  if (has_real_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->real_name().data(), this->real_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->real_name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int packetc2w_ac_bind::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_ac_bind];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

    // optional string account = 2;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional string real_name = 3;
    if (has_real_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->real_name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packetc2w_ac_bind::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packetc2w_ac_bind* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packetc2w_ac_bind*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packetc2w_ac_bind::MergeFrom(const packetc2w_ac_bind& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
    if (from.has_account()) {
      set_account(from.account());
    }
    if (from.has_real_name()) {
      set_real_name(from.real_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packetc2w_ac_bind::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packetc2w_ac_bind::CopyFrom(const packetc2w_ac_bind& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packetc2w_ac_bind::IsInitialized() const {

  return true;
}

void packetc2w_ac_bind::Swap(packetc2w_ac_bind* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(account_, other->account_);
    std::swap(real_name_, other->real_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packetc2w_ac_bind::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packetc2w_ac_bind_descriptor_;
  metadata.reflection = packetc2w_ac_bind_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int packetw2c_ac_bind_result::kPacketIdFieldNumber;
const int packetw2c_ac_bind_result::kResultFieldNumber;
const int packetw2c_ac_bind_result::kErrorInfoFieldNumber;
#endif  // !_MSC_VER

packetw2c_ac_bind_result::packetw2c_ac_bind_result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void packetw2c_ac_bind_result::InitAsDefaultInstance() {
}

packetw2c_ac_bind_result::packetw2c_ac_bind_result(const packetw2c_ac_bind_result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void packetw2c_ac_bind_result::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 7581;
  result_ = 2;
  error_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packetw2c_ac_bind_result::~packetw2c_ac_bind_result() {
  SharedDtor();
}

void packetw2c_ac_bind_result::SharedDtor() {
  if (error_info_ != &::google::protobuf::internal::kEmptyString) {
    delete error_info_;
  }
  if (this != default_instance_) {
  }
}

void packetw2c_ac_bind_result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packetw2c_ac_bind_result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packetw2c_ac_bind_result_descriptor_;
}

const packetw2c_ac_bind_result& packetw2c_ac_bind_result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client2world_5fother_2eproto();
  return *default_instance_;
}

packetw2c_ac_bind_result* packetw2c_ac_bind_result::default_instance_ = NULL;

packetw2c_ac_bind_result* packetw2c_ac_bind_result::New() const {
  return new packetw2c_ac_bind_result;
}

void packetw2c_ac_bind_result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    packet_id_ = 7581;
    result_ = 2;
    if (has_error_info()) {
      if (error_info_ != &::google::protobuf::internal::kEmptyString) {
        error_info_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packetw2c_ac_bind_result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_ac_bind_result];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::client2world_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::client2world_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_type_def::e_msg_result_def_IsValid(value)) {
            set_result(static_cast< ::msg_type_def::e_msg_result_def >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_error_info;
        break;
      }

      // optional string error_info = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_error_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_info()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->error_info().data(), this->error_info().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void packetw2c_ac_bind_result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_ac_bind_result];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->result(), output);
  }

  // optional string error_info = 3;
  if (has_error_info()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->error_info().data(), this->error_info().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->error_info(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* packetw2c_ac_bind_result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_ac_bind_result];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->result(), target);
  }

  // optional string error_info = 3;
  if (has_error_info()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->error_info().data(), this->error_info().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error_info(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int packetw2c_ac_bind_result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_ac_bind_result];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

    // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

    // optional string error_info = 3;
    if (has_error_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error_info());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packetw2c_ac_bind_result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packetw2c_ac_bind_result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packetw2c_ac_bind_result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packetw2c_ac_bind_result::MergeFrom(const packetw2c_ac_bind_result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_error_info()) {
      set_error_info(from.error_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packetw2c_ac_bind_result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packetw2c_ac_bind_result::CopyFrom(const packetw2c_ac_bind_result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packetw2c_ac_bind_result::IsInitialized() const {

  return true;
}

void packetw2c_ac_bind_result::Swap(packetw2c_ac_bind_result* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(result_, other->result_);
    std::swap(error_info_, other->error_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packetw2c_ac_bind_result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packetw2c_ac_bind_result_descriptor_;
  metadata.reflection = packetw2c_ac_bind_result_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int packetc2w_ac_transfer::kPacketIdFieldNumber;
const int packetc2w_ac_transfer::kGoldFieldNumber;
const int packetc2w_ac_transfer::kTypeFieldNumber;
#endif  // !_MSC_VER

packetc2w_ac_transfer::packetc2w_ac_transfer()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void packetc2w_ac_transfer::InitAsDefaultInstance() {
}

packetc2w_ac_transfer::packetc2w_ac_transfer(const packetc2w_ac_transfer& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void packetc2w_ac_transfer::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 5076;
  gold_ = GOOGLE_LONGLONG(0);
  type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packetc2w_ac_transfer::~packetc2w_ac_transfer() {
  SharedDtor();
}

void packetc2w_ac_transfer::SharedDtor() {
  if (this != default_instance_) {
  }
}

void packetc2w_ac_transfer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packetc2w_ac_transfer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packetc2w_ac_transfer_descriptor_;
}

const packetc2w_ac_transfer& packetc2w_ac_transfer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client2world_5fother_2eproto();
  return *default_instance_;
}

packetc2w_ac_transfer* packetc2w_ac_transfer::default_instance_ = NULL;

packetc2w_ac_transfer* packetc2w_ac_transfer::New() const {
  return new packetc2w_ac_transfer;
}

void packetc2w_ac_transfer::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    packet_id_ = 5076;
    gold_ = GOOGLE_LONGLONG(0);
    type_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packetc2w_ac_transfer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_ac_transfer];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::client2world_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::client2world_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_gold;
        break;
      }

      // optional int64 gold = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &gold_)));
          set_has_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // optional int32 type = 3 [default = 1];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void packetc2w_ac_transfer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_ac_transfer];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  // optional int64 gold = 2;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->gold(), output);
  }

  // optional int32 type = 3 [default = 1];
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* packetc2w_ac_transfer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_ac_transfer];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  // optional int64 gold = 2;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->gold(), target);
  }

  // optional int32 type = 3 [default = 1];
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int packetc2w_ac_transfer::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_ac_transfer];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

    // optional int64 gold = 2;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->gold());
    }

    // optional int32 type = 3 [default = 1];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packetc2w_ac_transfer::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packetc2w_ac_transfer* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packetc2w_ac_transfer*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packetc2w_ac_transfer::MergeFrom(const packetc2w_ac_transfer& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
    if (from.has_gold()) {
      set_gold(from.gold());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packetc2w_ac_transfer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packetc2w_ac_transfer::CopyFrom(const packetc2w_ac_transfer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packetc2w_ac_transfer::IsInitialized() const {

  return true;
}

void packetc2w_ac_transfer::Swap(packetc2w_ac_transfer* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(gold_, other->gold_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packetc2w_ac_transfer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packetc2w_ac_transfer_descriptor_;
  metadata.reflection = packetc2w_ac_transfer_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int packetw2c_ac_transfer_result::kPacketIdFieldNumber;
const int packetw2c_ac_transfer_result::kResultFieldNumber;
const int packetw2c_ac_transfer_result::kGoldFieldNumber;
#endif  // !_MSC_VER

packetw2c_ac_transfer_result::packetw2c_ac_transfer_result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void packetw2c_ac_transfer_result::InitAsDefaultInstance() {
}

packetw2c_ac_transfer_result::packetw2c_ac_transfer_result(const packetw2c_ac_transfer_result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void packetw2c_ac_transfer_result::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 7582;
  result_ = 2;
  gold_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packetw2c_ac_transfer_result::~packetw2c_ac_transfer_result() {
  SharedDtor();
}

void packetw2c_ac_transfer_result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void packetw2c_ac_transfer_result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packetw2c_ac_transfer_result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packetw2c_ac_transfer_result_descriptor_;
}

const packetw2c_ac_transfer_result& packetw2c_ac_transfer_result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client2world_5fother_2eproto();
  return *default_instance_;
}

packetw2c_ac_transfer_result* packetw2c_ac_transfer_result::default_instance_ = NULL;

packetw2c_ac_transfer_result* packetw2c_ac_transfer_result::New() const {
  return new packetw2c_ac_transfer_result;
}

void packetw2c_ac_transfer_result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    packet_id_ = 7582;
    result_ = 2;
    gold_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packetw2c_ac_transfer_result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_ac_transfer_result];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::client2world_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::client2world_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_type_def::e_msg_result_def_IsValid(value)) {
            set_result(static_cast< ::msg_type_def::e_msg_result_def >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_gold;
        break;
      }

      // optional int64 gold = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &gold_)));
          set_has_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void packetw2c_ac_transfer_result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_ac_transfer_result];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->result(), output);
  }

  // optional int64 gold = 3;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->gold(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* packetw2c_ac_transfer_result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_ac_transfer_result];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->result(), target);
  }

  // optional int64 gold = 3;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->gold(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int packetw2c_ac_transfer_result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_ac_transfer_result];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

    // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

    // optional int64 gold = 3;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->gold());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packetw2c_ac_transfer_result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packetw2c_ac_transfer_result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packetw2c_ac_transfer_result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packetw2c_ac_transfer_result::MergeFrom(const packetw2c_ac_transfer_result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_gold()) {
      set_gold(from.gold());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packetw2c_ac_transfer_result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packetw2c_ac_transfer_result::CopyFrom(const packetw2c_ac_transfer_result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packetw2c_ac_transfer_result::IsInitialized() const {

  return true;
}

void packetw2c_ac_transfer_result::Swap(packetw2c_ac_transfer_result* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(result_, other->result_);
    std::swap(gold_, other->gold_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packetw2c_ac_transfer_result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packetw2c_ac_transfer_result_descriptor_;
  metadata.reflection = packetw2c_ac_transfer_result_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int packetc2w_ac_url::kPacketIdFieldNumber;
const int packetc2w_ac_url::kGoldFieldNumber;
const int packetc2w_ac_url::kPaytypeFieldNumber;
const int packetc2w_ac_url::kParamFieldNumber;
#endif  // !_MSC_VER

packetc2w_ac_url::packetc2w_ac_url()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void packetc2w_ac_url::InitAsDefaultInstance() {
}

packetc2w_ac_url::packetc2w_ac_url(const packetc2w_ac_url& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void packetc2w_ac_url::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 5077;
  gold_ = GOOGLE_LONGLONG(0);
  paytype_ = 1;
  param_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packetc2w_ac_url::~packetc2w_ac_url() {
  SharedDtor();
}

void packetc2w_ac_url::SharedDtor() {
  if (param_ != &::google::protobuf::internal::kEmptyString) {
    delete param_;
  }
  if (this != default_instance_) {
  }
}

void packetc2w_ac_url::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packetc2w_ac_url::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packetc2w_ac_url_descriptor_;
}

const packetc2w_ac_url& packetc2w_ac_url::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client2world_5fother_2eproto();
  return *default_instance_;
}

packetc2w_ac_url* packetc2w_ac_url::default_instance_ = NULL;

packetc2w_ac_url* packetc2w_ac_url::New() const {
  return new packetc2w_ac_url;
}

void packetc2w_ac_url::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    packet_id_ = 5077;
    gold_ = GOOGLE_LONGLONG(0);
    paytype_ = 1;
    if (has_param()) {
      if (param_ != &::google::protobuf::internal::kEmptyString) {
        param_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packetc2w_ac_url::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_ac_url];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::client2world_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::client2world_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_gold;
        break;
      }

      // optional int64 gold = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &gold_)));
          set_has_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_paytype;
        break;
      }

      // optional int32 paytype = 3 [default = 1];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_paytype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &paytype_)));
          set_has_paytype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_param;
        break;
      }

      // optional string param = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_param:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->param().data(), this->param().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void packetc2w_ac_url::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_ac_url];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  // optional int64 gold = 2;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->gold(), output);
  }

  // optional int32 paytype = 3 [default = 1];
  if (has_paytype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->paytype(), output);
  }

  // optional string param = 4;
  if (has_param()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->param().data(), this->param().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->param(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* packetc2w_ac_url::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_ac_url];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  // optional int64 gold = 2;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->gold(), target);
  }

  // optional int32 paytype = 3 [default = 1];
  if (has_paytype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->paytype(), target);
  }

  // optional string param = 4;
  if (has_param()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->param().data(), this->param().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->param(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int packetc2w_ac_url::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_ac_url];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

    // optional int64 gold = 2;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->gold());
    }

    // optional int32 paytype = 3 [default = 1];
    if (has_paytype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->paytype());
    }

    // optional string param = 4;
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->param());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packetc2w_ac_url::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packetc2w_ac_url* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packetc2w_ac_url*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packetc2w_ac_url::MergeFrom(const packetc2w_ac_url& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
    if (from.has_gold()) {
      set_gold(from.gold());
    }
    if (from.has_paytype()) {
      set_paytype(from.paytype());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packetc2w_ac_url::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packetc2w_ac_url::CopyFrom(const packetc2w_ac_url& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packetc2w_ac_url::IsInitialized() const {

  return true;
}

void packetc2w_ac_url::Swap(packetc2w_ac_url* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(gold_, other->gold_);
    std::swap(paytype_, other->paytype_);
    std::swap(param_, other->param_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packetc2w_ac_url::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packetc2w_ac_url_descriptor_;
  metadata.reflection = packetc2w_ac_url_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int packetw2c_ac_url_result::kPacketIdFieldNumber;
const int packetw2c_ac_url_result::kResultFieldNumber;
const int packetw2c_ac_url_result::kUrlFieldNumber;
const int packetw2c_ac_url_result::kOrderIdFieldNumber;
const int packetw2c_ac_url_result::kIsWebviewFieldNumber;
#endif  // !_MSC_VER

packetw2c_ac_url_result::packetw2c_ac_url_result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void packetw2c_ac_url_result::InitAsDefaultInstance() {
}

packetw2c_ac_url_result::packetw2c_ac_url_result(const packetw2c_ac_url_result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void packetw2c_ac_url_result::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 7583;
  result_ = 2;
  url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  order_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  is_webview_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packetw2c_ac_url_result::~packetw2c_ac_url_result() {
  SharedDtor();
}

void packetw2c_ac_url_result::SharedDtor() {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    delete url_;
  }
  if (order_id_ != &::google::protobuf::internal::kEmptyString) {
    delete order_id_;
  }
  if (this != default_instance_) {
  }
}

void packetw2c_ac_url_result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packetw2c_ac_url_result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packetw2c_ac_url_result_descriptor_;
}

const packetw2c_ac_url_result& packetw2c_ac_url_result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client2world_5fother_2eproto();
  return *default_instance_;
}

packetw2c_ac_url_result* packetw2c_ac_url_result::default_instance_ = NULL;

packetw2c_ac_url_result* packetw2c_ac_url_result::New() const {
  return new packetw2c_ac_url_result;
}

void packetw2c_ac_url_result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    packet_id_ = 7583;
    result_ = 2;
    if (has_url()) {
      if (url_ != &::google::protobuf::internal::kEmptyString) {
        url_->clear();
      }
    }
    if (has_order_id()) {
      if (order_id_ != &::google::protobuf::internal::kEmptyString) {
        order_id_->clear();
      }
    }
    is_webview_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packetw2c_ac_url_result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_ac_url_result];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::client2world_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::client2world_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_type_def::e_msg_result_def_IsValid(value)) {
            set_result(static_cast< ::msg_type_def::e_msg_result_def >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_url;
        break;
      }

      // optional string url = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_order_id;
        break;
      }

      // optional string order_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_order_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->order_id().data(), this->order_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_is_webview;
        break;
      }

      // optional bool is_webview = 5 [default = false];
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_webview:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_webview_)));
          set_has_is_webview();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void packetw2c_ac_url_result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_ac_url_result];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->result(), output);
  }

  // optional string url = 3;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->url(), output);
  }

  // optional string order_id = 4;
  if (has_order_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_id().data(), this->order_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->order_id(), output);
  }

  // optional bool is_webview = 5 [default = false];
  if (has_is_webview()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_webview(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* packetw2c_ac_url_result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_ac_url_result];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->result(), target);
  }

  // optional string url = 3;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->url(), target);
  }

  // optional string order_id = 4;
  if (has_order_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_id().data(), this->order_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->order_id(), target);
  }

  // optional bool is_webview = 5 [default = false];
  if (has_is_webview()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_webview(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int packetw2c_ac_url_result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_ac_url_result];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

    // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

    // optional string url = 3;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional string order_id = 4;
    if (has_order_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->order_id());
    }

    // optional bool is_webview = 5 [default = false];
    if (has_is_webview()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packetw2c_ac_url_result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packetw2c_ac_url_result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packetw2c_ac_url_result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packetw2c_ac_url_result::MergeFrom(const packetw2c_ac_url_result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_url()) {
      set_url(from.url());
    }
    if (from.has_order_id()) {
      set_order_id(from.order_id());
    }
    if (from.has_is_webview()) {
      set_is_webview(from.is_webview());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packetw2c_ac_url_result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packetw2c_ac_url_result::CopyFrom(const packetw2c_ac_url_result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packetw2c_ac_url_result::IsInitialized() const {

  return true;
}

void packetw2c_ac_url_result::Swap(packetw2c_ac_url_result* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(result_, other->result_);
    std::swap(url_, other->url_);
    std::swap(order_id_, other->order_id_);
    std::swap(is_webview_, other->is_webview_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packetw2c_ac_url_result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packetw2c_ac_url_result_descriptor_;
  metadata.reflection = packetw2c_ac_url_result_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int packetc2w_ask_check_payment::kPacketIdFieldNumber;
const int packetc2w_ask_check_payment::kOrderidFieldNumber;
#endif  // !_MSC_VER

packetc2w_ask_check_payment::packetc2w_ask_check_payment()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void packetc2w_ask_check_payment::InitAsDefaultInstance() {
}

packetc2w_ask_check_payment::packetc2w_ask_check_payment(const packetc2w_ask_check_payment& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void packetc2w_ask_check_payment::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 5006;
  orderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packetc2w_ask_check_payment::~packetc2w_ask_check_payment() {
  SharedDtor();
}

void packetc2w_ask_check_payment::SharedDtor() {
  if (orderid_ != &::google::protobuf::internal::kEmptyString) {
    delete orderid_;
  }
  if (this != default_instance_) {
  }
}

void packetc2w_ask_check_payment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packetc2w_ask_check_payment::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packetc2w_ask_check_payment_descriptor_;
}

const packetc2w_ask_check_payment& packetc2w_ask_check_payment::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client2world_5fother_2eproto();
  return *default_instance_;
}

packetc2w_ask_check_payment* packetc2w_ask_check_payment::default_instance_ = NULL;

packetc2w_ask_check_payment* packetc2w_ask_check_payment::New() const {
  return new packetc2w_ask_check_payment;
}

void packetc2w_ask_check_payment::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    packet_id_ = 5006;
    if (has_orderid()) {
      if (orderid_ != &::google::protobuf::internal::kEmptyString) {
        orderid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packetc2w_ask_check_payment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_ask_check_payment];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::client2world_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::client2world_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_orderid;
        break;
      }

      // optional string orderid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_orderid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orderid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->orderid().data(), this->orderid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void packetc2w_ask_check_payment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_ask_check_payment];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  // optional string orderid = 2;
  if (has_orderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->orderid().data(), this->orderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->orderid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* packetc2w_ask_check_payment::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_ask_check_payment];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  // optional string orderid = 2;
  if (has_orderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->orderid().data(), this->orderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->orderid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int packetc2w_ask_check_payment::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_ask_check_payment];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

    // optional string orderid = 2;
    if (has_orderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->orderid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packetc2w_ask_check_payment::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packetc2w_ask_check_payment* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packetc2w_ask_check_payment*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packetc2w_ask_check_payment::MergeFrom(const packetc2w_ask_check_payment& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
    if (from.has_orderid()) {
      set_orderid(from.orderid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packetc2w_ask_check_payment::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packetc2w_ask_check_payment::CopyFrom(const packetc2w_ask_check_payment& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packetc2w_ask_check_payment::IsInitialized() const {

  return true;
}

void packetc2w_ask_check_payment::Swap(packetc2w_ask_check_payment* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(orderid_, other->orderid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packetc2w_ask_check_payment::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packetc2w_ask_check_payment_descriptor_;
  metadata.reflection = packetc2w_ask_check_payment_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int packetc2w_ask_test_payment::kPacketIdFieldNumber;
const int packetc2w_ask_test_payment::kPayTypeFieldNumber;
const int packetc2w_ask_test_payment::kPayValueFieldNumber;
#endif  // !_MSC_VER

packetc2w_ask_test_payment::packetc2w_ask_test_payment()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void packetc2w_ask_test_payment::InitAsDefaultInstance() {
}

packetc2w_ask_test_payment::packetc2w_ask_test_payment(const packetc2w_ask_test_payment& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void packetc2w_ask_test_payment::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 5007;
  pay_type_ = 0;
  pay_value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packetc2w_ask_test_payment::~packetc2w_ask_test_payment() {
  SharedDtor();
}

void packetc2w_ask_test_payment::SharedDtor() {
  if (this != default_instance_) {
  }
}

void packetc2w_ask_test_payment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packetc2w_ask_test_payment::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packetc2w_ask_test_payment_descriptor_;
}

const packetc2w_ask_test_payment& packetc2w_ask_test_payment::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client2world_5fother_2eproto();
  return *default_instance_;
}

packetc2w_ask_test_payment* packetc2w_ask_test_payment::default_instance_ = NULL;

packetc2w_ask_test_payment* packetc2w_ask_test_payment::New() const {
  return new packetc2w_ask_test_payment;
}

void packetc2w_ask_test_payment::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    packet_id_ = 5007;
    pay_type_ = 0;
    pay_value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packetc2w_ask_test_payment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_ask_test_payment];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::client2world_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::client2world_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pay_type;
        break;
      }

      // optional int32 pay_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pay_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pay_type_)));
          set_has_pay_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pay_value;
        break;
      }

      // optional int32 pay_value = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pay_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pay_value_)));
          set_has_pay_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void packetc2w_ask_test_payment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_ask_test_payment];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  // optional int32 pay_type = 2;
  if (has_pay_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pay_type(), output);
  }

  // optional int32 pay_value = 3;
  if (has_pay_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pay_value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* packetc2w_ask_test_payment::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_ask_test_payment];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  // optional int32 pay_type = 2;
  if (has_pay_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pay_type(), target);
  }

  // optional int32 pay_value = 3;
  if (has_pay_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pay_value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int packetc2w_ask_test_payment::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_ask_test_payment];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

    // optional int32 pay_type = 2;
    if (has_pay_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pay_type());
    }

    // optional int32 pay_value = 3;
    if (has_pay_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pay_value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packetc2w_ask_test_payment::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packetc2w_ask_test_payment* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packetc2w_ask_test_payment*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packetc2w_ask_test_payment::MergeFrom(const packetc2w_ask_test_payment& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
    if (from.has_pay_type()) {
      set_pay_type(from.pay_type());
    }
    if (from.has_pay_value()) {
      set_pay_value(from.pay_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packetc2w_ask_test_payment::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packetc2w_ask_test_payment::CopyFrom(const packetc2w_ask_test_payment& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packetc2w_ask_test_payment::IsInitialized() const {

  return true;
}

void packetc2w_ask_test_payment::Swap(packetc2w_ask_test_payment* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(pay_type_, other->pay_type_);
    std::swap(pay_value_, other->pay_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packetc2w_ask_test_payment::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packetc2w_ask_test_payment_descriptor_;
  metadata.reflection = packetc2w_ask_test_payment_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int packetw2c_ask_check_payment_result::kPacketIdFieldNumber;
const int packetw2c_ask_check_payment_result::kResultFieldNumber;
const int packetw2c_ask_check_payment_result::kPayTypeFieldNumber;
const int packetw2c_ask_check_payment_result::kPayValueFieldNumber;
const int packetw2c_ask_check_payment_result::kVipExpFieldNumber;
const int packetw2c_ask_check_payment_result::kOrderidFieldNumber;
#endif  // !_MSC_VER

packetw2c_ask_check_payment_result::packetw2c_ask_check_payment_result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void packetw2c_ask_check_payment_result::InitAsDefaultInstance() {
}

packetw2c_ask_check_payment_result::packetw2c_ask_check_payment_result(const packetw2c_ask_check_payment_result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void packetw2c_ask_check_payment_result::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 7506;
  result_ = 2;
  pay_type_ = 0;
  pay_value_ = 0;
  vip_exp_ = 0;
  orderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packetw2c_ask_check_payment_result::~packetw2c_ask_check_payment_result() {
  SharedDtor();
}

void packetw2c_ask_check_payment_result::SharedDtor() {
  if (orderid_ != &::google::protobuf::internal::kEmptyString) {
    delete orderid_;
  }
  if (this != default_instance_) {
  }
}

void packetw2c_ask_check_payment_result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packetw2c_ask_check_payment_result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packetw2c_ask_check_payment_result_descriptor_;
}

const packetw2c_ask_check_payment_result& packetw2c_ask_check_payment_result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client2world_5fother_2eproto();
  return *default_instance_;
}

packetw2c_ask_check_payment_result* packetw2c_ask_check_payment_result::default_instance_ = NULL;

packetw2c_ask_check_payment_result* packetw2c_ask_check_payment_result::New() const {
  return new packetw2c_ask_check_payment_result;
}

void packetw2c_ask_check_payment_result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    packet_id_ = 7506;
    result_ = 2;
    pay_type_ = 0;
    pay_value_ = 0;
    vip_exp_ = 0;
    if (has_orderid()) {
      if (orderid_ != &::google::protobuf::internal::kEmptyString) {
        orderid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packetw2c_ask_check_payment_result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_ask_check_payment_result];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::client2world_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::client2world_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_type_def::e_msg_result_def_IsValid(value)) {
            set_result(static_cast< ::msg_type_def::e_msg_result_def >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pay_type;
        break;
      }

      // optional int32 pay_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pay_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pay_type_)));
          set_has_pay_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_pay_value;
        break;
      }

      // optional int32 pay_value = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pay_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pay_value_)));
          set_has_pay_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_vip_exp;
        break;
      }

      // optional int32 vip_exp = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_exp_)));
          set_has_vip_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_orderid;
        break;
      }

      // optional string orderid = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_orderid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orderid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->orderid().data(), this->orderid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void packetw2c_ask_check_payment_result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_ask_check_payment_result];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->result(), output);
  }

  // optional int32 pay_type = 3;
  if (has_pay_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pay_type(), output);
  }

  // optional int32 pay_value = 4;
  if (has_pay_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pay_value(), output);
  }

  // optional int32 vip_exp = 5;
  if (has_vip_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->vip_exp(), output);
  }

  // optional string orderid = 6;
  if (has_orderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->orderid().data(), this->orderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->orderid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* packetw2c_ask_check_payment_result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_ask_check_payment_result];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->result(), target);
  }

  // optional int32 pay_type = 3;
  if (has_pay_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pay_type(), target);
  }

  // optional int32 pay_value = 4;
  if (has_pay_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pay_value(), target);
  }

  // optional int32 vip_exp = 5;
  if (has_vip_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->vip_exp(), target);
  }

  // optional string orderid = 6;
  if (has_orderid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->orderid().data(), this->orderid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->orderid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int packetw2c_ask_check_payment_result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_ask_check_payment_result];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

    // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

    // optional int32 pay_type = 3;
    if (has_pay_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pay_type());
    }

    // optional int32 pay_value = 4;
    if (has_pay_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pay_value());
    }

    // optional int32 vip_exp = 5;
    if (has_vip_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_exp());
    }

    // optional string orderid = 6;
    if (has_orderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->orderid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packetw2c_ask_check_payment_result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packetw2c_ask_check_payment_result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packetw2c_ask_check_payment_result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packetw2c_ask_check_payment_result::MergeFrom(const packetw2c_ask_check_payment_result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_pay_type()) {
      set_pay_type(from.pay_type());
    }
    if (from.has_pay_value()) {
      set_pay_value(from.pay_value());
    }
    if (from.has_vip_exp()) {
      set_vip_exp(from.vip_exp());
    }
    if (from.has_orderid()) {
      set_orderid(from.orderid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packetw2c_ask_check_payment_result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packetw2c_ask_check_payment_result::CopyFrom(const packetw2c_ask_check_payment_result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packetw2c_ask_check_payment_result::IsInitialized() const {

  return true;
}

void packetw2c_ask_check_payment_result::Swap(packetw2c_ask_check_payment_result* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(result_, other->result_);
    std::swap(pay_type_, other->pay_type_);
    std::swap(pay_value_, other->pay_value_);
    std::swap(vip_exp_, other->vip_exp_);
    std::swap(orderid_, other->orderid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packetw2c_ask_check_payment_result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packetw2c_ask_check_payment_result_descriptor_;
  metadata.reflection = packetw2c_ask_check_payment_result_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int msg_bank_info::kCodeFieldNumber;
const int msg_bank_info::kNameFieldNumber;
const int msg_bank_info::kOpenFieldNumber;
#endif  // !_MSC_VER

msg_bank_info::msg_bank_info()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void msg_bank_info::InitAsDefaultInstance() {
}

msg_bank_info::msg_bank_info(const msg_bank_info& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void msg_bank_info::SharedCtor() {
  _cached_size_ = 0;
  code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  open_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

msg_bank_info::~msg_bank_info() {
  SharedDtor();
}

void msg_bank_info::SharedDtor() {
  if (code_ != &::google::protobuf::internal::kEmptyString) {
    delete code_;
  }
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void msg_bank_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* msg_bank_info::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return msg_bank_info_descriptor_;
}

const msg_bank_info& msg_bank_info::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client2world_5fother_2eproto();
  return *default_instance_;
}

msg_bank_info* msg_bank_info::default_instance_ = NULL;

msg_bank_info* msg_bank_info::New() const {
  return new msg_bank_info;
}

void msg_bank_info::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_code()) {
      if (code_ != &::google::protobuf::internal::kEmptyString) {
        code_->clear();
      }
    }
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    open_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool msg_bank_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_open;
        break;
      }

      // optional bool open = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_open:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &open_)));
          set_has_open();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void msg_bank_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string code = 1;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->code(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }

  // optional bool open = 3;
  if (has_open()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->open(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* msg_bank_info::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string code = 1;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->code(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional bool open = 3;
  if (has_open()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->open(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int msg_bank_info::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->code());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional bool open = 3;
    if (has_open()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void msg_bank_info::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const msg_bank_info* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const msg_bank_info*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void msg_bank_info::MergeFrom(const msg_bank_info& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_code()) {
      set_code(from.code());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_open()) {
      set_open(from.open());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void msg_bank_info::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void msg_bank_info::CopyFrom(const msg_bank_info& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool msg_bank_info::IsInitialized() const {

  return true;
}

void msg_bank_info::Swap(msg_bank_info* other) {
  if (other != this) {
    std::swap(code_, other->code_);
    std::swap(name_, other->name_);
    std::swap(open_, other->open_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata msg_bank_info::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = msg_bank_info_descriptor_;
  metadata.reflection = msg_bank_info_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int packetc2w_req_bank_list::kPacketIdFieldNumber;
#endif  // !_MSC_VER

packetc2w_req_bank_list::packetc2w_req_bank_list()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void packetc2w_req_bank_list::InitAsDefaultInstance() {
}

packetc2w_req_bank_list::packetc2w_req_bank_list(const packetc2w_req_bank_list& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void packetc2w_req_bank_list::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 5099;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packetc2w_req_bank_list::~packetc2w_req_bank_list() {
  SharedDtor();
}

void packetc2w_req_bank_list::SharedDtor() {
  if (this != default_instance_) {
  }
}

void packetc2w_req_bank_list::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packetc2w_req_bank_list::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packetc2w_req_bank_list_descriptor_;
}

const packetc2w_req_bank_list& packetc2w_req_bank_list::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client2world_5fother_2eproto();
  return *default_instance_;
}

packetc2w_req_bank_list* packetc2w_req_bank_list::default_instance_ = NULL;

packetc2w_req_bank_list* packetc2w_req_bank_list::New() const {
  return new packetc2w_req_bank_list;
}

void packetc2w_req_bank_list::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    packet_id_ = 5099;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packetc2w_req_bank_list::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_req_bank_list];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::client2world_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::client2world_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void packetc2w_req_bank_list::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_req_bank_list];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* packetc2w_req_bank_list::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_req_bank_list];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int packetc2w_req_bank_list::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_req_bank_list];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packetc2w_req_bank_list::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packetc2w_req_bank_list* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packetc2w_req_bank_list*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packetc2w_req_bank_list::MergeFrom(const packetc2w_req_bank_list& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packetc2w_req_bank_list::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packetc2w_req_bank_list::CopyFrom(const packetc2w_req_bank_list& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packetc2w_req_bank_list::IsInitialized() const {

  return true;
}

void packetc2w_req_bank_list::Swap(packetc2w_req_bank_list* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packetc2w_req_bank_list::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packetc2w_req_bank_list_descriptor_;
  metadata.reflection = packetc2w_req_bank_list_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int packetw2c_req_bank_list_result::kPacketIdFieldNumber;
const int packetw2c_req_bank_list_result::kBankListFieldNumber;
#endif  // !_MSC_VER

packetw2c_req_bank_list_result::packetw2c_req_bank_list_result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void packetw2c_req_bank_list_result::InitAsDefaultInstance() {
}

packetw2c_req_bank_list_result::packetw2c_req_bank_list_result(const packetw2c_req_bank_list_result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void packetw2c_req_bank_list_result::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 7608;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packetw2c_req_bank_list_result::~packetw2c_req_bank_list_result() {
  SharedDtor();
}

void packetw2c_req_bank_list_result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void packetw2c_req_bank_list_result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packetw2c_req_bank_list_result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packetw2c_req_bank_list_result_descriptor_;
}

const packetw2c_req_bank_list_result& packetw2c_req_bank_list_result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client2world_5fother_2eproto();
  return *default_instance_;
}

packetw2c_req_bank_list_result* packetw2c_req_bank_list_result::default_instance_ = NULL;

packetw2c_req_bank_list_result* packetw2c_req_bank_list_result::New() const {
  return new packetw2c_req_bank_list_result;
}

void packetw2c_req_bank_list_result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    packet_id_ = 7608;
  }
  bank_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packetw2c_req_bank_list_result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_req_bank_list_result];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::client2world_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::client2world_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bank_list;
        break;
      }

      // repeated .client2world_protocols.msg_bank_info bank_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bank_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bank_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bank_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void packetw2c_req_bank_list_result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_req_bank_list_result];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  // repeated .client2world_protocols.msg_bank_info bank_list = 2;
  for (int i = 0; i < this->bank_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bank_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* packetw2c_req_bank_list_result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_req_bank_list_result];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  // repeated .client2world_protocols.msg_bank_info bank_list = 2;
  for (int i = 0; i < this->bank_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bank_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int packetw2c_req_bank_list_result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_req_bank_list_result];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

  }
  // repeated .client2world_protocols.msg_bank_info bank_list = 2;
  total_size += 1 * this->bank_list_size();
  for (int i = 0; i < this->bank_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bank_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packetw2c_req_bank_list_result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packetw2c_req_bank_list_result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packetw2c_req_bank_list_result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packetw2c_req_bank_list_result::MergeFrom(const packetw2c_req_bank_list_result& from) {
  GOOGLE_CHECK_NE(&from, this);
  bank_list_.MergeFrom(from.bank_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packetw2c_req_bank_list_result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packetw2c_req_bank_list_result::CopyFrom(const packetw2c_req_bank_list_result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packetw2c_req_bank_list_result::IsInitialized() const {

  return true;
}

void packetw2c_req_bank_list_result::Swap(packetw2c_req_bank_list_result* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    bank_list_.Swap(&other->bank_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packetw2c_req_bank_list_result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packetw2c_req_bank_list_result_descriptor_;
  metadata.reflection = packetw2c_req_bank_list_result_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int packetc2w_bind_bank_card::kPacketIdFieldNumber;
const int packetc2w_bind_bank_card::kNameFieldNumber;
const int packetc2w_bind_bank_card::kCardNumberFieldNumber;
const int packetc2w_bind_bank_card::kIdentityNumberFieldNumber;
const int packetc2w_bind_bank_card::kBankNameFieldNumber;
const int packetc2w_bind_bank_card::kCardNumber2FieldNumber;
const int packetc2w_bind_bank_card::kPhoneNumberFieldNumber;
#endif  // !_MSC_VER

packetc2w_bind_bank_card::packetc2w_bind_bank_card()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void packetc2w_bind_bank_card::InitAsDefaultInstance() {
}

packetc2w_bind_bank_card::packetc2w_bind_bank_card(const packetc2w_bind_bank_card& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void packetc2w_bind_bank_card::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 5095;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  card_number_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  identity_number_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bank_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  card_number2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  phone_number_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packetc2w_bind_bank_card::~packetc2w_bind_bank_card() {
  SharedDtor();
}

void packetc2w_bind_bank_card::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (card_number_ != &::google::protobuf::internal::kEmptyString) {
    delete card_number_;
  }
  if (identity_number_ != &::google::protobuf::internal::kEmptyString) {
    delete identity_number_;
  }
  if (bank_name_ != &::google::protobuf::internal::kEmptyString) {
    delete bank_name_;
  }
  if (card_number2_ != &::google::protobuf::internal::kEmptyString) {
    delete card_number2_;
  }
  if (phone_number_ != &::google::protobuf::internal::kEmptyString) {
    delete phone_number_;
  }
  if (this != default_instance_) {
  }
}

void packetc2w_bind_bank_card::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packetc2w_bind_bank_card::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packetc2w_bind_bank_card_descriptor_;
}

const packetc2w_bind_bank_card& packetc2w_bind_bank_card::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client2world_5fother_2eproto();
  return *default_instance_;
}

packetc2w_bind_bank_card* packetc2w_bind_bank_card::default_instance_ = NULL;

packetc2w_bind_bank_card* packetc2w_bind_bank_card::New() const {
  return new packetc2w_bind_bank_card;
}

void packetc2w_bind_bank_card::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    packet_id_ = 5095;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_card_number()) {
      if (card_number_ != &::google::protobuf::internal::kEmptyString) {
        card_number_->clear();
      }
    }
    if (has_identity_number()) {
      if (identity_number_ != &::google::protobuf::internal::kEmptyString) {
        identity_number_->clear();
      }
    }
    if (has_bank_name()) {
      if (bank_name_ != &::google::protobuf::internal::kEmptyString) {
        bank_name_->clear();
      }
    }
    if (has_card_number2()) {
      if (card_number2_ != &::google::protobuf::internal::kEmptyString) {
        card_number2_->clear();
      }
    }
    if (has_phone_number()) {
      if (phone_number_ != &::google::protobuf::internal::kEmptyString) {
        phone_number_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packetc2w_bind_bank_card::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_bind_bank_card];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::client2world_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::client2world_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_card_number;
        break;
      }

      // optional string card_number = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_card_number:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_card_number()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->card_number().data(), this->card_number().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_identity_number;
        break;
      }

      // optional string identity_number = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_identity_number:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_identity_number()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->identity_number().data(), this->identity_number().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_bank_name;
        break;
      }

      // optional string bank_name = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bank_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bank_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bank_name().data(), this->bank_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_card_number2;
        break;
      }

      // optional string card_number2 = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_card_number2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_card_number2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->card_number2().data(), this->card_number2().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_phone_number;
        break;
      }

      // optional string phone_number = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_phone_number:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone_number()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->phone_number().data(), this->phone_number().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void packetc2w_bind_bank_card::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_bind_bank_card];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }

  // optional string card_number = 3;
  if (has_card_number()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->card_number().data(), this->card_number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->card_number(), output);
  }

  // optional string identity_number = 4;
  if (has_identity_number()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->identity_number().data(), this->identity_number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->identity_number(), output);
  }

  // optional string bank_name = 5;
  if (has_bank_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bank_name().data(), this->bank_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->bank_name(), output);
  }

  // optional string card_number2 = 6;
  if (has_card_number2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->card_number2().data(), this->card_number2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->card_number2(), output);
  }

  // optional string phone_number = 7;
  if (has_phone_number()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->phone_number().data(), this->phone_number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->phone_number(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* packetc2w_bind_bank_card::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_bind_bank_card];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string card_number = 3;
  if (has_card_number()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->card_number().data(), this->card_number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->card_number(), target);
  }

  // optional string identity_number = 4;
  if (has_identity_number()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->identity_number().data(), this->identity_number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->identity_number(), target);
  }

  // optional string bank_name = 5;
  if (has_bank_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bank_name().data(), this->bank_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->bank_name(), target);
  }

  // optional string card_number2 = 6;
  if (has_card_number2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->card_number2().data(), this->card_number2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->card_number2(), target);
  }

  // optional string phone_number = 7;
  if (has_phone_number()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->phone_number().data(), this->phone_number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->phone_number(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int packetc2w_bind_bank_card::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_bind_bank_card];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string card_number = 3;
    if (has_card_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->card_number());
    }

    // optional string identity_number = 4;
    if (has_identity_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->identity_number());
    }

    // optional string bank_name = 5;
    if (has_bank_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bank_name());
    }

    // optional string card_number2 = 6;
    if (has_card_number2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->card_number2());
    }

    // optional string phone_number = 7;
    if (has_phone_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phone_number());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packetc2w_bind_bank_card::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packetc2w_bind_bank_card* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packetc2w_bind_bank_card*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packetc2w_bind_bank_card::MergeFrom(const packetc2w_bind_bank_card& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_card_number()) {
      set_card_number(from.card_number());
    }
    if (from.has_identity_number()) {
      set_identity_number(from.identity_number());
    }
    if (from.has_bank_name()) {
      set_bank_name(from.bank_name());
    }
    if (from.has_card_number2()) {
      set_card_number2(from.card_number2());
    }
    if (from.has_phone_number()) {
      set_phone_number(from.phone_number());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packetc2w_bind_bank_card::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packetc2w_bind_bank_card::CopyFrom(const packetc2w_bind_bank_card& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packetc2w_bind_bank_card::IsInitialized() const {

  return true;
}

void packetc2w_bind_bank_card::Swap(packetc2w_bind_bank_card* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(name_, other->name_);
    std::swap(card_number_, other->card_number_);
    std::swap(identity_number_, other->identity_number_);
    std::swap(bank_name_, other->bank_name_);
    std::swap(card_number2_, other->card_number2_);
    std::swap(phone_number_, other->phone_number_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packetc2w_bind_bank_card::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packetc2w_bind_bank_card_descriptor_;
  metadata.reflection = packetc2w_bind_bank_card_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int packetw2c_bind_bank_card_result::kPacketIdFieldNumber;
const int packetw2c_bind_bank_card_result::kResultFieldNumber;
const int packetw2c_bind_bank_card_result::kErrorInfoFieldNumber;
#endif  // !_MSC_VER

packetw2c_bind_bank_card_result::packetw2c_bind_bank_card_result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void packetw2c_bind_bank_card_result::InitAsDefaultInstance() {
}

packetw2c_bind_bank_card_result::packetw2c_bind_bank_card_result(const packetw2c_bind_bank_card_result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void packetw2c_bind_bank_card_result::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 7604;
  result_ = 2;
  error_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packetw2c_bind_bank_card_result::~packetw2c_bind_bank_card_result() {
  SharedDtor();
}

void packetw2c_bind_bank_card_result::SharedDtor() {
  if (error_info_ != &::google::protobuf::internal::kEmptyString) {
    delete error_info_;
  }
  if (this != default_instance_) {
  }
}

void packetw2c_bind_bank_card_result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packetw2c_bind_bank_card_result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packetw2c_bind_bank_card_result_descriptor_;
}

const packetw2c_bind_bank_card_result& packetw2c_bind_bank_card_result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client2world_5fother_2eproto();
  return *default_instance_;
}

packetw2c_bind_bank_card_result* packetw2c_bind_bank_card_result::default_instance_ = NULL;

packetw2c_bind_bank_card_result* packetw2c_bind_bank_card_result::New() const {
  return new packetw2c_bind_bank_card_result;
}

void packetw2c_bind_bank_card_result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    packet_id_ = 7604;
    result_ = 2;
    if (has_error_info()) {
      if (error_info_ != &::google::protobuf::internal::kEmptyString) {
        error_info_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packetw2c_bind_bank_card_result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_bind_bank_card_result];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::client2world_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::client2world_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_type_def::e_msg_result_def_IsValid(value)) {
            set_result(static_cast< ::msg_type_def::e_msg_result_def >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_error_info;
        break;
      }

      // optional string error_info = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_error_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_info()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->error_info().data(), this->error_info().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void packetw2c_bind_bank_card_result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_bind_bank_card_result];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->result(), output);
  }

  // optional string error_info = 3;
  if (has_error_info()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->error_info().data(), this->error_info().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->error_info(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* packetw2c_bind_bank_card_result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_bind_bank_card_result];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->result(), target);
  }

  // optional string error_info = 3;
  if (has_error_info()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->error_info().data(), this->error_info().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error_info(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int packetw2c_bind_bank_card_result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_bind_bank_card_result];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

    // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

    // optional string error_info = 3;
    if (has_error_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error_info());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packetw2c_bind_bank_card_result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packetw2c_bind_bank_card_result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packetw2c_bind_bank_card_result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packetw2c_bind_bank_card_result::MergeFrom(const packetw2c_bind_bank_card_result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_error_info()) {
      set_error_info(from.error_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packetw2c_bind_bank_card_result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packetw2c_bind_bank_card_result::CopyFrom(const packetw2c_bind_bank_card_result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packetw2c_bind_bank_card_result::IsInitialized() const {

  return true;
}

void packetw2c_bind_bank_card_result::Swap(packetw2c_bind_bank_card_result* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(result_, other->result_);
    std::swap(error_info_, other->error_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packetw2c_bind_bank_card_result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packetw2c_bind_bank_card_result_descriptor_;
  metadata.reflection = packetw2c_bind_bank_card_result_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int packetc2w_req_bank_card::kPacketIdFieldNumber;
#endif  // !_MSC_VER

packetc2w_req_bank_card::packetc2w_req_bank_card()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void packetc2w_req_bank_card::InitAsDefaultInstance() {
}

packetc2w_req_bank_card::packetc2w_req_bank_card(const packetc2w_req_bank_card& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void packetc2w_req_bank_card::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 5096;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packetc2w_req_bank_card::~packetc2w_req_bank_card() {
  SharedDtor();
}

void packetc2w_req_bank_card::SharedDtor() {
  if (this != default_instance_) {
  }
}

void packetc2w_req_bank_card::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packetc2w_req_bank_card::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packetc2w_req_bank_card_descriptor_;
}

const packetc2w_req_bank_card& packetc2w_req_bank_card::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client2world_5fother_2eproto();
  return *default_instance_;
}

packetc2w_req_bank_card* packetc2w_req_bank_card::default_instance_ = NULL;

packetc2w_req_bank_card* packetc2w_req_bank_card::New() const {
  return new packetc2w_req_bank_card;
}

void packetc2w_req_bank_card::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    packet_id_ = 5096;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packetc2w_req_bank_card::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_req_bank_card];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::client2world_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::client2world_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void packetc2w_req_bank_card::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_req_bank_card];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* packetc2w_req_bank_card::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_req_bank_card];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int packetc2w_req_bank_card::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_req_bank_card];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packetc2w_req_bank_card::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packetc2w_req_bank_card* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packetc2w_req_bank_card*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packetc2w_req_bank_card::MergeFrom(const packetc2w_req_bank_card& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packetc2w_req_bank_card::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packetc2w_req_bank_card::CopyFrom(const packetc2w_req_bank_card& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packetc2w_req_bank_card::IsInitialized() const {

  return true;
}

void packetc2w_req_bank_card::Swap(packetc2w_req_bank_card* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packetc2w_req_bank_card::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packetc2w_req_bank_card_descriptor_;
  metadata.reflection = packetc2w_req_bank_card_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int packetw2c_req_bank_card_result::kPacketIdFieldNumber;
const int packetw2c_req_bank_card_result::kResultFieldNumber;
const int packetw2c_req_bank_card_result::kNameFieldNumber;
const int packetw2c_req_bank_card_result::kCardNumberFieldNumber;
const int packetw2c_req_bank_card_result::kBankNameFieldNumber;
#endif  // !_MSC_VER

packetw2c_req_bank_card_result::packetw2c_req_bank_card_result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void packetw2c_req_bank_card_result::InitAsDefaultInstance() {
}

packetw2c_req_bank_card_result::packetw2c_req_bank_card_result(const packetw2c_req_bank_card_result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void packetw2c_req_bank_card_result::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 7605;
  result_ = 2;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  card_number_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bank_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packetw2c_req_bank_card_result::~packetw2c_req_bank_card_result() {
  SharedDtor();
}

void packetw2c_req_bank_card_result::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (card_number_ != &::google::protobuf::internal::kEmptyString) {
    delete card_number_;
  }
  if (bank_name_ != &::google::protobuf::internal::kEmptyString) {
    delete bank_name_;
  }
  if (this != default_instance_) {
  }
}

void packetw2c_req_bank_card_result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packetw2c_req_bank_card_result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packetw2c_req_bank_card_result_descriptor_;
}

const packetw2c_req_bank_card_result& packetw2c_req_bank_card_result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client2world_5fother_2eproto();
  return *default_instance_;
}

packetw2c_req_bank_card_result* packetw2c_req_bank_card_result::default_instance_ = NULL;

packetw2c_req_bank_card_result* packetw2c_req_bank_card_result::New() const {
  return new packetw2c_req_bank_card_result;
}

void packetw2c_req_bank_card_result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    packet_id_ = 7605;
    result_ = 2;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_card_number()) {
      if (card_number_ != &::google::protobuf::internal::kEmptyString) {
        card_number_->clear();
      }
    }
    if (has_bank_name()) {
      if (bank_name_ != &::google::protobuf::internal::kEmptyString) {
        bank_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packetw2c_req_bank_card_result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_req_bank_card_result];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::client2world_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::client2world_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_type_def::e_msg_result_def_IsValid(value)) {
            set_result(static_cast< ::msg_type_def::e_msg_result_def >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_card_number;
        break;
      }

      // optional string card_number = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_card_number:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_card_number()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->card_number().data(), this->card_number().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_bank_name;
        break;
      }

      // optional string bank_name = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bank_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bank_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->bank_name().data(), this->bank_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void packetw2c_req_bank_card_result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_req_bank_card_result];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->result(), output);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->name(), output);
  }

  // optional string card_number = 4;
  if (has_card_number()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->card_number().data(), this->card_number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->card_number(), output);
  }

  // optional string bank_name = 5;
  if (has_bank_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bank_name().data(), this->bank_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->bank_name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* packetw2c_req_bank_card_result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_req_bank_card_result];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->result(), target);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional string card_number = 4;
  if (has_card_number()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->card_number().data(), this->card_number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->card_number(), target);
  }

  // optional string bank_name = 5;
  if (has_bank_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->bank_name().data(), this->bank_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->bank_name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int packetw2c_req_bank_card_result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_req_bank_card_result];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

    // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string card_number = 4;
    if (has_card_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->card_number());
    }

    // optional string bank_name = 5;
    if (has_bank_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bank_name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packetw2c_req_bank_card_result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packetw2c_req_bank_card_result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packetw2c_req_bank_card_result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packetw2c_req_bank_card_result::MergeFrom(const packetw2c_req_bank_card_result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_card_number()) {
      set_card_number(from.card_number());
    }
    if (from.has_bank_name()) {
      set_bank_name(from.bank_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packetw2c_req_bank_card_result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packetw2c_req_bank_card_result::CopyFrom(const packetw2c_req_bank_card_result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packetw2c_req_bank_card_result::IsInitialized() const {

  return true;
}

void packetw2c_req_bank_card_result::Swap(packetw2c_req_bank_card_result* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(result_, other->result_);
    std::swap(name_, other->name_);
    std::swap(card_number_, other->card_number_);
    std::swap(bank_name_, other->bank_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packetw2c_req_bank_card_result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packetw2c_req_bank_card_result_descriptor_;
  metadata.reflection = packetw2c_req_bank_card_result_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace client2world_protocols

// @@protoc_insertion_point(global_scope)
