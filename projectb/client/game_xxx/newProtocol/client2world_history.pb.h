// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2world_history.proto

#ifndef PROTOBUF_client2world_5fhistory_2eproto__INCLUDED
#define PROTOBUF_client2world_5fhistory_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "client2world_msg_type.pb.h"
#include "msg_type_def.pb.h"
#include "msg_info_def.pb.h"
// @@protoc_insertion_point(includes)

namespace client2world_protocols {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_client2world_5fhistory_2eproto();
void protobuf_AssignDesc_client2world_5fhistory_2eproto();
void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

class msg_baccarat_history;
class msg_baccarat_room_history;
class packetc2w_baccarat_history;
class packetw2c_baccarat_history_result;
class msg_cows_history;
class msg_cows_room_history;
class packetc2w_cows_history;
class packetw2c_cows_history_result;
class msg_dice_history;
class msg_dice_room_history;
class packetc2w_dice_history;
class packetw2c_dice_history_result;
class msg_ebg_history;
class msg_ebg_room_history;
class packetc2w_ebg_history;
class packetw2c_ebg_history_result;
class msg_goldshark_room_history;
class packetc2w_goldshark_history;
class packetw2c_goldshark_history_result;
class msg_multitexas_history;
class msg_multitexas_room_history;
class packetc2w_multitexas_history;
class packetw2c_multitexas_history_result;
class msg_shcd_history;
class msg_shcd_room_history;
class packetc2w_shcd_history;
class packetw2c_shcd_history_result;
class msg_benzbmw_room_history;
class packetc2w_benzbmw_history;
class packetw2c_benzbmw_history_result;
class msg_forestball_room_history;
class packetc2w_forestball_history;
class packetw2c_forestball_history_result;
class msg_fruits_room_history;
class packetc2w_fruits_history;
class packetw2c_fruits_history_result;
class msg_lhd_room_history;
class packetc2w_lhd_history;
class packetw2c_lhd_history_result;
class msg_multiredblack_room_history;
class packetc2w_multiredblack_history;
class packetw2c_multiredblack_history_result;
class happySupremacy_history_info;
class msg_happySupremacy_room_history;
class packetc2w_happySupremacy_history;
class packetw2c_happySupremacy_history_result;
class msg_carsmagnate_room_history;
class packetc2w_carsmagnate_history;
class packetw2c_carsmagnate_history_result;
class msg_fourcolorball_room_history;
class packetc2w_fourcolorball_history;
class packetw2c_fourcolorball_history_result;

// ===================================================================

class msg_baccarat_history : public ::google::protobuf::Message {
 public:
  msg_baccarat_history();
  virtual ~msg_baccarat_history();

  msg_baccarat_history(const msg_baccarat_history& from);

  inline msg_baccarat_history& operator=(const msg_baccarat_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_baccarat_history& default_instance();

  void Swap(msg_baccarat_history* other);

  // implements Message ----------------------------------------------

  msg_baccarat_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_baccarat_history& from);
  void MergeFrom(const msg_baccarat_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool is_tie = 1;
  inline bool has_is_tie() const;
  inline void clear_is_tie();
  static const int kIsTieFieldNumber = 1;
  inline bool is_tie() const;
  inline void set_is_tie(bool value);

  // optional bool is_player_win = 2;
  inline bool has_is_player_win() const;
  inline void clear_is_player_win();
  static const int kIsPlayerWinFieldNumber = 2;
  inline bool is_player_win() const;
  inline void set_is_player_win(bool value);

  // optional bool is_player_pair = 3;
  inline bool has_is_player_pair() const;
  inline void clear_is_player_pair();
  static const int kIsPlayerPairFieldNumber = 3;
  inline bool is_player_pair() const;
  inline void set_is_player_pair(bool value);

  // optional bool is_banker_pair = 4;
  inline bool has_is_banker_pair() const;
  inline void clear_is_banker_pair();
  static const int kIsBankerPairFieldNumber = 4;
  inline bool is_banker_pair() const;
  inline void set_is_banker_pair(bool value);

  // optional bool is_banker_win = 5;
  inline bool has_is_banker_win() const;
  inline void clear_is_banker_win();
  static const int kIsBankerWinFieldNumber = 5;
  inline bool is_banker_win() const;
  inline void set_is_banker_win(bool value);

  // optional int32 win_point = 6;
  inline bool has_win_point() const;
  inline void clear_win_point();
  static const int kWinPointFieldNumber = 6;
  inline ::google::protobuf::int32 win_point() const;
  inline void set_win_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.msg_baccarat_history)
 private:
  inline void set_has_is_tie();
  inline void clear_has_is_tie();
  inline void set_has_is_player_win();
  inline void clear_has_is_player_win();
  inline void set_has_is_player_pair();
  inline void clear_has_is_player_pair();
  inline void set_has_is_banker_pair();
  inline void clear_has_is_banker_pair();
  inline void set_has_is_banker_win();
  inline void clear_has_is_banker_win();
  inline void set_has_win_point();
  inline void clear_has_win_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool is_tie_;
  bool is_player_win_;
  bool is_player_pair_;
  bool is_banker_pair_;
  bool is_banker_win_;
  ::google::protobuf::int32 win_point_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static msg_baccarat_history* default_instance_;
};
// -------------------------------------------------------------------

class msg_baccarat_room_history : public ::google::protobuf::Message {
 public:
  msg_baccarat_room_history();
  virtual ~msg_baccarat_room_history();

  msg_baccarat_room_history(const msg_baccarat_room_history& from);

  inline msg_baccarat_room_history& operator=(const msg_baccarat_room_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_baccarat_room_history& default_instance();

  void Swap(msg_baccarat_room_history* other);

  // implements Message ----------------------------------------------

  msg_baccarat_room_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_baccarat_room_history& from);
  void MergeFrom(const msg_baccarat_room_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::int32 room_id() const;
  inline void set_room_id(::google::protobuf::int32 value);

  // repeated .client2world_protocols.msg_baccarat_history history_list = 8;
  inline int history_list_size() const;
  inline void clear_history_list();
  static const int kHistoryListFieldNumber = 8;
  inline const ::client2world_protocols::msg_baccarat_history& history_list(int index) const;
  inline ::client2world_protocols::msg_baccarat_history* mutable_history_list(int index);
  inline ::client2world_protocols::msg_baccarat_history* add_history_list();
  inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_baccarat_history >&
      history_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_baccarat_history >*
      mutable_history_list();

  // @@protoc_insertion_point(class_scope:client2world_protocols.msg_baccarat_room_history)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_baccarat_history > history_list_;
  ::google::protobuf::int32 room_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static msg_baccarat_room_history* default_instance_;
};
// -------------------------------------------------------------------

class packetc2w_baccarat_history : public ::google::protobuf::Message {
 public:
  packetc2w_baccarat_history();
  virtual ~packetc2w_baccarat_history();

  packetc2w_baccarat_history(const packetc2w_baccarat_history& from);

  inline packetc2w_baccarat_history& operator=(const packetc2w_baccarat_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2w_baccarat_history& default_instance();

  void Swap(packetc2w_baccarat_history* other);

  // implements Message ----------------------------------------------

  packetc2w_baccarat_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2w_baccarat_history& from);
  void MergeFrom(const packetc2w_baccarat_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_baccarat_history];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetc2w_baccarat_history)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static packetc2w_baccarat_history* default_instance_;
};
// -------------------------------------------------------------------

class packetw2c_baccarat_history_result : public ::google::protobuf::Message {
 public:
  packetw2c_baccarat_history_result();
  virtual ~packetw2c_baccarat_history_result();

  packetw2c_baccarat_history_result(const packetw2c_baccarat_history_result& from);

  inline packetw2c_baccarat_history_result& operator=(const packetw2c_baccarat_history_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetw2c_baccarat_history_result& default_instance();

  void Swap(packetw2c_baccarat_history_result* other);

  // implements Message ----------------------------------------------

  packetw2c_baccarat_history_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetw2c_baccarat_history_result& from);
  void MergeFrom(const packetw2c_baccarat_history_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_baccarat_history_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // repeated .client2world_protocols.msg_baccarat_room_history room_history = 2;
  inline int room_history_size() const;
  inline void clear_room_history();
  static const int kRoomHistoryFieldNumber = 2;
  inline const ::client2world_protocols::msg_baccarat_room_history& room_history(int index) const;
  inline ::client2world_protocols::msg_baccarat_room_history* mutable_room_history(int index);
  inline ::client2world_protocols::msg_baccarat_room_history* add_room_history();
  inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_baccarat_room_history >&
      room_history() const;
  inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_baccarat_room_history >*
      mutable_room_history();

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetw2c_baccarat_history_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_baccarat_room_history > room_history_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static packetw2c_baccarat_history_result* default_instance_;
};
// -------------------------------------------------------------------

class msg_cows_history : public ::google::protobuf::Message {
 public:
  msg_cows_history();
  virtual ~msg_cows_history();

  msg_cows_history(const msg_cows_history& from);

  inline msg_cows_history& operator=(const msg_cows_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_cows_history& default_instance();

  void Swap(msg_cows_history* other);

  // implements Message ----------------------------------------------

  msg_cows_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_cows_history& from);
  void MergeFrom(const msg_cows_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bool is_win = 1;
  inline int is_win_size() const;
  inline void clear_is_win();
  static const int kIsWinFieldNumber = 1;
  inline bool is_win(int index) const;
  inline void set_is_win(int index, bool value);
  inline void add_is_win(bool value);
  inline const ::google::protobuf::RepeatedField< bool >&
      is_win() const;
  inline ::google::protobuf::RepeatedField< bool >*
      mutable_is_win();

  // @@protoc_insertion_point(class_scope:client2world_protocols.msg_cows_history)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< bool > is_win_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static msg_cows_history* default_instance_;
};
// -------------------------------------------------------------------

class msg_cows_room_history : public ::google::protobuf::Message {
 public:
  msg_cows_room_history();
  virtual ~msg_cows_room_history();

  msg_cows_room_history(const msg_cows_room_history& from);

  inline msg_cows_room_history& operator=(const msg_cows_room_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_cows_room_history& default_instance();

  void Swap(msg_cows_room_history* other);

  // implements Message ----------------------------------------------

  msg_cows_room_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_cows_room_history& from);
  void MergeFrom(const msg_cows_room_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::int32 room_id() const;
  inline void set_room_id(::google::protobuf::int32 value);

  // optional int32 total_count = 2;
  inline bool has_total_count() const;
  inline void clear_total_count();
  static const int kTotalCountFieldNumber = 2;
  inline ::google::protobuf::int32 total_count() const;
  inline void set_total_count(::google::protobuf::int32 value);

  // repeated int32 win_counts = 3;
  inline int win_counts_size() const;
  inline void clear_win_counts();
  static const int kWinCountsFieldNumber = 3;
  inline ::google::protobuf::int32 win_counts(int index) const;
  inline void set_win_counts(int index, ::google::protobuf::int32 value);
  inline void add_win_counts(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      win_counts() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_win_counts();

  // repeated int32 lose_counts = 4;
  inline int lose_counts_size() const;
  inline void clear_lose_counts();
  static const int kLoseCountsFieldNumber = 4;
  inline ::google::protobuf::int32 lose_counts(int index) const;
  inline void set_lose_counts(int index, ::google::protobuf::int32 value);
  inline void add_lose_counts(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lose_counts() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lose_counts();

  // repeated .client2world_protocols.msg_cows_history history_list = 5;
  inline int history_list_size() const;
  inline void clear_history_list();
  static const int kHistoryListFieldNumber = 5;
  inline const ::client2world_protocols::msg_cows_history& history_list(int index) const;
  inline ::client2world_protocols::msg_cows_history* mutable_history_list(int index);
  inline ::client2world_protocols::msg_cows_history* add_history_list();
  inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_cows_history >&
      history_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_cows_history >*
      mutable_history_list();

  // @@protoc_insertion_point(class_scope:client2world_protocols.msg_cows_room_history)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_total_count();
  inline void clear_has_total_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 room_id_;
  ::google::protobuf::int32 total_count_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > win_counts_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lose_counts_;
  ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_cows_history > history_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static msg_cows_room_history* default_instance_;
};
// -------------------------------------------------------------------

class packetc2w_cows_history : public ::google::protobuf::Message {
 public:
  packetc2w_cows_history();
  virtual ~packetc2w_cows_history();

  packetc2w_cows_history(const packetc2w_cows_history& from);

  inline packetc2w_cows_history& operator=(const packetc2w_cows_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2w_cows_history& default_instance();

  void Swap(packetc2w_cows_history* other);

  // implements Message ----------------------------------------------

  packetc2w_cows_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2w_cows_history& from);
  void MergeFrom(const packetc2w_cows_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_cows_history];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetc2w_cows_history)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static packetc2w_cows_history* default_instance_;
};
// -------------------------------------------------------------------

class packetw2c_cows_history_result : public ::google::protobuf::Message {
 public:
  packetw2c_cows_history_result();
  virtual ~packetw2c_cows_history_result();

  packetw2c_cows_history_result(const packetw2c_cows_history_result& from);

  inline packetw2c_cows_history_result& operator=(const packetw2c_cows_history_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetw2c_cows_history_result& default_instance();

  void Swap(packetw2c_cows_history_result* other);

  // implements Message ----------------------------------------------

  packetw2c_cows_history_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetw2c_cows_history_result& from);
  void MergeFrom(const packetw2c_cows_history_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_cows_history_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // repeated .client2world_protocols.msg_cows_room_history room_history = 2;
  inline int room_history_size() const;
  inline void clear_room_history();
  static const int kRoomHistoryFieldNumber = 2;
  inline const ::client2world_protocols::msg_cows_room_history& room_history(int index) const;
  inline ::client2world_protocols::msg_cows_room_history* mutable_room_history(int index);
  inline ::client2world_protocols::msg_cows_room_history* add_room_history();
  inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_cows_room_history >&
      room_history() const;
  inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_cows_room_history >*
      mutable_room_history();

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetw2c_cows_history_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_cows_room_history > room_history_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static packetw2c_cows_history_result* default_instance_;
};
// -------------------------------------------------------------------

class msg_dice_history : public ::google::protobuf::Message {
 public:
  msg_dice_history();
  virtual ~msg_dice_history();

  msg_dice_history(const msg_dice_history& from);

  inline msg_dice_history& operator=(const msg_dice_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_dice_history& default_instance();

  void Swap(msg_dice_history* other);

  // implements Message ----------------------------------------------

  msg_dice_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_dice_history& from);
  void MergeFrom(const msg_dice_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dice1 = 1;
  inline bool has_dice1() const;
  inline void clear_dice1();
  static const int kDice1FieldNumber = 1;
  inline ::google::protobuf::int32 dice1() const;
  inline void set_dice1(::google::protobuf::int32 value);

  // optional int32 dice2 = 2;
  inline bool has_dice2() const;
  inline void clear_dice2();
  static const int kDice2FieldNumber = 2;
  inline ::google::protobuf::int32 dice2() const;
  inline void set_dice2(::google::protobuf::int32 value);

  // optional int32 dice3 = 3;
  inline bool has_dice3() const;
  inline void clear_dice3();
  static const int kDice3FieldNumber = 3;
  inline ::google::protobuf::int32 dice3() const;
  inline void set_dice3(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.msg_dice_history)
 private:
  inline void set_has_dice1();
  inline void clear_has_dice1();
  inline void set_has_dice2();
  inline void clear_has_dice2();
  inline void set_has_dice3();
  inline void clear_has_dice3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dice1_;
  ::google::protobuf::int32 dice2_;
  ::google::protobuf::int32 dice3_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static msg_dice_history* default_instance_;
};
// -------------------------------------------------------------------

class msg_dice_room_history : public ::google::protobuf::Message {
 public:
  msg_dice_room_history();
  virtual ~msg_dice_room_history();

  msg_dice_room_history(const msg_dice_room_history& from);

  inline msg_dice_room_history& operator=(const msg_dice_room_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_dice_room_history& default_instance();

  void Swap(msg_dice_room_history* other);

  // implements Message ----------------------------------------------

  msg_dice_room_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_dice_room_history& from);
  void MergeFrom(const msg_dice_room_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::int32 room_id() const;
  inline void set_room_id(::google::protobuf::int32 value);

  // repeated .client2world_protocols.msg_dice_history history_list = 8;
  inline int history_list_size() const;
  inline void clear_history_list();
  static const int kHistoryListFieldNumber = 8;
  inline const ::client2world_protocols::msg_dice_history& history_list(int index) const;
  inline ::client2world_protocols::msg_dice_history* mutable_history_list(int index);
  inline ::client2world_protocols::msg_dice_history* add_history_list();
  inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_dice_history >&
      history_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_dice_history >*
      mutable_history_list();

  // @@protoc_insertion_point(class_scope:client2world_protocols.msg_dice_room_history)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_dice_history > history_list_;
  ::google::protobuf::int32 room_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static msg_dice_room_history* default_instance_;
};
// -------------------------------------------------------------------

class packetc2w_dice_history : public ::google::protobuf::Message {
 public:
  packetc2w_dice_history();
  virtual ~packetc2w_dice_history();

  packetc2w_dice_history(const packetc2w_dice_history& from);

  inline packetc2w_dice_history& operator=(const packetc2w_dice_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2w_dice_history& default_instance();

  void Swap(packetc2w_dice_history* other);

  // implements Message ----------------------------------------------

  packetc2w_dice_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2w_dice_history& from);
  void MergeFrom(const packetc2w_dice_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_dice_history];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetc2w_dice_history)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static packetc2w_dice_history* default_instance_;
};
// -------------------------------------------------------------------

class packetw2c_dice_history_result : public ::google::protobuf::Message {
 public:
  packetw2c_dice_history_result();
  virtual ~packetw2c_dice_history_result();

  packetw2c_dice_history_result(const packetw2c_dice_history_result& from);

  inline packetw2c_dice_history_result& operator=(const packetw2c_dice_history_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetw2c_dice_history_result& default_instance();

  void Swap(packetw2c_dice_history_result* other);

  // implements Message ----------------------------------------------

  packetw2c_dice_history_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetw2c_dice_history_result& from);
  void MergeFrom(const packetw2c_dice_history_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_dice_history_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // repeated .client2world_protocols.msg_dice_room_history room_history = 5;
  inline int room_history_size() const;
  inline void clear_room_history();
  static const int kRoomHistoryFieldNumber = 5;
  inline const ::client2world_protocols::msg_dice_room_history& room_history(int index) const;
  inline ::client2world_protocols::msg_dice_room_history* mutable_room_history(int index);
  inline ::client2world_protocols::msg_dice_room_history* add_room_history();
  inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_dice_room_history >&
      room_history() const;
  inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_dice_room_history >*
      mutable_room_history();

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetw2c_dice_history_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_dice_room_history > room_history_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static packetw2c_dice_history_result* default_instance_;
};
// -------------------------------------------------------------------

class msg_ebg_history : public ::google::protobuf::Message {
 public:
  msg_ebg_history();
  virtual ~msg_ebg_history();

  msg_ebg_history(const msg_ebg_history& from);

  inline msg_ebg_history& operator=(const msg_ebg_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_ebg_history& default_instance();

  void Swap(msg_ebg_history* other);

  // implements Message ----------------------------------------------

  msg_ebg_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_ebg_history& from);
  void MergeFrom(const msg_ebg_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bool is_win = 1;
  inline int is_win_size() const;
  inline void clear_is_win();
  static const int kIsWinFieldNumber = 1;
  inline bool is_win(int index) const;
  inline void set_is_win(int index, bool value);
  inline void add_is_win(bool value);
  inline const ::google::protobuf::RepeatedField< bool >&
      is_win() const;
  inline ::google::protobuf::RepeatedField< bool >*
      mutable_is_win();

  // repeated int32 cards_id = 2;
  inline int cards_id_size() const;
  inline void clear_cards_id();
  static const int kCardsIdFieldNumber = 2;
  inline ::google::protobuf::int32 cards_id(int index) const;
  inline void set_cards_id(int index, ::google::protobuf::int32 value);
  inline void add_cards_id(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cards_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cards_id();

  // @@protoc_insertion_point(class_scope:client2world_protocols.msg_ebg_history)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< bool > is_win_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cards_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static msg_ebg_history* default_instance_;
};
// -------------------------------------------------------------------

class msg_ebg_room_history : public ::google::protobuf::Message {
 public:
  msg_ebg_room_history();
  virtual ~msg_ebg_room_history();

  msg_ebg_room_history(const msg_ebg_room_history& from);

  inline msg_ebg_room_history& operator=(const msg_ebg_room_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_ebg_room_history& default_instance();

  void Swap(msg_ebg_room_history* other);

  // implements Message ----------------------------------------------

  msg_ebg_room_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_ebg_room_history& from);
  void MergeFrom(const msg_ebg_room_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::int32 room_id() const;
  inline void set_room_id(::google::protobuf::int32 value);

  // optional int32 total_count = 2;
  inline bool has_total_count() const;
  inline void clear_total_count();
  static const int kTotalCountFieldNumber = 2;
  inline ::google::protobuf::int32 total_count() const;
  inline void set_total_count(::google::protobuf::int32 value);

  // repeated int32 win_counts = 3;
  inline int win_counts_size() const;
  inline void clear_win_counts();
  static const int kWinCountsFieldNumber = 3;
  inline ::google::protobuf::int32 win_counts(int index) const;
  inline void set_win_counts(int index, ::google::protobuf::int32 value);
  inline void add_win_counts(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      win_counts() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_win_counts();

  // repeated int32 lose_counts = 4;
  inline int lose_counts_size() const;
  inline void clear_lose_counts();
  static const int kLoseCountsFieldNumber = 4;
  inline ::google::protobuf::int32 lose_counts(int index) const;
  inline void set_lose_counts(int index, ::google::protobuf::int32 value);
  inline void add_lose_counts(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lose_counts() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lose_counts();

  // repeated .client2world_protocols.msg_ebg_history history_list = 5;
  inline int history_list_size() const;
  inline void clear_history_list();
  static const int kHistoryListFieldNumber = 5;
  inline const ::client2world_protocols::msg_ebg_history& history_list(int index) const;
  inline ::client2world_protocols::msg_ebg_history* mutable_history_list(int index);
  inline ::client2world_protocols::msg_ebg_history* add_history_list();
  inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_ebg_history >&
      history_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_ebg_history >*
      mutable_history_list();

  // @@protoc_insertion_point(class_scope:client2world_protocols.msg_ebg_room_history)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_total_count();
  inline void clear_has_total_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 room_id_;
  ::google::protobuf::int32 total_count_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > win_counts_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lose_counts_;
  ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_ebg_history > history_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static msg_ebg_room_history* default_instance_;
};
// -------------------------------------------------------------------

class packetc2w_ebg_history : public ::google::protobuf::Message {
 public:
  packetc2w_ebg_history();
  virtual ~packetc2w_ebg_history();

  packetc2w_ebg_history(const packetc2w_ebg_history& from);

  inline packetc2w_ebg_history& operator=(const packetc2w_ebg_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2w_ebg_history& default_instance();

  void Swap(packetc2w_ebg_history* other);

  // implements Message ----------------------------------------------

  packetc2w_ebg_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2w_ebg_history& from);
  void MergeFrom(const packetc2w_ebg_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_ebg_history];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetc2w_ebg_history)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static packetc2w_ebg_history* default_instance_;
};
// -------------------------------------------------------------------

class packetw2c_ebg_history_result : public ::google::protobuf::Message {
 public:
  packetw2c_ebg_history_result();
  virtual ~packetw2c_ebg_history_result();

  packetw2c_ebg_history_result(const packetw2c_ebg_history_result& from);

  inline packetw2c_ebg_history_result& operator=(const packetw2c_ebg_history_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetw2c_ebg_history_result& default_instance();

  void Swap(packetw2c_ebg_history_result* other);

  // implements Message ----------------------------------------------

  packetw2c_ebg_history_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetw2c_ebg_history_result& from);
  void MergeFrom(const packetw2c_ebg_history_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_ebg_history_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // repeated .client2world_protocols.msg_ebg_room_history room_history = 2;
  inline int room_history_size() const;
  inline void clear_room_history();
  static const int kRoomHistoryFieldNumber = 2;
  inline const ::client2world_protocols::msg_ebg_room_history& room_history(int index) const;
  inline ::client2world_protocols::msg_ebg_room_history* mutable_room_history(int index);
  inline ::client2world_protocols::msg_ebg_room_history* add_room_history();
  inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_ebg_room_history >&
      room_history() const;
  inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_ebg_room_history >*
      mutable_room_history();

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetw2c_ebg_history_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_ebg_room_history > room_history_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static packetw2c_ebg_history_result* default_instance_;
};
// -------------------------------------------------------------------

class msg_goldshark_room_history : public ::google::protobuf::Message {
 public:
  msg_goldshark_room_history();
  virtual ~msg_goldshark_room_history();

  msg_goldshark_room_history(const msg_goldshark_room_history& from);

  inline msg_goldshark_room_history& operator=(const msg_goldshark_room_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_goldshark_room_history& default_instance();

  void Swap(msg_goldshark_room_history* other);

  // implements Message ----------------------------------------------

  msg_goldshark_room_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_goldshark_room_history& from);
  void MergeFrom(const msg_goldshark_room_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::int32 room_id() const;
  inline void set_room_id(::google::protobuf::int32 value);

  // repeated int32 history_list = 2;
  inline int history_list_size() const;
  inline void clear_history_list();
  static const int kHistoryListFieldNumber = 2;
  inline ::google::protobuf::int32 history_list(int index) const;
  inline void set_history_list(int index, ::google::protobuf::int32 value);
  inline void add_history_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      history_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_history_list();

  // @@protoc_insertion_point(class_scope:client2world_protocols.msg_goldshark_room_history)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > history_list_;
  ::google::protobuf::int32 room_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static msg_goldshark_room_history* default_instance_;
};
// -------------------------------------------------------------------

class packetc2w_goldshark_history : public ::google::protobuf::Message {
 public:
  packetc2w_goldshark_history();
  virtual ~packetc2w_goldshark_history();

  packetc2w_goldshark_history(const packetc2w_goldshark_history& from);

  inline packetc2w_goldshark_history& operator=(const packetc2w_goldshark_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2w_goldshark_history& default_instance();

  void Swap(packetc2w_goldshark_history* other);

  // implements Message ----------------------------------------------

  packetc2w_goldshark_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2w_goldshark_history& from);
  void MergeFrom(const packetc2w_goldshark_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_goldshark_history];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetc2w_goldshark_history)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static packetc2w_goldshark_history* default_instance_;
};
// -------------------------------------------------------------------

class packetw2c_goldshark_history_result : public ::google::protobuf::Message {
 public:
  packetw2c_goldshark_history_result();
  virtual ~packetw2c_goldshark_history_result();

  packetw2c_goldshark_history_result(const packetw2c_goldshark_history_result& from);

  inline packetw2c_goldshark_history_result& operator=(const packetw2c_goldshark_history_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetw2c_goldshark_history_result& default_instance();

  void Swap(packetw2c_goldshark_history_result* other);

  // implements Message ----------------------------------------------

  packetw2c_goldshark_history_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetw2c_goldshark_history_result& from);
  void MergeFrom(const packetw2c_goldshark_history_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_goldshark_history_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // repeated .client2world_protocols.msg_goldshark_room_history room_history = 2;
  inline int room_history_size() const;
  inline void clear_room_history();
  static const int kRoomHistoryFieldNumber = 2;
  inline const ::client2world_protocols::msg_goldshark_room_history& room_history(int index) const;
  inline ::client2world_protocols::msg_goldshark_room_history* mutable_room_history(int index);
  inline ::client2world_protocols::msg_goldshark_room_history* add_room_history();
  inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_goldshark_room_history >&
      room_history() const;
  inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_goldshark_room_history >*
      mutable_room_history();

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetw2c_goldshark_history_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_goldshark_room_history > room_history_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static packetw2c_goldshark_history_result* default_instance_;
};
// -------------------------------------------------------------------

class msg_multitexas_history : public ::google::protobuf::Message {
 public:
  msg_multitexas_history();
  virtual ~msg_multitexas_history();

  msg_multitexas_history(const msg_multitexas_history& from);

  inline msg_multitexas_history& operator=(const msg_multitexas_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_multitexas_history& default_instance();

  void Swap(msg_multitexas_history* other);

  // implements Message ----------------------------------------------

  msg_multitexas_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_multitexas_history& from);
  void MergeFrom(const msg_multitexas_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 win = 1;
  inline int win_size() const;
  inline void clear_win();
  static const int kWinFieldNumber = 1;
  inline ::google::protobuf::int32 win(int index) const;
  inline void set_win(int index, ::google::protobuf::int32 value);
  inline void add_win(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      win() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_win();

  // @@protoc_insertion_point(class_scope:client2world_protocols.msg_multitexas_history)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > win_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static msg_multitexas_history* default_instance_;
};
// -------------------------------------------------------------------

class msg_multitexas_room_history : public ::google::protobuf::Message {
 public:
  msg_multitexas_room_history();
  virtual ~msg_multitexas_room_history();

  msg_multitexas_room_history(const msg_multitexas_room_history& from);

  inline msg_multitexas_room_history& operator=(const msg_multitexas_room_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_multitexas_room_history& default_instance();

  void Swap(msg_multitexas_room_history* other);

  // implements Message ----------------------------------------------

  msg_multitexas_room_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_multitexas_room_history& from);
  void MergeFrom(const msg_multitexas_room_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::int32 room_id() const;
  inline void set_room_id(::google::protobuf::int32 value);

  // repeated .client2world_protocols.msg_multitexas_history history_list = 2;
  inline int history_list_size() const;
  inline void clear_history_list();
  static const int kHistoryListFieldNumber = 2;
  inline const ::client2world_protocols::msg_multitexas_history& history_list(int index) const;
  inline ::client2world_protocols::msg_multitexas_history* mutable_history_list(int index);
  inline ::client2world_protocols::msg_multitexas_history* add_history_list();
  inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_multitexas_history >&
      history_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_multitexas_history >*
      mutable_history_list();

  // @@protoc_insertion_point(class_scope:client2world_protocols.msg_multitexas_room_history)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_multitexas_history > history_list_;
  ::google::protobuf::int32 room_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static msg_multitexas_room_history* default_instance_;
};
// -------------------------------------------------------------------

class packetc2w_multitexas_history : public ::google::protobuf::Message {
 public:
  packetc2w_multitexas_history();
  virtual ~packetc2w_multitexas_history();

  packetc2w_multitexas_history(const packetc2w_multitexas_history& from);

  inline packetc2w_multitexas_history& operator=(const packetc2w_multitexas_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2w_multitexas_history& default_instance();

  void Swap(packetc2w_multitexas_history* other);

  // implements Message ----------------------------------------------

  packetc2w_multitexas_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2w_multitexas_history& from);
  void MergeFrom(const packetc2w_multitexas_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_multitexas_history];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetc2w_multitexas_history)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static packetc2w_multitexas_history* default_instance_;
};
// -------------------------------------------------------------------

class packetw2c_multitexas_history_result : public ::google::protobuf::Message {
 public:
  packetw2c_multitexas_history_result();
  virtual ~packetw2c_multitexas_history_result();

  packetw2c_multitexas_history_result(const packetw2c_multitexas_history_result& from);

  inline packetw2c_multitexas_history_result& operator=(const packetw2c_multitexas_history_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetw2c_multitexas_history_result& default_instance();

  void Swap(packetw2c_multitexas_history_result* other);

  // implements Message ----------------------------------------------

  packetw2c_multitexas_history_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetw2c_multitexas_history_result& from);
  void MergeFrom(const packetw2c_multitexas_history_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_multitexas_history_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // repeated .client2world_protocols.msg_multitexas_room_history room_history = 2;
  inline int room_history_size() const;
  inline void clear_room_history();
  static const int kRoomHistoryFieldNumber = 2;
  inline const ::client2world_protocols::msg_multitexas_room_history& room_history(int index) const;
  inline ::client2world_protocols::msg_multitexas_room_history* mutable_room_history(int index);
  inline ::client2world_protocols::msg_multitexas_room_history* add_room_history();
  inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_multitexas_room_history >&
      room_history() const;
  inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_multitexas_room_history >*
      mutable_room_history();

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetw2c_multitexas_history_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_multitexas_room_history > room_history_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static packetw2c_multitexas_history_result* default_instance_;
};
// -------------------------------------------------------------------

class msg_shcd_history : public ::google::protobuf::Message {
 public:
  msg_shcd_history();
  virtual ~msg_shcd_history();

  msg_shcd_history(const msg_shcd_history& from);

  inline msg_shcd_history& operator=(const msg_shcd_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_shcd_history& default_instance();

  void Swap(msg_shcd_history* other);

  // implements Message ----------------------------------------------

  msg_shcd_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_shcd_history& from);
  void MergeFrom(const msg_shcd_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 cards_type = 1;
  inline bool has_cards_type() const;
  inline void clear_cards_type();
  static const int kCardsTypeFieldNumber = 1;
  inline ::google::protobuf::int32 cards_type() const;
  inline void set_cards_type(::google::protobuf::int32 value);

  // optional int32 cards_value = 2;
  inline bool has_cards_value() const;
  inline void clear_cards_value();
  static const int kCardsValueFieldNumber = 2;
  inline ::google::protobuf::int32 cards_value() const;
  inline void set_cards_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.msg_shcd_history)
 private:
  inline void set_has_cards_type();
  inline void clear_has_cards_type();
  inline void set_has_cards_value();
  inline void clear_has_cards_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 cards_type_;
  ::google::protobuf::int32 cards_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static msg_shcd_history* default_instance_;
};
// -------------------------------------------------------------------

class msg_shcd_room_history : public ::google::protobuf::Message {
 public:
  msg_shcd_room_history();
  virtual ~msg_shcd_room_history();

  msg_shcd_room_history(const msg_shcd_room_history& from);

  inline msg_shcd_room_history& operator=(const msg_shcd_room_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_shcd_room_history& default_instance();

  void Swap(msg_shcd_room_history* other);

  // implements Message ----------------------------------------------

  msg_shcd_room_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_shcd_room_history& from);
  void MergeFrom(const msg_shcd_room_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::int32 room_id() const;
  inline void set_room_id(::google::protobuf::int32 value);

  // repeated .client2world_protocols.msg_shcd_history history_list = 2;
  inline int history_list_size() const;
  inline void clear_history_list();
  static const int kHistoryListFieldNumber = 2;
  inline const ::client2world_protocols::msg_shcd_history& history_list(int index) const;
  inline ::client2world_protocols::msg_shcd_history* mutable_history_list(int index);
  inline ::client2world_protocols::msg_shcd_history* add_history_list();
  inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_shcd_history >&
      history_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_shcd_history >*
      mutable_history_list();

  // @@protoc_insertion_point(class_scope:client2world_protocols.msg_shcd_room_history)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_shcd_history > history_list_;
  ::google::protobuf::int32 room_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static msg_shcd_room_history* default_instance_;
};
// -------------------------------------------------------------------

class packetc2w_shcd_history : public ::google::protobuf::Message {
 public:
  packetc2w_shcd_history();
  virtual ~packetc2w_shcd_history();

  packetc2w_shcd_history(const packetc2w_shcd_history& from);

  inline packetc2w_shcd_history& operator=(const packetc2w_shcd_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2w_shcd_history& default_instance();

  void Swap(packetc2w_shcd_history* other);

  // implements Message ----------------------------------------------

  packetc2w_shcd_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2w_shcd_history& from);
  void MergeFrom(const packetc2w_shcd_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_shcd_history];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetc2w_shcd_history)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static packetc2w_shcd_history* default_instance_;
};
// -------------------------------------------------------------------

class packetw2c_shcd_history_result : public ::google::protobuf::Message {
 public:
  packetw2c_shcd_history_result();
  virtual ~packetw2c_shcd_history_result();

  packetw2c_shcd_history_result(const packetw2c_shcd_history_result& from);

  inline packetw2c_shcd_history_result& operator=(const packetw2c_shcd_history_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetw2c_shcd_history_result& default_instance();

  void Swap(packetw2c_shcd_history_result* other);

  // implements Message ----------------------------------------------

  packetw2c_shcd_history_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetw2c_shcd_history_result& from);
  void MergeFrom(const packetw2c_shcd_history_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_shcd_history_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // repeated .client2world_protocols.msg_shcd_room_history room_history = 2;
  inline int room_history_size() const;
  inline void clear_room_history();
  static const int kRoomHistoryFieldNumber = 2;
  inline const ::client2world_protocols::msg_shcd_room_history& room_history(int index) const;
  inline ::client2world_protocols::msg_shcd_room_history* mutable_room_history(int index);
  inline ::client2world_protocols::msg_shcd_room_history* add_room_history();
  inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_shcd_room_history >&
      room_history() const;
  inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_shcd_room_history >*
      mutable_room_history();

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetw2c_shcd_history_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_shcd_room_history > room_history_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static packetw2c_shcd_history_result* default_instance_;
};
// -------------------------------------------------------------------

class msg_benzbmw_room_history : public ::google::protobuf::Message {
 public:
  msg_benzbmw_room_history();
  virtual ~msg_benzbmw_room_history();

  msg_benzbmw_room_history(const msg_benzbmw_room_history& from);

  inline msg_benzbmw_room_history& operator=(const msg_benzbmw_room_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_benzbmw_room_history& default_instance();

  void Swap(msg_benzbmw_room_history* other);

  // implements Message ----------------------------------------------

  msg_benzbmw_room_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_benzbmw_room_history& from);
  void MergeFrom(const msg_benzbmw_room_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::int32 room_id() const;
  inline void set_room_id(::google::protobuf::int32 value);

  // repeated int32 history_list = 2;
  inline int history_list_size() const;
  inline void clear_history_list();
  static const int kHistoryListFieldNumber = 2;
  inline ::google::protobuf::int32 history_list(int index) const;
  inline void set_history_list(int index, ::google::protobuf::int32 value);
  inline void add_history_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      history_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_history_list();

  // @@protoc_insertion_point(class_scope:client2world_protocols.msg_benzbmw_room_history)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > history_list_;
  ::google::protobuf::int32 room_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static msg_benzbmw_room_history* default_instance_;
};
// -------------------------------------------------------------------

class packetc2w_benzbmw_history : public ::google::protobuf::Message {
 public:
  packetc2w_benzbmw_history();
  virtual ~packetc2w_benzbmw_history();

  packetc2w_benzbmw_history(const packetc2w_benzbmw_history& from);

  inline packetc2w_benzbmw_history& operator=(const packetc2w_benzbmw_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2w_benzbmw_history& default_instance();

  void Swap(packetc2w_benzbmw_history* other);

  // implements Message ----------------------------------------------

  packetc2w_benzbmw_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2w_benzbmw_history& from);
  void MergeFrom(const packetc2w_benzbmw_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_benzbmw_history];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetc2w_benzbmw_history)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static packetc2w_benzbmw_history* default_instance_;
};
// -------------------------------------------------------------------

class packetw2c_benzbmw_history_result : public ::google::protobuf::Message {
 public:
  packetw2c_benzbmw_history_result();
  virtual ~packetw2c_benzbmw_history_result();

  packetw2c_benzbmw_history_result(const packetw2c_benzbmw_history_result& from);

  inline packetw2c_benzbmw_history_result& operator=(const packetw2c_benzbmw_history_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetw2c_benzbmw_history_result& default_instance();

  void Swap(packetw2c_benzbmw_history_result* other);

  // implements Message ----------------------------------------------

  packetw2c_benzbmw_history_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetw2c_benzbmw_history_result& from);
  void MergeFrom(const packetw2c_benzbmw_history_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_benzbmw_history_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // repeated .client2world_protocols.msg_benzbmw_room_history room_history = 2;
  inline int room_history_size() const;
  inline void clear_room_history();
  static const int kRoomHistoryFieldNumber = 2;
  inline const ::client2world_protocols::msg_benzbmw_room_history& room_history(int index) const;
  inline ::client2world_protocols::msg_benzbmw_room_history* mutable_room_history(int index);
  inline ::client2world_protocols::msg_benzbmw_room_history* add_room_history();
  inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_benzbmw_room_history >&
      room_history() const;
  inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_benzbmw_room_history >*
      mutable_room_history();

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetw2c_benzbmw_history_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_benzbmw_room_history > room_history_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static packetw2c_benzbmw_history_result* default_instance_;
};
// -------------------------------------------------------------------

class msg_forestball_room_history : public ::google::protobuf::Message {
 public:
  msg_forestball_room_history();
  virtual ~msg_forestball_room_history();

  msg_forestball_room_history(const msg_forestball_room_history& from);

  inline msg_forestball_room_history& operator=(const msg_forestball_room_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_forestball_room_history& default_instance();

  void Swap(msg_forestball_room_history* other);

  // implements Message ----------------------------------------------

  msg_forestball_room_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_forestball_room_history& from);
  void MergeFrom(const msg_forestball_room_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::int32 room_id() const;
  inline void set_room_id(::google::protobuf::int32 value);

  // repeated int32 history_list = 2;
  inline int history_list_size() const;
  inline void clear_history_list();
  static const int kHistoryListFieldNumber = 2;
  inline ::google::protobuf::int32 history_list(int index) const;
  inline void set_history_list(int index, ::google::protobuf::int32 value);
  inline void add_history_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      history_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_history_list();

  // @@protoc_insertion_point(class_scope:client2world_protocols.msg_forestball_room_history)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > history_list_;
  ::google::protobuf::int32 room_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static msg_forestball_room_history* default_instance_;
};
// -------------------------------------------------------------------

class packetc2w_forestball_history : public ::google::protobuf::Message {
 public:
  packetc2w_forestball_history();
  virtual ~packetc2w_forestball_history();

  packetc2w_forestball_history(const packetc2w_forestball_history& from);

  inline packetc2w_forestball_history& operator=(const packetc2w_forestball_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2w_forestball_history& default_instance();

  void Swap(packetc2w_forestball_history* other);

  // implements Message ----------------------------------------------

  packetc2w_forestball_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2w_forestball_history& from);
  void MergeFrom(const packetc2w_forestball_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_forestball_history];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetc2w_forestball_history)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static packetc2w_forestball_history* default_instance_;
};
// -------------------------------------------------------------------

class packetw2c_forestball_history_result : public ::google::protobuf::Message {
 public:
  packetw2c_forestball_history_result();
  virtual ~packetw2c_forestball_history_result();

  packetw2c_forestball_history_result(const packetw2c_forestball_history_result& from);

  inline packetw2c_forestball_history_result& operator=(const packetw2c_forestball_history_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetw2c_forestball_history_result& default_instance();

  void Swap(packetw2c_forestball_history_result* other);

  // implements Message ----------------------------------------------

  packetw2c_forestball_history_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetw2c_forestball_history_result& from);
  void MergeFrom(const packetw2c_forestball_history_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_forestball_history_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // repeated .client2world_protocols.msg_forestball_room_history room_history = 2;
  inline int room_history_size() const;
  inline void clear_room_history();
  static const int kRoomHistoryFieldNumber = 2;
  inline const ::client2world_protocols::msg_forestball_room_history& room_history(int index) const;
  inline ::client2world_protocols::msg_forestball_room_history* mutable_room_history(int index);
  inline ::client2world_protocols::msg_forestball_room_history* add_room_history();
  inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_forestball_room_history >&
      room_history() const;
  inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_forestball_room_history >*
      mutable_room_history();

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetw2c_forestball_history_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_forestball_room_history > room_history_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static packetw2c_forestball_history_result* default_instance_;
};
// -------------------------------------------------------------------

class msg_fruits_room_history : public ::google::protobuf::Message {
 public:
  msg_fruits_room_history();
  virtual ~msg_fruits_room_history();

  msg_fruits_room_history(const msg_fruits_room_history& from);

  inline msg_fruits_room_history& operator=(const msg_fruits_room_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_fruits_room_history& default_instance();

  void Swap(msg_fruits_room_history* other);

  // implements Message ----------------------------------------------

  msg_fruits_room_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_fruits_room_history& from);
  void MergeFrom(const msg_fruits_room_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::int32 room_id() const;
  inline void set_room_id(::google::protobuf::int32 value);

  // repeated int32 history_list = 2;
  inline int history_list_size() const;
  inline void clear_history_list();
  static const int kHistoryListFieldNumber = 2;
  inline ::google::protobuf::int32 history_list(int index) const;
  inline void set_history_list(int index, ::google::protobuf::int32 value);
  inline void add_history_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      history_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_history_list();

  // @@protoc_insertion_point(class_scope:client2world_protocols.msg_fruits_room_history)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > history_list_;
  ::google::protobuf::int32 room_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static msg_fruits_room_history* default_instance_;
};
// -------------------------------------------------------------------

class packetc2w_fruits_history : public ::google::protobuf::Message {
 public:
  packetc2w_fruits_history();
  virtual ~packetc2w_fruits_history();

  packetc2w_fruits_history(const packetc2w_fruits_history& from);

  inline packetc2w_fruits_history& operator=(const packetc2w_fruits_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2w_fruits_history& default_instance();

  void Swap(packetc2w_fruits_history* other);

  // implements Message ----------------------------------------------

  packetc2w_fruits_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2w_fruits_history& from);
  void MergeFrom(const packetc2w_fruits_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_fruits_history];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetc2w_fruits_history)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static packetc2w_fruits_history* default_instance_;
};
// -------------------------------------------------------------------

class packetw2c_fruits_history_result : public ::google::protobuf::Message {
 public:
  packetw2c_fruits_history_result();
  virtual ~packetw2c_fruits_history_result();

  packetw2c_fruits_history_result(const packetw2c_fruits_history_result& from);

  inline packetw2c_fruits_history_result& operator=(const packetw2c_fruits_history_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetw2c_fruits_history_result& default_instance();

  void Swap(packetw2c_fruits_history_result* other);

  // implements Message ----------------------------------------------

  packetw2c_fruits_history_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetw2c_fruits_history_result& from);
  void MergeFrom(const packetw2c_fruits_history_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_fruits_history_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // repeated .client2world_protocols.msg_fruits_room_history room_history = 2;
  inline int room_history_size() const;
  inline void clear_room_history();
  static const int kRoomHistoryFieldNumber = 2;
  inline const ::client2world_protocols::msg_fruits_room_history& room_history(int index) const;
  inline ::client2world_protocols::msg_fruits_room_history* mutable_room_history(int index);
  inline ::client2world_protocols::msg_fruits_room_history* add_room_history();
  inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_fruits_room_history >&
      room_history() const;
  inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_fruits_room_history >*
      mutable_room_history();

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetw2c_fruits_history_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_fruits_room_history > room_history_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static packetw2c_fruits_history_result* default_instance_;
};
// -------------------------------------------------------------------

class msg_lhd_room_history : public ::google::protobuf::Message {
 public:
  msg_lhd_room_history();
  virtual ~msg_lhd_room_history();

  msg_lhd_room_history(const msg_lhd_room_history& from);

  inline msg_lhd_room_history& operator=(const msg_lhd_room_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_lhd_room_history& default_instance();

  void Swap(msg_lhd_room_history* other);

  // implements Message ----------------------------------------------

  msg_lhd_room_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_lhd_room_history& from);
  void MergeFrom(const msg_lhd_room_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::int32 room_id() const;
  inline void set_room_id(::google::protobuf::int32 value);

  // optional int32 total_count = 2;
  inline bool has_total_count() const;
  inline void clear_total_count();
  static const int kTotalCountFieldNumber = 2;
  inline ::google::protobuf::int32 total_count() const;
  inline void set_total_count(::google::protobuf::int32 value);

  // repeated int32 win_counts = 3;
  inline int win_counts_size() const;
  inline void clear_win_counts();
  static const int kWinCountsFieldNumber = 3;
  inline ::google::protobuf::int32 win_counts(int index) const;
  inline void set_win_counts(int index, ::google::protobuf::int32 value);
  inline void add_win_counts(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      win_counts() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_win_counts();

  // repeated int32 lose_counts = 4;
  inline int lose_counts_size() const;
  inline void clear_lose_counts();
  static const int kLoseCountsFieldNumber = 4;
  inline ::google::protobuf::int32 lose_counts(int index) const;
  inline void set_lose_counts(int index, ::google::protobuf::int32 value);
  inline void add_lose_counts(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lose_counts() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lose_counts();

  // repeated int32 history_infos = 5;
  inline int history_infos_size() const;
  inline void clear_history_infos();
  static const int kHistoryInfosFieldNumber = 5;
  inline ::google::protobuf::int32 history_infos(int index) const;
  inline void set_history_infos(int index, ::google::protobuf::int32 value);
  inline void add_history_infos(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      history_infos() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_history_infos();

  // @@protoc_insertion_point(class_scope:client2world_protocols.msg_lhd_room_history)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_total_count();
  inline void clear_has_total_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 room_id_;
  ::google::protobuf::int32 total_count_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > win_counts_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lose_counts_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > history_infos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static msg_lhd_room_history* default_instance_;
};
// -------------------------------------------------------------------

class packetc2w_lhd_history : public ::google::protobuf::Message {
 public:
  packetc2w_lhd_history();
  virtual ~packetc2w_lhd_history();

  packetc2w_lhd_history(const packetc2w_lhd_history& from);

  inline packetc2w_lhd_history& operator=(const packetc2w_lhd_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2w_lhd_history& default_instance();

  void Swap(packetc2w_lhd_history* other);

  // implements Message ----------------------------------------------

  packetc2w_lhd_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2w_lhd_history& from);
  void MergeFrom(const packetc2w_lhd_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_lhd_history];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetc2w_lhd_history)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static packetc2w_lhd_history* default_instance_;
};
// -------------------------------------------------------------------

class packetw2c_lhd_history_result : public ::google::protobuf::Message {
 public:
  packetw2c_lhd_history_result();
  virtual ~packetw2c_lhd_history_result();

  packetw2c_lhd_history_result(const packetw2c_lhd_history_result& from);

  inline packetw2c_lhd_history_result& operator=(const packetw2c_lhd_history_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetw2c_lhd_history_result& default_instance();

  void Swap(packetw2c_lhd_history_result* other);

  // implements Message ----------------------------------------------

  packetw2c_lhd_history_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetw2c_lhd_history_result& from);
  void MergeFrom(const packetw2c_lhd_history_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_lhd_history_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // repeated .client2world_protocols.msg_lhd_room_history room_history = 2;
  inline int room_history_size() const;
  inline void clear_room_history();
  static const int kRoomHistoryFieldNumber = 2;
  inline const ::client2world_protocols::msg_lhd_room_history& room_history(int index) const;
  inline ::client2world_protocols::msg_lhd_room_history* mutable_room_history(int index);
  inline ::client2world_protocols::msg_lhd_room_history* add_room_history();
  inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_lhd_room_history >&
      room_history() const;
  inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_lhd_room_history >*
      mutable_room_history();

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetw2c_lhd_history_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_lhd_room_history > room_history_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static packetw2c_lhd_history_result* default_instance_;
};
// -------------------------------------------------------------------

class msg_multiredblack_room_history : public ::google::protobuf::Message {
 public:
  msg_multiredblack_room_history();
  virtual ~msg_multiredblack_room_history();

  msg_multiredblack_room_history(const msg_multiredblack_room_history& from);

  inline msg_multiredblack_room_history& operator=(const msg_multiredblack_room_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_multiredblack_room_history& default_instance();

  void Swap(msg_multiredblack_room_history* other);

  // implements Message ----------------------------------------------

  msg_multiredblack_room_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_multiredblack_room_history& from);
  void MergeFrom(const msg_multiredblack_room_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::int32 room_id() const;
  inline void set_room_id(::google::protobuf::int32 value);

  // repeated int32 history_infos = 2;
  inline int history_infos_size() const;
  inline void clear_history_infos();
  static const int kHistoryInfosFieldNumber = 2;
  inline ::google::protobuf::int32 history_infos(int index) const;
  inline void set_history_infos(int index, ::google::protobuf::int32 value);
  inline void add_history_infos(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      history_infos() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_history_infos();

  // @@protoc_insertion_point(class_scope:client2world_protocols.msg_multiredblack_room_history)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > history_infos_;
  ::google::protobuf::int32 room_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static msg_multiredblack_room_history* default_instance_;
};
// -------------------------------------------------------------------

class packetc2w_multiredblack_history : public ::google::protobuf::Message {
 public:
  packetc2w_multiredblack_history();
  virtual ~packetc2w_multiredblack_history();

  packetc2w_multiredblack_history(const packetc2w_multiredblack_history& from);

  inline packetc2w_multiredblack_history& operator=(const packetc2w_multiredblack_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2w_multiredblack_history& default_instance();

  void Swap(packetc2w_multiredblack_history* other);

  // implements Message ----------------------------------------------

  packetc2w_multiredblack_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2w_multiredblack_history& from);
  void MergeFrom(const packetc2w_multiredblack_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_multiredblack_history];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetc2w_multiredblack_history)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static packetc2w_multiredblack_history* default_instance_;
};
// -------------------------------------------------------------------

class packetw2c_multiredblack_history_result : public ::google::protobuf::Message {
 public:
  packetw2c_multiredblack_history_result();
  virtual ~packetw2c_multiredblack_history_result();

  packetw2c_multiredblack_history_result(const packetw2c_multiredblack_history_result& from);

  inline packetw2c_multiredblack_history_result& operator=(const packetw2c_multiredblack_history_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetw2c_multiredblack_history_result& default_instance();

  void Swap(packetw2c_multiredblack_history_result* other);

  // implements Message ----------------------------------------------

  packetw2c_multiredblack_history_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetw2c_multiredblack_history_result& from);
  void MergeFrom(const packetw2c_multiredblack_history_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_multiredblack_history_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // repeated .client2world_protocols.msg_multiredblack_room_history room_history = 2;
  inline int room_history_size() const;
  inline void clear_room_history();
  static const int kRoomHistoryFieldNumber = 2;
  inline const ::client2world_protocols::msg_multiredblack_room_history& room_history(int index) const;
  inline ::client2world_protocols::msg_multiredblack_room_history* mutable_room_history(int index);
  inline ::client2world_protocols::msg_multiredblack_room_history* add_room_history();
  inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_multiredblack_room_history >&
      room_history() const;
  inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_multiredblack_room_history >*
      mutable_room_history();

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetw2c_multiredblack_history_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_multiredblack_room_history > room_history_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static packetw2c_multiredblack_history_result* default_instance_;
};
// -------------------------------------------------------------------

class happySupremacy_history_info : public ::google::protobuf::Message {
 public:
  happySupremacy_history_info();
  virtual ~happySupremacy_history_info();

  happySupremacy_history_info(const happySupremacy_history_info& from);

  inline happySupremacy_history_info& operator=(const happySupremacy_history_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const happySupremacy_history_info& default_instance();

  void Swap(happySupremacy_history_info* other);

  // implements Message ----------------------------------------------

  happySupremacy_history_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const happySupremacy_history_info& from);
  void MergeFrom(const happySupremacy_history_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool is_forward_win = 1;
  inline bool has_is_forward_win() const;
  inline void clear_is_forward_win();
  static const int kIsForwardWinFieldNumber = 1;
  inline bool is_forward_win() const;
  inline void set_is_forward_win(bool value);

  // optional bool is_reverse_win = 2;
  inline bool has_is_reverse_win() const;
  inline void clear_is_reverse_win();
  static const int kIsReverseWinFieldNumber = 2;
  inline bool is_reverse_win() const;
  inline void set_is_reverse_win(bool value);

  // optional bool is_opposite_win = 3;
  inline bool has_is_opposite_win() const;
  inline void clear_is_opposite_win();
  static const int kIsOppositeWinFieldNumber = 3;
  inline bool is_opposite_win() const;
  inline void set_is_opposite_win(bool value);

  // repeated int32 cards = 4;
  inline int cards_size() const;
  inline void clear_cards();
  static const int kCardsFieldNumber = 4;
  inline ::google::protobuf::int32 cards(int index) const;
  inline void set_cards(int index, ::google::protobuf::int32 value);
  inline void add_cards(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cards() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cards();

  // repeated int32 cards_type = 5;
  inline int cards_type_size() const;
  inline void clear_cards_type();
  static const int kCardsTypeFieldNumber = 5;
  inline ::google::protobuf::int32 cards_type(int index) const;
  inline void set_cards_type(int index, ::google::protobuf::int32 value);
  inline void add_cards_type(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cards_type() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cards_type();

  // @@protoc_insertion_point(class_scope:client2world_protocols.happySupremacy_history_info)
 private:
  inline void set_has_is_forward_win();
  inline void clear_has_is_forward_win();
  inline void set_has_is_reverse_win();
  inline void clear_has_is_reverse_win();
  inline void set_has_is_opposite_win();
  inline void clear_has_is_opposite_win();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cards_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cards_type_;
  bool is_forward_win_;
  bool is_reverse_win_;
  bool is_opposite_win_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static happySupremacy_history_info* default_instance_;
};
// -------------------------------------------------------------------

class msg_happySupremacy_room_history : public ::google::protobuf::Message {
 public:
  msg_happySupremacy_room_history();
  virtual ~msg_happySupremacy_room_history();

  msg_happySupremacy_room_history(const msg_happySupremacy_room_history& from);

  inline msg_happySupremacy_room_history& operator=(const msg_happySupremacy_room_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_happySupremacy_room_history& default_instance();

  void Swap(msg_happySupremacy_room_history* other);

  // implements Message ----------------------------------------------

  msg_happySupremacy_room_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_happySupremacy_room_history& from);
  void MergeFrom(const msg_happySupremacy_room_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::int32 room_id() const;
  inline void set_room_id(::google::protobuf::int32 value);

  // repeated .client2world_protocols.happySupremacy_history_info cards_info = 2;
  inline int cards_info_size() const;
  inline void clear_cards_info();
  static const int kCardsInfoFieldNumber = 2;
  inline const ::client2world_protocols::happySupremacy_history_info& cards_info(int index) const;
  inline ::client2world_protocols::happySupremacy_history_info* mutable_cards_info(int index);
  inline ::client2world_protocols::happySupremacy_history_info* add_cards_info();
  inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::happySupremacy_history_info >&
      cards_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::happySupremacy_history_info >*
      mutable_cards_info();

  // @@protoc_insertion_point(class_scope:client2world_protocols.msg_happySupremacy_room_history)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client2world_protocols::happySupremacy_history_info > cards_info_;
  ::google::protobuf::int32 room_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static msg_happySupremacy_room_history* default_instance_;
};
// -------------------------------------------------------------------

class packetc2w_happySupremacy_history : public ::google::protobuf::Message {
 public:
  packetc2w_happySupremacy_history();
  virtual ~packetc2w_happySupremacy_history();

  packetc2w_happySupremacy_history(const packetc2w_happySupremacy_history& from);

  inline packetc2w_happySupremacy_history& operator=(const packetc2w_happySupremacy_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2w_happySupremacy_history& default_instance();

  void Swap(packetc2w_happySupremacy_history* other);

  // implements Message ----------------------------------------------

  packetc2w_happySupremacy_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2w_happySupremacy_history& from);
  void MergeFrom(const packetc2w_happySupremacy_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_happySupremacy_history];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetc2w_happySupremacy_history)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static packetc2w_happySupremacy_history* default_instance_;
};
// -------------------------------------------------------------------

class packetw2c_happySupremacy_history_result : public ::google::protobuf::Message {
 public:
  packetw2c_happySupremacy_history_result();
  virtual ~packetw2c_happySupremacy_history_result();

  packetw2c_happySupremacy_history_result(const packetw2c_happySupremacy_history_result& from);

  inline packetw2c_happySupremacy_history_result& operator=(const packetw2c_happySupremacy_history_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetw2c_happySupremacy_history_result& default_instance();

  void Swap(packetw2c_happySupremacy_history_result* other);

  // implements Message ----------------------------------------------

  packetw2c_happySupremacy_history_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetw2c_happySupremacy_history_result& from);
  void MergeFrom(const packetw2c_happySupremacy_history_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_happySupremacy_history_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // repeated .client2world_protocols.msg_happySupremacy_room_history room_history = 2;
  inline int room_history_size() const;
  inline void clear_room_history();
  static const int kRoomHistoryFieldNumber = 2;
  inline const ::client2world_protocols::msg_happySupremacy_room_history& room_history(int index) const;
  inline ::client2world_protocols::msg_happySupremacy_room_history* mutable_room_history(int index);
  inline ::client2world_protocols::msg_happySupremacy_room_history* add_room_history();
  inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_happySupremacy_room_history >&
      room_history() const;
  inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_happySupremacy_room_history >*
      mutable_room_history();

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetw2c_happySupremacy_history_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_happySupremacy_room_history > room_history_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static packetw2c_happySupremacy_history_result* default_instance_;
};
// -------------------------------------------------------------------

class msg_carsmagnate_room_history : public ::google::protobuf::Message {
 public:
  msg_carsmagnate_room_history();
  virtual ~msg_carsmagnate_room_history();

  msg_carsmagnate_room_history(const msg_carsmagnate_room_history& from);

  inline msg_carsmagnate_room_history& operator=(const msg_carsmagnate_room_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_carsmagnate_room_history& default_instance();

  void Swap(msg_carsmagnate_room_history* other);

  // implements Message ----------------------------------------------

  msg_carsmagnate_room_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_carsmagnate_room_history& from);
  void MergeFrom(const msg_carsmagnate_room_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::int32 room_id() const;
  inline void set_room_id(::google::protobuf::int32 value);

  // repeated int32 history_list = 2;
  inline int history_list_size() const;
  inline void clear_history_list();
  static const int kHistoryListFieldNumber = 2;
  inline ::google::protobuf::int32 history_list(int index) const;
  inline void set_history_list(int index, ::google::protobuf::int32 value);
  inline void add_history_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      history_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_history_list();

  // @@protoc_insertion_point(class_scope:client2world_protocols.msg_carsmagnate_room_history)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > history_list_;
  ::google::protobuf::int32 room_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static msg_carsmagnate_room_history* default_instance_;
};
// -------------------------------------------------------------------

class packetc2w_carsmagnate_history : public ::google::protobuf::Message {
 public:
  packetc2w_carsmagnate_history();
  virtual ~packetc2w_carsmagnate_history();

  packetc2w_carsmagnate_history(const packetc2w_carsmagnate_history& from);

  inline packetc2w_carsmagnate_history& operator=(const packetc2w_carsmagnate_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2w_carsmagnate_history& default_instance();

  void Swap(packetc2w_carsmagnate_history* other);

  // implements Message ----------------------------------------------

  packetc2w_carsmagnate_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2w_carsmagnate_history& from);
  void MergeFrom(const packetc2w_carsmagnate_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_carsmagnate_history];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetc2w_carsmagnate_history)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static packetc2w_carsmagnate_history* default_instance_;
};
// -------------------------------------------------------------------

class packetw2c_carsmagnate_history_result : public ::google::protobuf::Message {
 public:
  packetw2c_carsmagnate_history_result();
  virtual ~packetw2c_carsmagnate_history_result();

  packetw2c_carsmagnate_history_result(const packetw2c_carsmagnate_history_result& from);

  inline packetw2c_carsmagnate_history_result& operator=(const packetw2c_carsmagnate_history_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetw2c_carsmagnate_history_result& default_instance();

  void Swap(packetw2c_carsmagnate_history_result* other);

  // implements Message ----------------------------------------------

  packetw2c_carsmagnate_history_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetw2c_carsmagnate_history_result& from);
  void MergeFrom(const packetw2c_carsmagnate_history_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_carsmagnate_history_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // repeated .client2world_protocols.msg_carsmagnate_room_history room_history = 2;
  inline int room_history_size() const;
  inline void clear_room_history();
  static const int kRoomHistoryFieldNumber = 2;
  inline const ::client2world_protocols::msg_carsmagnate_room_history& room_history(int index) const;
  inline ::client2world_protocols::msg_carsmagnate_room_history* mutable_room_history(int index);
  inline ::client2world_protocols::msg_carsmagnate_room_history* add_room_history();
  inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_carsmagnate_room_history >&
      room_history() const;
  inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_carsmagnate_room_history >*
      mutable_room_history();

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetw2c_carsmagnate_history_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_carsmagnate_room_history > room_history_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static packetw2c_carsmagnate_history_result* default_instance_;
};
// -------------------------------------------------------------------

class msg_fourcolorball_room_history : public ::google::protobuf::Message {
 public:
  msg_fourcolorball_room_history();
  virtual ~msg_fourcolorball_room_history();

  msg_fourcolorball_room_history(const msg_fourcolorball_room_history& from);

  inline msg_fourcolorball_room_history& operator=(const msg_fourcolorball_room_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_fourcolorball_room_history& default_instance();

  void Swap(msg_fourcolorball_room_history* other);

  // implements Message ----------------------------------------------

  msg_fourcolorball_room_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_fourcolorball_room_history& from);
  void MergeFrom(const msg_fourcolorball_room_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::int32 room_id() const;
  inline void set_room_id(::google::protobuf::int32 value);

  // repeated int32 history_list = 2;
  inline int history_list_size() const;
  inline void clear_history_list();
  static const int kHistoryListFieldNumber = 2;
  inline ::google::protobuf::int32 history_list(int index) const;
  inline void set_history_list(int index, ::google::protobuf::int32 value);
  inline void add_history_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      history_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_history_list();

  // @@protoc_insertion_point(class_scope:client2world_protocols.msg_fourcolorball_room_history)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > history_list_;
  ::google::protobuf::int32 room_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static msg_fourcolorball_room_history* default_instance_;
};
// -------------------------------------------------------------------

class packetc2w_fourcolorball_history : public ::google::protobuf::Message {
 public:
  packetc2w_fourcolorball_history();
  virtual ~packetc2w_fourcolorball_history();

  packetc2w_fourcolorball_history(const packetc2w_fourcolorball_history& from);

  inline packetc2w_fourcolorball_history& operator=(const packetc2w_fourcolorball_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2w_fourcolorball_history& default_instance();

  void Swap(packetc2w_fourcolorball_history* other);

  // implements Message ----------------------------------------------

  packetc2w_fourcolorball_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2w_fourcolorball_history& from);
  void MergeFrom(const packetc2w_fourcolorball_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_fourcolorball_history];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetc2w_fourcolorball_history)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static packetc2w_fourcolorball_history* default_instance_;
};
// -------------------------------------------------------------------

class packetw2c_fourcolorball_history_result : public ::google::protobuf::Message {
 public:
  packetw2c_fourcolorball_history_result();
  virtual ~packetw2c_fourcolorball_history_result();

  packetw2c_fourcolorball_history_result(const packetw2c_fourcolorball_history_result& from);

  inline packetw2c_fourcolorball_history_result& operator=(const packetw2c_fourcolorball_history_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetw2c_fourcolorball_history_result& default_instance();

  void Swap(packetw2c_fourcolorball_history_result* other);

  // implements Message ----------------------------------------------

  packetw2c_fourcolorball_history_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetw2c_fourcolorball_history_result& from);
  void MergeFrom(const packetw2c_fourcolorball_history_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_fourcolorball_history_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // repeated .client2world_protocols.msg_fourcolorball_room_history room_history = 2;
  inline int room_history_size() const;
  inline void clear_room_history();
  static const int kRoomHistoryFieldNumber = 2;
  inline const ::client2world_protocols::msg_fourcolorball_room_history& room_history(int index) const;
  inline ::client2world_protocols::msg_fourcolorball_room_history* mutable_room_history(int index);
  inline ::client2world_protocols::msg_fourcolorball_room_history* add_room_history();
  inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_fourcolorball_room_history >&
      room_history() const;
  inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_fourcolorball_room_history >*
      mutable_room_history();

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetw2c_fourcolorball_history_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_fourcolorball_room_history > room_history_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5fhistory_2eproto();
  friend void protobuf_AssignDesc_client2world_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static packetw2c_fourcolorball_history_result* default_instance_;
};
// ===================================================================


// ===================================================================

// msg_baccarat_history

// optional bool is_tie = 1;
inline bool msg_baccarat_history::has_is_tie() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_baccarat_history::set_has_is_tie() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_baccarat_history::clear_has_is_tie() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_baccarat_history::clear_is_tie() {
  is_tie_ = false;
  clear_has_is_tie();
}
inline bool msg_baccarat_history::is_tie() const {
  return is_tie_;
}
inline void msg_baccarat_history::set_is_tie(bool value) {
  set_has_is_tie();
  is_tie_ = value;
}

// optional bool is_player_win = 2;
inline bool msg_baccarat_history::has_is_player_win() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_baccarat_history::set_has_is_player_win() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_baccarat_history::clear_has_is_player_win() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_baccarat_history::clear_is_player_win() {
  is_player_win_ = false;
  clear_has_is_player_win();
}
inline bool msg_baccarat_history::is_player_win() const {
  return is_player_win_;
}
inline void msg_baccarat_history::set_is_player_win(bool value) {
  set_has_is_player_win();
  is_player_win_ = value;
}

// optional bool is_player_pair = 3;
inline bool msg_baccarat_history::has_is_player_pair() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_baccarat_history::set_has_is_player_pair() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_baccarat_history::clear_has_is_player_pair() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_baccarat_history::clear_is_player_pair() {
  is_player_pair_ = false;
  clear_has_is_player_pair();
}
inline bool msg_baccarat_history::is_player_pair() const {
  return is_player_pair_;
}
inline void msg_baccarat_history::set_is_player_pair(bool value) {
  set_has_is_player_pair();
  is_player_pair_ = value;
}

// optional bool is_banker_pair = 4;
inline bool msg_baccarat_history::has_is_banker_pair() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void msg_baccarat_history::set_has_is_banker_pair() {
  _has_bits_[0] |= 0x00000008u;
}
inline void msg_baccarat_history::clear_has_is_banker_pair() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void msg_baccarat_history::clear_is_banker_pair() {
  is_banker_pair_ = false;
  clear_has_is_banker_pair();
}
inline bool msg_baccarat_history::is_banker_pair() const {
  return is_banker_pair_;
}
inline void msg_baccarat_history::set_is_banker_pair(bool value) {
  set_has_is_banker_pair();
  is_banker_pair_ = value;
}

// optional bool is_banker_win = 5;
inline bool msg_baccarat_history::has_is_banker_win() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void msg_baccarat_history::set_has_is_banker_win() {
  _has_bits_[0] |= 0x00000010u;
}
inline void msg_baccarat_history::clear_has_is_banker_win() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void msg_baccarat_history::clear_is_banker_win() {
  is_banker_win_ = false;
  clear_has_is_banker_win();
}
inline bool msg_baccarat_history::is_banker_win() const {
  return is_banker_win_;
}
inline void msg_baccarat_history::set_is_banker_win(bool value) {
  set_has_is_banker_win();
  is_banker_win_ = value;
}

// optional int32 win_point = 6;
inline bool msg_baccarat_history::has_win_point() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void msg_baccarat_history::set_has_win_point() {
  _has_bits_[0] |= 0x00000020u;
}
inline void msg_baccarat_history::clear_has_win_point() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void msg_baccarat_history::clear_win_point() {
  win_point_ = 0;
  clear_has_win_point();
}
inline ::google::protobuf::int32 msg_baccarat_history::win_point() const {
  return win_point_;
}
inline void msg_baccarat_history::set_win_point(::google::protobuf::int32 value) {
  set_has_win_point();
  win_point_ = value;
}

// -------------------------------------------------------------------

// msg_baccarat_room_history

// optional int32 room_id = 1;
inline bool msg_baccarat_room_history::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_baccarat_room_history::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_baccarat_room_history::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_baccarat_room_history::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 msg_baccarat_room_history::room_id() const {
  return room_id_;
}
inline void msg_baccarat_room_history::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
}

// repeated .client2world_protocols.msg_baccarat_history history_list = 8;
inline int msg_baccarat_room_history::history_list_size() const {
  return history_list_.size();
}
inline void msg_baccarat_room_history::clear_history_list() {
  history_list_.Clear();
}
inline const ::client2world_protocols::msg_baccarat_history& msg_baccarat_room_history::history_list(int index) const {
  return history_list_.Get(index);
}
inline ::client2world_protocols::msg_baccarat_history* msg_baccarat_room_history::mutable_history_list(int index) {
  return history_list_.Mutable(index);
}
inline ::client2world_protocols::msg_baccarat_history* msg_baccarat_room_history::add_history_list() {
  return history_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_baccarat_history >&
msg_baccarat_room_history::history_list() const {
  return history_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_baccarat_history >*
msg_baccarat_room_history::mutable_history_list() {
  return &history_list_;
}

// -------------------------------------------------------------------

// packetc2w_baccarat_history

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_baccarat_history];
inline bool packetc2w_baccarat_history::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2w_baccarat_history::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2w_baccarat_history::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2w_baccarat_history::clear_packet_id() {
  packet_id_ = 5104;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetc2w_baccarat_history::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2w_baccarat_history::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetw2c_baccarat_history_result

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_baccarat_history_result];
inline bool packetw2c_baccarat_history_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetw2c_baccarat_history_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetw2c_baccarat_history_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetw2c_baccarat_history_result::clear_packet_id() {
  packet_id_ = 7614;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetw2c_baccarat_history_result::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetw2c_baccarat_history_result::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// repeated .client2world_protocols.msg_baccarat_room_history room_history = 2;
inline int packetw2c_baccarat_history_result::room_history_size() const {
  return room_history_.size();
}
inline void packetw2c_baccarat_history_result::clear_room_history() {
  room_history_.Clear();
}
inline const ::client2world_protocols::msg_baccarat_room_history& packetw2c_baccarat_history_result::room_history(int index) const {
  return room_history_.Get(index);
}
inline ::client2world_protocols::msg_baccarat_room_history* packetw2c_baccarat_history_result::mutable_room_history(int index) {
  return room_history_.Mutable(index);
}
inline ::client2world_protocols::msg_baccarat_room_history* packetw2c_baccarat_history_result::add_room_history() {
  return room_history_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_baccarat_room_history >&
packetw2c_baccarat_history_result::room_history() const {
  return room_history_;
}
inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_baccarat_room_history >*
packetw2c_baccarat_history_result::mutable_room_history() {
  return &room_history_;
}

// -------------------------------------------------------------------

// msg_cows_history

// repeated bool is_win = 1;
inline int msg_cows_history::is_win_size() const {
  return is_win_.size();
}
inline void msg_cows_history::clear_is_win() {
  is_win_.Clear();
}
inline bool msg_cows_history::is_win(int index) const {
  return is_win_.Get(index);
}
inline void msg_cows_history::set_is_win(int index, bool value) {
  is_win_.Set(index, value);
}
inline void msg_cows_history::add_is_win(bool value) {
  is_win_.Add(value);
}
inline const ::google::protobuf::RepeatedField< bool >&
msg_cows_history::is_win() const {
  return is_win_;
}
inline ::google::protobuf::RepeatedField< bool >*
msg_cows_history::mutable_is_win() {
  return &is_win_;
}

// -------------------------------------------------------------------

// msg_cows_room_history

// optional int32 room_id = 1;
inline bool msg_cows_room_history::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_cows_room_history::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_cows_room_history::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_cows_room_history::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 msg_cows_room_history::room_id() const {
  return room_id_;
}
inline void msg_cows_room_history::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional int32 total_count = 2;
inline bool msg_cows_room_history::has_total_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_cows_room_history::set_has_total_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_cows_room_history::clear_has_total_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_cows_room_history::clear_total_count() {
  total_count_ = 0;
  clear_has_total_count();
}
inline ::google::protobuf::int32 msg_cows_room_history::total_count() const {
  return total_count_;
}
inline void msg_cows_room_history::set_total_count(::google::protobuf::int32 value) {
  set_has_total_count();
  total_count_ = value;
}

// repeated int32 win_counts = 3;
inline int msg_cows_room_history::win_counts_size() const {
  return win_counts_.size();
}
inline void msg_cows_room_history::clear_win_counts() {
  win_counts_.Clear();
}
inline ::google::protobuf::int32 msg_cows_room_history::win_counts(int index) const {
  return win_counts_.Get(index);
}
inline void msg_cows_room_history::set_win_counts(int index, ::google::protobuf::int32 value) {
  win_counts_.Set(index, value);
}
inline void msg_cows_room_history::add_win_counts(::google::protobuf::int32 value) {
  win_counts_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_cows_room_history::win_counts() const {
  return win_counts_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_cows_room_history::mutable_win_counts() {
  return &win_counts_;
}

// repeated int32 lose_counts = 4;
inline int msg_cows_room_history::lose_counts_size() const {
  return lose_counts_.size();
}
inline void msg_cows_room_history::clear_lose_counts() {
  lose_counts_.Clear();
}
inline ::google::protobuf::int32 msg_cows_room_history::lose_counts(int index) const {
  return lose_counts_.Get(index);
}
inline void msg_cows_room_history::set_lose_counts(int index, ::google::protobuf::int32 value) {
  lose_counts_.Set(index, value);
}
inline void msg_cows_room_history::add_lose_counts(::google::protobuf::int32 value) {
  lose_counts_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_cows_room_history::lose_counts() const {
  return lose_counts_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_cows_room_history::mutable_lose_counts() {
  return &lose_counts_;
}

// repeated .client2world_protocols.msg_cows_history history_list = 5;
inline int msg_cows_room_history::history_list_size() const {
  return history_list_.size();
}
inline void msg_cows_room_history::clear_history_list() {
  history_list_.Clear();
}
inline const ::client2world_protocols::msg_cows_history& msg_cows_room_history::history_list(int index) const {
  return history_list_.Get(index);
}
inline ::client2world_protocols::msg_cows_history* msg_cows_room_history::mutable_history_list(int index) {
  return history_list_.Mutable(index);
}
inline ::client2world_protocols::msg_cows_history* msg_cows_room_history::add_history_list() {
  return history_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_cows_history >&
msg_cows_room_history::history_list() const {
  return history_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_cows_history >*
msg_cows_room_history::mutable_history_list() {
  return &history_list_;
}

// -------------------------------------------------------------------

// packetc2w_cows_history

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_cows_history];
inline bool packetc2w_cows_history::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2w_cows_history::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2w_cows_history::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2w_cows_history::clear_packet_id() {
  packet_id_ = 5105;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetc2w_cows_history::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2w_cows_history::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetw2c_cows_history_result

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_cows_history_result];
inline bool packetw2c_cows_history_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetw2c_cows_history_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetw2c_cows_history_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetw2c_cows_history_result::clear_packet_id() {
  packet_id_ = 7615;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetw2c_cows_history_result::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetw2c_cows_history_result::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// repeated .client2world_protocols.msg_cows_room_history room_history = 2;
inline int packetw2c_cows_history_result::room_history_size() const {
  return room_history_.size();
}
inline void packetw2c_cows_history_result::clear_room_history() {
  room_history_.Clear();
}
inline const ::client2world_protocols::msg_cows_room_history& packetw2c_cows_history_result::room_history(int index) const {
  return room_history_.Get(index);
}
inline ::client2world_protocols::msg_cows_room_history* packetw2c_cows_history_result::mutable_room_history(int index) {
  return room_history_.Mutable(index);
}
inline ::client2world_protocols::msg_cows_room_history* packetw2c_cows_history_result::add_room_history() {
  return room_history_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_cows_room_history >&
packetw2c_cows_history_result::room_history() const {
  return room_history_;
}
inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_cows_room_history >*
packetw2c_cows_history_result::mutable_room_history() {
  return &room_history_;
}

// -------------------------------------------------------------------

// msg_dice_history

// optional int32 dice1 = 1;
inline bool msg_dice_history::has_dice1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_dice_history::set_has_dice1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_dice_history::clear_has_dice1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_dice_history::clear_dice1() {
  dice1_ = 0;
  clear_has_dice1();
}
inline ::google::protobuf::int32 msg_dice_history::dice1() const {
  return dice1_;
}
inline void msg_dice_history::set_dice1(::google::protobuf::int32 value) {
  set_has_dice1();
  dice1_ = value;
}

// optional int32 dice2 = 2;
inline bool msg_dice_history::has_dice2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_dice_history::set_has_dice2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_dice_history::clear_has_dice2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_dice_history::clear_dice2() {
  dice2_ = 0;
  clear_has_dice2();
}
inline ::google::protobuf::int32 msg_dice_history::dice2() const {
  return dice2_;
}
inline void msg_dice_history::set_dice2(::google::protobuf::int32 value) {
  set_has_dice2();
  dice2_ = value;
}

// optional int32 dice3 = 3;
inline bool msg_dice_history::has_dice3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_dice_history::set_has_dice3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_dice_history::clear_has_dice3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_dice_history::clear_dice3() {
  dice3_ = 0;
  clear_has_dice3();
}
inline ::google::protobuf::int32 msg_dice_history::dice3() const {
  return dice3_;
}
inline void msg_dice_history::set_dice3(::google::protobuf::int32 value) {
  set_has_dice3();
  dice3_ = value;
}

// -------------------------------------------------------------------

// msg_dice_room_history

// optional int32 room_id = 1;
inline bool msg_dice_room_history::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_dice_room_history::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_dice_room_history::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_dice_room_history::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 msg_dice_room_history::room_id() const {
  return room_id_;
}
inline void msg_dice_room_history::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
}

// repeated .client2world_protocols.msg_dice_history history_list = 8;
inline int msg_dice_room_history::history_list_size() const {
  return history_list_.size();
}
inline void msg_dice_room_history::clear_history_list() {
  history_list_.Clear();
}
inline const ::client2world_protocols::msg_dice_history& msg_dice_room_history::history_list(int index) const {
  return history_list_.Get(index);
}
inline ::client2world_protocols::msg_dice_history* msg_dice_room_history::mutable_history_list(int index) {
  return history_list_.Mutable(index);
}
inline ::client2world_protocols::msg_dice_history* msg_dice_room_history::add_history_list() {
  return history_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_dice_history >&
msg_dice_room_history::history_list() const {
  return history_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_dice_history >*
msg_dice_room_history::mutable_history_list() {
  return &history_list_;
}

// -------------------------------------------------------------------

// packetc2w_dice_history

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_dice_history];
inline bool packetc2w_dice_history::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2w_dice_history::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2w_dice_history::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2w_dice_history::clear_packet_id() {
  packet_id_ = 5106;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetc2w_dice_history::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2w_dice_history::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetw2c_dice_history_result

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_dice_history_result];
inline bool packetw2c_dice_history_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetw2c_dice_history_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetw2c_dice_history_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetw2c_dice_history_result::clear_packet_id() {
  packet_id_ = 7616;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetw2c_dice_history_result::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetw2c_dice_history_result::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// repeated .client2world_protocols.msg_dice_room_history room_history = 5;
inline int packetw2c_dice_history_result::room_history_size() const {
  return room_history_.size();
}
inline void packetw2c_dice_history_result::clear_room_history() {
  room_history_.Clear();
}
inline const ::client2world_protocols::msg_dice_room_history& packetw2c_dice_history_result::room_history(int index) const {
  return room_history_.Get(index);
}
inline ::client2world_protocols::msg_dice_room_history* packetw2c_dice_history_result::mutable_room_history(int index) {
  return room_history_.Mutable(index);
}
inline ::client2world_protocols::msg_dice_room_history* packetw2c_dice_history_result::add_room_history() {
  return room_history_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_dice_room_history >&
packetw2c_dice_history_result::room_history() const {
  return room_history_;
}
inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_dice_room_history >*
packetw2c_dice_history_result::mutable_room_history() {
  return &room_history_;
}

// -------------------------------------------------------------------

// msg_ebg_history

// repeated bool is_win = 1;
inline int msg_ebg_history::is_win_size() const {
  return is_win_.size();
}
inline void msg_ebg_history::clear_is_win() {
  is_win_.Clear();
}
inline bool msg_ebg_history::is_win(int index) const {
  return is_win_.Get(index);
}
inline void msg_ebg_history::set_is_win(int index, bool value) {
  is_win_.Set(index, value);
}
inline void msg_ebg_history::add_is_win(bool value) {
  is_win_.Add(value);
}
inline const ::google::protobuf::RepeatedField< bool >&
msg_ebg_history::is_win() const {
  return is_win_;
}
inline ::google::protobuf::RepeatedField< bool >*
msg_ebg_history::mutable_is_win() {
  return &is_win_;
}

// repeated int32 cards_id = 2;
inline int msg_ebg_history::cards_id_size() const {
  return cards_id_.size();
}
inline void msg_ebg_history::clear_cards_id() {
  cards_id_.Clear();
}
inline ::google::protobuf::int32 msg_ebg_history::cards_id(int index) const {
  return cards_id_.Get(index);
}
inline void msg_ebg_history::set_cards_id(int index, ::google::protobuf::int32 value) {
  cards_id_.Set(index, value);
}
inline void msg_ebg_history::add_cards_id(::google::protobuf::int32 value) {
  cards_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_ebg_history::cards_id() const {
  return cards_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_ebg_history::mutable_cards_id() {
  return &cards_id_;
}

// -------------------------------------------------------------------

// msg_ebg_room_history

// optional int32 room_id = 1;
inline bool msg_ebg_room_history::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_ebg_room_history::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_ebg_room_history::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_ebg_room_history::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 msg_ebg_room_history::room_id() const {
  return room_id_;
}
inline void msg_ebg_room_history::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional int32 total_count = 2;
inline bool msg_ebg_room_history::has_total_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_ebg_room_history::set_has_total_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_ebg_room_history::clear_has_total_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_ebg_room_history::clear_total_count() {
  total_count_ = 0;
  clear_has_total_count();
}
inline ::google::protobuf::int32 msg_ebg_room_history::total_count() const {
  return total_count_;
}
inline void msg_ebg_room_history::set_total_count(::google::protobuf::int32 value) {
  set_has_total_count();
  total_count_ = value;
}

// repeated int32 win_counts = 3;
inline int msg_ebg_room_history::win_counts_size() const {
  return win_counts_.size();
}
inline void msg_ebg_room_history::clear_win_counts() {
  win_counts_.Clear();
}
inline ::google::protobuf::int32 msg_ebg_room_history::win_counts(int index) const {
  return win_counts_.Get(index);
}
inline void msg_ebg_room_history::set_win_counts(int index, ::google::protobuf::int32 value) {
  win_counts_.Set(index, value);
}
inline void msg_ebg_room_history::add_win_counts(::google::protobuf::int32 value) {
  win_counts_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_ebg_room_history::win_counts() const {
  return win_counts_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_ebg_room_history::mutable_win_counts() {
  return &win_counts_;
}

// repeated int32 lose_counts = 4;
inline int msg_ebg_room_history::lose_counts_size() const {
  return lose_counts_.size();
}
inline void msg_ebg_room_history::clear_lose_counts() {
  lose_counts_.Clear();
}
inline ::google::protobuf::int32 msg_ebg_room_history::lose_counts(int index) const {
  return lose_counts_.Get(index);
}
inline void msg_ebg_room_history::set_lose_counts(int index, ::google::protobuf::int32 value) {
  lose_counts_.Set(index, value);
}
inline void msg_ebg_room_history::add_lose_counts(::google::protobuf::int32 value) {
  lose_counts_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_ebg_room_history::lose_counts() const {
  return lose_counts_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_ebg_room_history::mutable_lose_counts() {
  return &lose_counts_;
}

// repeated .client2world_protocols.msg_ebg_history history_list = 5;
inline int msg_ebg_room_history::history_list_size() const {
  return history_list_.size();
}
inline void msg_ebg_room_history::clear_history_list() {
  history_list_.Clear();
}
inline const ::client2world_protocols::msg_ebg_history& msg_ebg_room_history::history_list(int index) const {
  return history_list_.Get(index);
}
inline ::client2world_protocols::msg_ebg_history* msg_ebg_room_history::mutable_history_list(int index) {
  return history_list_.Mutable(index);
}
inline ::client2world_protocols::msg_ebg_history* msg_ebg_room_history::add_history_list() {
  return history_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_ebg_history >&
msg_ebg_room_history::history_list() const {
  return history_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_ebg_history >*
msg_ebg_room_history::mutable_history_list() {
  return &history_list_;
}

// -------------------------------------------------------------------

// packetc2w_ebg_history

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_ebg_history];
inline bool packetc2w_ebg_history::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2w_ebg_history::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2w_ebg_history::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2w_ebg_history::clear_packet_id() {
  packet_id_ = 5107;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetc2w_ebg_history::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2w_ebg_history::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetw2c_ebg_history_result

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_ebg_history_result];
inline bool packetw2c_ebg_history_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetw2c_ebg_history_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetw2c_ebg_history_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetw2c_ebg_history_result::clear_packet_id() {
  packet_id_ = 7617;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetw2c_ebg_history_result::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetw2c_ebg_history_result::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// repeated .client2world_protocols.msg_ebg_room_history room_history = 2;
inline int packetw2c_ebg_history_result::room_history_size() const {
  return room_history_.size();
}
inline void packetw2c_ebg_history_result::clear_room_history() {
  room_history_.Clear();
}
inline const ::client2world_protocols::msg_ebg_room_history& packetw2c_ebg_history_result::room_history(int index) const {
  return room_history_.Get(index);
}
inline ::client2world_protocols::msg_ebg_room_history* packetw2c_ebg_history_result::mutable_room_history(int index) {
  return room_history_.Mutable(index);
}
inline ::client2world_protocols::msg_ebg_room_history* packetw2c_ebg_history_result::add_room_history() {
  return room_history_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_ebg_room_history >&
packetw2c_ebg_history_result::room_history() const {
  return room_history_;
}
inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_ebg_room_history >*
packetw2c_ebg_history_result::mutable_room_history() {
  return &room_history_;
}

// -------------------------------------------------------------------

// msg_goldshark_room_history

// optional int32 room_id = 1;
inline bool msg_goldshark_room_history::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_goldshark_room_history::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_goldshark_room_history::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_goldshark_room_history::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 msg_goldshark_room_history::room_id() const {
  return room_id_;
}
inline void msg_goldshark_room_history::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
}

// repeated int32 history_list = 2;
inline int msg_goldshark_room_history::history_list_size() const {
  return history_list_.size();
}
inline void msg_goldshark_room_history::clear_history_list() {
  history_list_.Clear();
}
inline ::google::protobuf::int32 msg_goldshark_room_history::history_list(int index) const {
  return history_list_.Get(index);
}
inline void msg_goldshark_room_history::set_history_list(int index, ::google::protobuf::int32 value) {
  history_list_.Set(index, value);
}
inline void msg_goldshark_room_history::add_history_list(::google::protobuf::int32 value) {
  history_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_goldshark_room_history::history_list() const {
  return history_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_goldshark_room_history::mutable_history_list() {
  return &history_list_;
}

// -------------------------------------------------------------------

// packetc2w_goldshark_history

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_goldshark_history];
inline bool packetc2w_goldshark_history::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2w_goldshark_history::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2w_goldshark_history::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2w_goldshark_history::clear_packet_id() {
  packet_id_ = 5108;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetc2w_goldshark_history::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2w_goldshark_history::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetw2c_goldshark_history_result

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_goldshark_history_result];
inline bool packetw2c_goldshark_history_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetw2c_goldshark_history_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetw2c_goldshark_history_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetw2c_goldshark_history_result::clear_packet_id() {
  packet_id_ = 7618;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetw2c_goldshark_history_result::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetw2c_goldshark_history_result::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// repeated .client2world_protocols.msg_goldshark_room_history room_history = 2;
inline int packetw2c_goldshark_history_result::room_history_size() const {
  return room_history_.size();
}
inline void packetw2c_goldshark_history_result::clear_room_history() {
  room_history_.Clear();
}
inline const ::client2world_protocols::msg_goldshark_room_history& packetw2c_goldshark_history_result::room_history(int index) const {
  return room_history_.Get(index);
}
inline ::client2world_protocols::msg_goldshark_room_history* packetw2c_goldshark_history_result::mutable_room_history(int index) {
  return room_history_.Mutable(index);
}
inline ::client2world_protocols::msg_goldshark_room_history* packetw2c_goldshark_history_result::add_room_history() {
  return room_history_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_goldshark_room_history >&
packetw2c_goldshark_history_result::room_history() const {
  return room_history_;
}
inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_goldshark_room_history >*
packetw2c_goldshark_history_result::mutable_room_history() {
  return &room_history_;
}

// -------------------------------------------------------------------

// msg_multitexas_history

// repeated int32 win = 1;
inline int msg_multitexas_history::win_size() const {
  return win_.size();
}
inline void msg_multitexas_history::clear_win() {
  win_.Clear();
}
inline ::google::protobuf::int32 msg_multitexas_history::win(int index) const {
  return win_.Get(index);
}
inline void msg_multitexas_history::set_win(int index, ::google::protobuf::int32 value) {
  win_.Set(index, value);
}
inline void msg_multitexas_history::add_win(::google::protobuf::int32 value) {
  win_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_multitexas_history::win() const {
  return win_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_multitexas_history::mutable_win() {
  return &win_;
}

// -------------------------------------------------------------------

// msg_multitexas_room_history

// optional int32 room_id = 1;
inline bool msg_multitexas_room_history::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_multitexas_room_history::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_multitexas_room_history::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_multitexas_room_history::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 msg_multitexas_room_history::room_id() const {
  return room_id_;
}
inline void msg_multitexas_room_history::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
}

// repeated .client2world_protocols.msg_multitexas_history history_list = 2;
inline int msg_multitexas_room_history::history_list_size() const {
  return history_list_.size();
}
inline void msg_multitexas_room_history::clear_history_list() {
  history_list_.Clear();
}
inline const ::client2world_protocols::msg_multitexas_history& msg_multitexas_room_history::history_list(int index) const {
  return history_list_.Get(index);
}
inline ::client2world_protocols::msg_multitexas_history* msg_multitexas_room_history::mutable_history_list(int index) {
  return history_list_.Mutable(index);
}
inline ::client2world_protocols::msg_multitexas_history* msg_multitexas_room_history::add_history_list() {
  return history_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_multitexas_history >&
msg_multitexas_room_history::history_list() const {
  return history_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_multitexas_history >*
msg_multitexas_room_history::mutable_history_list() {
  return &history_list_;
}

// -------------------------------------------------------------------

// packetc2w_multitexas_history

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_multitexas_history];
inline bool packetc2w_multitexas_history::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2w_multitexas_history::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2w_multitexas_history::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2w_multitexas_history::clear_packet_id() {
  packet_id_ = 5109;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetc2w_multitexas_history::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2w_multitexas_history::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetw2c_multitexas_history_result

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_multitexas_history_result];
inline bool packetw2c_multitexas_history_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetw2c_multitexas_history_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetw2c_multitexas_history_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetw2c_multitexas_history_result::clear_packet_id() {
  packet_id_ = 7619;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetw2c_multitexas_history_result::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetw2c_multitexas_history_result::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// repeated .client2world_protocols.msg_multitexas_room_history room_history = 2;
inline int packetw2c_multitexas_history_result::room_history_size() const {
  return room_history_.size();
}
inline void packetw2c_multitexas_history_result::clear_room_history() {
  room_history_.Clear();
}
inline const ::client2world_protocols::msg_multitexas_room_history& packetw2c_multitexas_history_result::room_history(int index) const {
  return room_history_.Get(index);
}
inline ::client2world_protocols::msg_multitexas_room_history* packetw2c_multitexas_history_result::mutable_room_history(int index) {
  return room_history_.Mutable(index);
}
inline ::client2world_protocols::msg_multitexas_room_history* packetw2c_multitexas_history_result::add_room_history() {
  return room_history_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_multitexas_room_history >&
packetw2c_multitexas_history_result::room_history() const {
  return room_history_;
}
inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_multitexas_room_history >*
packetw2c_multitexas_history_result::mutable_room_history() {
  return &room_history_;
}

// -------------------------------------------------------------------

// msg_shcd_history

// optional int32 cards_type = 1;
inline bool msg_shcd_history::has_cards_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_shcd_history::set_has_cards_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_shcd_history::clear_has_cards_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_shcd_history::clear_cards_type() {
  cards_type_ = 0;
  clear_has_cards_type();
}
inline ::google::protobuf::int32 msg_shcd_history::cards_type() const {
  return cards_type_;
}
inline void msg_shcd_history::set_cards_type(::google::protobuf::int32 value) {
  set_has_cards_type();
  cards_type_ = value;
}

// optional int32 cards_value = 2;
inline bool msg_shcd_history::has_cards_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_shcd_history::set_has_cards_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_shcd_history::clear_has_cards_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_shcd_history::clear_cards_value() {
  cards_value_ = 0;
  clear_has_cards_value();
}
inline ::google::protobuf::int32 msg_shcd_history::cards_value() const {
  return cards_value_;
}
inline void msg_shcd_history::set_cards_value(::google::protobuf::int32 value) {
  set_has_cards_value();
  cards_value_ = value;
}

// -------------------------------------------------------------------

// msg_shcd_room_history

// optional int32 room_id = 1;
inline bool msg_shcd_room_history::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_shcd_room_history::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_shcd_room_history::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_shcd_room_history::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 msg_shcd_room_history::room_id() const {
  return room_id_;
}
inline void msg_shcd_room_history::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
}

// repeated .client2world_protocols.msg_shcd_history history_list = 2;
inline int msg_shcd_room_history::history_list_size() const {
  return history_list_.size();
}
inline void msg_shcd_room_history::clear_history_list() {
  history_list_.Clear();
}
inline const ::client2world_protocols::msg_shcd_history& msg_shcd_room_history::history_list(int index) const {
  return history_list_.Get(index);
}
inline ::client2world_protocols::msg_shcd_history* msg_shcd_room_history::mutable_history_list(int index) {
  return history_list_.Mutable(index);
}
inline ::client2world_protocols::msg_shcd_history* msg_shcd_room_history::add_history_list() {
  return history_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_shcd_history >&
msg_shcd_room_history::history_list() const {
  return history_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_shcd_history >*
msg_shcd_room_history::mutable_history_list() {
  return &history_list_;
}

// -------------------------------------------------------------------

// packetc2w_shcd_history

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_shcd_history];
inline bool packetc2w_shcd_history::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2w_shcd_history::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2w_shcd_history::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2w_shcd_history::clear_packet_id() {
  packet_id_ = 5110;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetc2w_shcd_history::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2w_shcd_history::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetw2c_shcd_history_result

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_shcd_history_result];
inline bool packetw2c_shcd_history_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetw2c_shcd_history_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetw2c_shcd_history_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetw2c_shcd_history_result::clear_packet_id() {
  packet_id_ = 7620;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetw2c_shcd_history_result::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetw2c_shcd_history_result::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// repeated .client2world_protocols.msg_shcd_room_history room_history = 2;
inline int packetw2c_shcd_history_result::room_history_size() const {
  return room_history_.size();
}
inline void packetw2c_shcd_history_result::clear_room_history() {
  room_history_.Clear();
}
inline const ::client2world_protocols::msg_shcd_room_history& packetw2c_shcd_history_result::room_history(int index) const {
  return room_history_.Get(index);
}
inline ::client2world_protocols::msg_shcd_room_history* packetw2c_shcd_history_result::mutable_room_history(int index) {
  return room_history_.Mutable(index);
}
inline ::client2world_protocols::msg_shcd_room_history* packetw2c_shcd_history_result::add_room_history() {
  return room_history_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_shcd_room_history >&
packetw2c_shcd_history_result::room_history() const {
  return room_history_;
}
inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_shcd_room_history >*
packetw2c_shcd_history_result::mutable_room_history() {
  return &room_history_;
}

// -------------------------------------------------------------------

// msg_benzbmw_room_history

// optional int32 room_id = 1;
inline bool msg_benzbmw_room_history::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_benzbmw_room_history::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_benzbmw_room_history::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_benzbmw_room_history::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 msg_benzbmw_room_history::room_id() const {
  return room_id_;
}
inline void msg_benzbmw_room_history::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
}

// repeated int32 history_list = 2;
inline int msg_benzbmw_room_history::history_list_size() const {
  return history_list_.size();
}
inline void msg_benzbmw_room_history::clear_history_list() {
  history_list_.Clear();
}
inline ::google::protobuf::int32 msg_benzbmw_room_history::history_list(int index) const {
  return history_list_.Get(index);
}
inline void msg_benzbmw_room_history::set_history_list(int index, ::google::protobuf::int32 value) {
  history_list_.Set(index, value);
}
inline void msg_benzbmw_room_history::add_history_list(::google::protobuf::int32 value) {
  history_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_benzbmw_room_history::history_list() const {
  return history_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_benzbmw_room_history::mutable_history_list() {
  return &history_list_;
}

// -------------------------------------------------------------------

// packetc2w_benzbmw_history

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_benzbmw_history];
inline bool packetc2w_benzbmw_history::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2w_benzbmw_history::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2w_benzbmw_history::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2w_benzbmw_history::clear_packet_id() {
  packet_id_ = 5112;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetc2w_benzbmw_history::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2w_benzbmw_history::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetw2c_benzbmw_history_result

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_benzbmw_history_result];
inline bool packetw2c_benzbmw_history_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetw2c_benzbmw_history_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetw2c_benzbmw_history_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetw2c_benzbmw_history_result::clear_packet_id() {
  packet_id_ = 7623;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetw2c_benzbmw_history_result::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetw2c_benzbmw_history_result::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// repeated .client2world_protocols.msg_benzbmw_room_history room_history = 2;
inline int packetw2c_benzbmw_history_result::room_history_size() const {
  return room_history_.size();
}
inline void packetw2c_benzbmw_history_result::clear_room_history() {
  room_history_.Clear();
}
inline const ::client2world_protocols::msg_benzbmw_room_history& packetw2c_benzbmw_history_result::room_history(int index) const {
  return room_history_.Get(index);
}
inline ::client2world_protocols::msg_benzbmw_room_history* packetw2c_benzbmw_history_result::mutable_room_history(int index) {
  return room_history_.Mutable(index);
}
inline ::client2world_protocols::msg_benzbmw_room_history* packetw2c_benzbmw_history_result::add_room_history() {
  return room_history_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_benzbmw_room_history >&
packetw2c_benzbmw_history_result::room_history() const {
  return room_history_;
}
inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_benzbmw_room_history >*
packetw2c_benzbmw_history_result::mutable_room_history() {
  return &room_history_;
}

// -------------------------------------------------------------------

// msg_forestball_room_history

// optional int32 room_id = 1;
inline bool msg_forestball_room_history::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_forestball_room_history::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_forestball_room_history::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_forestball_room_history::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 msg_forestball_room_history::room_id() const {
  return room_id_;
}
inline void msg_forestball_room_history::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
}

// repeated int32 history_list = 2;
inline int msg_forestball_room_history::history_list_size() const {
  return history_list_.size();
}
inline void msg_forestball_room_history::clear_history_list() {
  history_list_.Clear();
}
inline ::google::protobuf::int32 msg_forestball_room_history::history_list(int index) const {
  return history_list_.Get(index);
}
inline void msg_forestball_room_history::set_history_list(int index, ::google::protobuf::int32 value) {
  history_list_.Set(index, value);
}
inline void msg_forestball_room_history::add_history_list(::google::protobuf::int32 value) {
  history_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_forestball_room_history::history_list() const {
  return history_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_forestball_room_history::mutable_history_list() {
  return &history_list_;
}

// -------------------------------------------------------------------

// packetc2w_forestball_history

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_forestball_history];
inline bool packetc2w_forestball_history::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2w_forestball_history::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2w_forestball_history::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2w_forestball_history::clear_packet_id() {
  packet_id_ = 5113;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetc2w_forestball_history::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2w_forestball_history::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetw2c_forestball_history_result

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_forestball_history_result];
inline bool packetw2c_forestball_history_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetw2c_forestball_history_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetw2c_forestball_history_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetw2c_forestball_history_result::clear_packet_id() {
  packet_id_ = 7624;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetw2c_forestball_history_result::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetw2c_forestball_history_result::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// repeated .client2world_protocols.msg_forestball_room_history room_history = 2;
inline int packetw2c_forestball_history_result::room_history_size() const {
  return room_history_.size();
}
inline void packetw2c_forestball_history_result::clear_room_history() {
  room_history_.Clear();
}
inline const ::client2world_protocols::msg_forestball_room_history& packetw2c_forestball_history_result::room_history(int index) const {
  return room_history_.Get(index);
}
inline ::client2world_protocols::msg_forestball_room_history* packetw2c_forestball_history_result::mutable_room_history(int index) {
  return room_history_.Mutable(index);
}
inline ::client2world_protocols::msg_forestball_room_history* packetw2c_forestball_history_result::add_room_history() {
  return room_history_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_forestball_room_history >&
packetw2c_forestball_history_result::room_history() const {
  return room_history_;
}
inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_forestball_room_history >*
packetw2c_forestball_history_result::mutable_room_history() {
  return &room_history_;
}

// -------------------------------------------------------------------

// msg_fruits_room_history

// optional int32 room_id = 1;
inline bool msg_fruits_room_history::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_fruits_room_history::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_fruits_room_history::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_fruits_room_history::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 msg_fruits_room_history::room_id() const {
  return room_id_;
}
inline void msg_fruits_room_history::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
}

// repeated int32 history_list = 2;
inline int msg_fruits_room_history::history_list_size() const {
  return history_list_.size();
}
inline void msg_fruits_room_history::clear_history_list() {
  history_list_.Clear();
}
inline ::google::protobuf::int32 msg_fruits_room_history::history_list(int index) const {
  return history_list_.Get(index);
}
inline void msg_fruits_room_history::set_history_list(int index, ::google::protobuf::int32 value) {
  history_list_.Set(index, value);
}
inline void msg_fruits_room_history::add_history_list(::google::protobuf::int32 value) {
  history_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_fruits_room_history::history_list() const {
  return history_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_fruits_room_history::mutable_history_list() {
  return &history_list_;
}

// -------------------------------------------------------------------

// packetc2w_fruits_history

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_fruits_history];
inline bool packetc2w_fruits_history::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2w_fruits_history::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2w_fruits_history::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2w_fruits_history::clear_packet_id() {
  packet_id_ = 5114;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetc2w_fruits_history::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2w_fruits_history::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetw2c_fruits_history_result

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_fruits_history_result];
inline bool packetw2c_fruits_history_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetw2c_fruits_history_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetw2c_fruits_history_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetw2c_fruits_history_result::clear_packet_id() {
  packet_id_ = 7625;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetw2c_fruits_history_result::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetw2c_fruits_history_result::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// repeated .client2world_protocols.msg_fruits_room_history room_history = 2;
inline int packetw2c_fruits_history_result::room_history_size() const {
  return room_history_.size();
}
inline void packetw2c_fruits_history_result::clear_room_history() {
  room_history_.Clear();
}
inline const ::client2world_protocols::msg_fruits_room_history& packetw2c_fruits_history_result::room_history(int index) const {
  return room_history_.Get(index);
}
inline ::client2world_protocols::msg_fruits_room_history* packetw2c_fruits_history_result::mutable_room_history(int index) {
  return room_history_.Mutable(index);
}
inline ::client2world_protocols::msg_fruits_room_history* packetw2c_fruits_history_result::add_room_history() {
  return room_history_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_fruits_room_history >&
packetw2c_fruits_history_result::room_history() const {
  return room_history_;
}
inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_fruits_room_history >*
packetw2c_fruits_history_result::mutable_room_history() {
  return &room_history_;
}

// -------------------------------------------------------------------

// msg_lhd_room_history

// optional int32 room_id = 1;
inline bool msg_lhd_room_history::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_lhd_room_history::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_lhd_room_history::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_lhd_room_history::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 msg_lhd_room_history::room_id() const {
  return room_id_;
}
inline void msg_lhd_room_history::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional int32 total_count = 2;
inline bool msg_lhd_room_history::has_total_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_lhd_room_history::set_has_total_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_lhd_room_history::clear_has_total_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_lhd_room_history::clear_total_count() {
  total_count_ = 0;
  clear_has_total_count();
}
inline ::google::protobuf::int32 msg_lhd_room_history::total_count() const {
  return total_count_;
}
inline void msg_lhd_room_history::set_total_count(::google::protobuf::int32 value) {
  set_has_total_count();
  total_count_ = value;
}

// repeated int32 win_counts = 3;
inline int msg_lhd_room_history::win_counts_size() const {
  return win_counts_.size();
}
inline void msg_lhd_room_history::clear_win_counts() {
  win_counts_.Clear();
}
inline ::google::protobuf::int32 msg_lhd_room_history::win_counts(int index) const {
  return win_counts_.Get(index);
}
inline void msg_lhd_room_history::set_win_counts(int index, ::google::protobuf::int32 value) {
  win_counts_.Set(index, value);
}
inline void msg_lhd_room_history::add_win_counts(::google::protobuf::int32 value) {
  win_counts_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_lhd_room_history::win_counts() const {
  return win_counts_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_lhd_room_history::mutable_win_counts() {
  return &win_counts_;
}

// repeated int32 lose_counts = 4;
inline int msg_lhd_room_history::lose_counts_size() const {
  return lose_counts_.size();
}
inline void msg_lhd_room_history::clear_lose_counts() {
  lose_counts_.Clear();
}
inline ::google::protobuf::int32 msg_lhd_room_history::lose_counts(int index) const {
  return lose_counts_.Get(index);
}
inline void msg_lhd_room_history::set_lose_counts(int index, ::google::protobuf::int32 value) {
  lose_counts_.Set(index, value);
}
inline void msg_lhd_room_history::add_lose_counts(::google::protobuf::int32 value) {
  lose_counts_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_lhd_room_history::lose_counts() const {
  return lose_counts_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_lhd_room_history::mutable_lose_counts() {
  return &lose_counts_;
}

// repeated int32 history_infos = 5;
inline int msg_lhd_room_history::history_infos_size() const {
  return history_infos_.size();
}
inline void msg_lhd_room_history::clear_history_infos() {
  history_infos_.Clear();
}
inline ::google::protobuf::int32 msg_lhd_room_history::history_infos(int index) const {
  return history_infos_.Get(index);
}
inline void msg_lhd_room_history::set_history_infos(int index, ::google::protobuf::int32 value) {
  history_infos_.Set(index, value);
}
inline void msg_lhd_room_history::add_history_infos(::google::protobuf::int32 value) {
  history_infos_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_lhd_room_history::history_infos() const {
  return history_infos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_lhd_room_history::mutable_history_infos() {
  return &history_infos_;
}

// -------------------------------------------------------------------

// packetc2w_lhd_history

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_lhd_history];
inline bool packetc2w_lhd_history::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2w_lhd_history::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2w_lhd_history::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2w_lhd_history::clear_packet_id() {
  packet_id_ = 5115;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetc2w_lhd_history::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2w_lhd_history::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetw2c_lhd_history_result

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_lhd_history_result];
inline bool packetw2c_lhd_history_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetw2c_lhd_history_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetw2c_lhd_history_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetw2c_lhd_history_result::clear_packet_id() {
  packet_id_ = 7626;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetw2c_lhd_history_result::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetw2c_lhd_history_result::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// repeated .client2world_protocols.msg_lhd_room_history room_history = 2;
inline int packetw2c_lhd_history_result::room_history_size() const {
  return room_history_.size();
}
inline void packetw2c_lhd_history_result::clear_room_history() {
  room_history_.Clear();
}
inline const ::client2world_protocols::msg_lhd_room_history& packetw2c_lhd_history_result::room_history(int index) const {
  return room_history_.Get(index);
}
inline ::client2world_protocols::msg_lhd_room_history* packetw2c_lhd_history_result::mutable_room_history(int index) {
  return room_history_.Mutable(index);
}
inline ::client2world_protocols::msg_lhd_room_history* packetw2c_lhd_history_result::add_room_history() {
  return room_history_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_lhd_room_history >&
packetw2c_lhd_history_result::room_history() const {
  return room_history_;
}
inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_lhd_room_history >*
packetw2c_lhd_history_result::mutable_room_history() {
  return &room_history_;
}

// -------------------------------------------------------------------

// msg_multiredblack_room_history

// optional int32 room_id = 1;
inline bool msg_multiredblack_room_history::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_multiredblack_room_history::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_multiredblack_room_history::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_multiredblack_room_history::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 msg_multiredblack_room_history::room_id() const {
  return room_id_;
}
inline void msg_multiredblack_room_history::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
}

// repeated int32 history_infos = 2;
inline int msg_multiredblack_room_history::history_infos_size() const {
  return history_infos_.size();
}
inline void msg_multiredblack_room_history::clear_history_infos() {
  history_infos_.Clear();
}
inline ::google::protobuf::int32 msg_multiredblack_room_history::history_infos(int index) const {
  return history_infos_.Get(index);
}
inline void msg_multiredblack_room_history::set_history_infos(int index, ::google::protobuf::int32 value) {
  history_infos_.Set(index, value);
}
inline void msg_multiredblack_room_history::add_history_infos(::google::protobuf::int32 value) {
  history_infos_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_multiredblack_room_history::history_infos() const {
  return history_infos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_multiredblack_room_history::mutable_history_infos() {
  return &history_infos_;
}

// -------------------------------------------------------------------

// packetc2w_multiredblack_history

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_multiredblack_history];
inline bool packetc2w_multiredblack_history::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2w_multiredblack_history::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2w_multiredblack_history::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2w_multiredblack_history::clear_packet_id() {
  packet_id_ = 5116;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetc2w_multiredblack_history::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2w_multiredblack_history::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetw2c_multiredblack_history_result

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_multiredblack_history_result];
inline bool packetw2c_multiredblack_history_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetw2c_multiredblack_history_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetw2c_multiredblack_history_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetw2c_multiredblack_history_result::clear_packet_id() {
  packet_id_ = 7627;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetw2c_multiredblack_history_result::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetw2c_multiredblack_history_result::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// repeated .client2world_protocols.msg_multiredblack_room_history room_history = 2;
inline int packetw2c_multiredblack_history_result::room_history_size() const {
  return room_history_.size();
}
inline void packetw2c_multiredblack_history_result::clear_room_history() {
  room_history_.Clear();
}
inline const ::client2world_protocols::msg_multiredblack_room_history& packetw2c_multiredblack_history_result::room_history(int index) const {
  return room_history_.Get(index);
}
inline ::client2world_protocols::msg_multiredblack_room_history* packetw2c_multiredblack_history_result::mutable_room_history(int index) {
  return room_history_.Mutable(index);
}
inline ::client2world_protocols::msg_multiredblack_room_history* packetw2c_multiredblack_history_result::add_room_history() {
  return room_history_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_multiredblack_room_history >&
packetw2c_multiredblack_history_result::room_history() const {
  return room_history_;
}
inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_multiredblack_room_history >*
packetw2c_multiredblack_history_result::mutable_room_history() {
  return &room_history_;
}

// -------------------------------------------------------------------

// happySupremacy_history_info

// optional bool is_forward_win = 1;
inline bool happySupremacy_history_info::has_is_forward_win() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void happySupremacy_history_info::set_has_is_forward_win() {
  _has_bits_[0] |= 0x00000001u;
}
inline void happySupremacy_history_info::clear_has_is_forward_win() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void happySupremacy_history_info::clear_is_forward_win() {
  is_forward_win_ = false;
  clear_has_is_forward_win();
}
inline bool happySupremacy_history_info::is_forward_win() const {
  return is_forward_win_;
}
inline void happySupremacy_history_info::set_is_forward_win(bool value) {
  set_has_is_forward_win();
  is_forward_win_ = value;
}

// optional bool is_reverse_win = 2;
inline bool happySupremacy_history_info::has_is_reverse_win() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void happySupremacy_history_info::set_has_is_reverse_win() {
  _has_bits_[0] |= 0x00000002u;
}
inline void happySupremacy_history_info::clear_has_is_reverse_win() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void happySupremacy_history_info::clear_is_reverse_win() {
  is_reverse_win_ = false;
  clear_has_is_reverse_win();
}
inline bool happySupremacy_history_info::is_reverse_win() const {
  return is_reverse_win_;
}
inline void happySupremacy_history_info::set_is_reverse_win(bool value) {
  set_has_is_reverse_win();
  is_reverse_win_ = value;
}

// optional bool is_opposite_win = 3;
inline bool happySupremacy_history_info::has_is_opposite_win() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void happySupremacy_history_info::set_has_is_opposite_win() {
  _has_bits_[0] |= 0x00000004u;
}
inline void happySupremacy_history_info::clear_has_is_opposite_win() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void happySupremacy_history_info::clear_is_opposite_win() {
  is_opposite_win_ = false;
  clear_has_is_opposite_win();
}
inline bool happySupremacy_history_info::is_opposite_win() const {
  return is_opposite_win_;
}
inline void happySupremacy_history_info::set_is_opposite_win(bool value) {
  set_has_is_opposite_win();
  is_opposite_win_ = value;
}

// repeated int32 cards = 4;
inline int happySupremacy_history_info::cards_size() const {
  return cards_.size();
}
inline void happySupremacy_history_info::clear_cards() {
  cards_.Clear();
}
inline ::google::protobuf::int32 happySupremacy_history_info::cards(int index) const {
  return cards_.Get(index);
}
inline void happySupremacy_history_info::set_cards(int index, ::google::protobuf::int32 value) {
  cards_.Set(index, value);
}
inline void happySupremacy_history_info::add_cards(::google::protobuf::int32 value) {
  cards_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
happySupremacy_history_info::cards() const {
  return cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
happySupremacy_history_info::mutable_cards() {
  return &cards_;
}

// repeated int32 cards_type = 5;
inline int happySupremacy_history_info::cards_type_size() const {
  return cards_type_.size();
}
inline void happySupremacy_history_info::clear_cards_type() {
  cards_type_.Clear();
}
inline ::google::protobuf::int32 happySupremacy_history_info::cards_type(int index) const {
  return cards_type_.Get(index);
}
inline void happySupremacy_history_info::set_cards_type(int index, ::google::protobuf::int32 value) {
  cards_type_.Set(index, value);
}
inline void happySupremacy_history_info::add_cards_type(::google::protobuf::int32 value) {
  cards_type_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
happySupremacy_history_info::cards_type() const {
  return cards_type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
happySupremacy_history_info::mutable_cards_type() {
  return &cards_type_;
}

// -------------------------------------------------------------------

// msg_happySupremacy_room_history

// optional int32 room_id = 1;
inline bool msg_happySupremacy_room_history::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_happySupremacy_room_history::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_happySupremacy_room_history::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_happySupremacy_room_history::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 msg_happySupremacy_room_history::room_id() const {
  return room_id_;
}
inline void msg_happySupremacy_room_history::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
}

// repeated .client2world_protocols.happySupremacy_history_info cards_info = 2;
inline int msg_happySupremacy_room_history::cards_info_size() const {
  return cards_info_.size();
}
inline void msg_happySupremacy_room_history::clear_cards_info() {
  cards_info_.Clear();
}
inline const ::client2world_protocols::happySupremacy_history_info& msg_happySupremacy_room_history::cards_info(int index) const {
  return cards_info_.Get(index);
}
inline ::client2world_protocols::happySupremacy_history_info* msg_happySupremacy_room_history::mutable_cards_info(int index) {
  return cards_info_.Mutable(index);
}
inline ::client2world_protocols::happySupremacy_history_info* msg_happySupremacy_room_history::add_cards_info() {
  return cards_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::happySupremacy_history_info >&
msg_happySupremacy_room_history::cards_info() const {
  return cards_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::happySupremacy_history_info >*
msg_happySupremacy_room_history::mutable_cards_info() {
  return &cards_info_;
}

// -------------------------------------------------------------------

// packetc2w_happySupremacy_history

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_happySupremacy_history];
inline bool packetc2w_happySupremacy_history::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2w_happySupremacy_history::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2w_happySupremacy_history::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2w_happySupremacy_history::clear_packet_id() {
  packet_id_ = 5117;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetc2w_happySupremacy_history::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2w_happySupremacy_history::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetw2c_happySupremacy_history_result

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_happySupremacy_history_result];
inline bool packetw2c_happySupremacy_history_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetw2c_happySupremacy_history_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetw2c_happySupremacy_history_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetw2c_happySupremacy_history_result::clear_packet_id() {
  packet_id_ = 7628;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetw2c_happySupremacy_history_result::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetw2c_happySupremacy_history_result::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// repeated .client2world_protocols.msg_happySupremacy_room_history room_history = 2;
inline int packetw2c_happySupremacy_history_result::room_history_size() const {
  return room_history_.size();
}
inline void packetw2c_happySupremacy_history_result::clear_room_history() {
  room_history_.Clear();
}
inline const ::client2world_protocols::msg_happySupremacy_room_history& packetw2c_happySupremacy_history_result::room_history(int index) const {
  return room_history_.Get(index);
}
inline ::client2world_protocols::msg_happySupremacy_room_history* packetw2c_happySupremacy_history_result::mutable_room_history(int index) {
  return room_history_.Mutable(index);
}
inline ::client2world_protocols::msg_happySupremacy_room_history* packetw2c_happySupremacy_history_result::add_room_history() {
  return room_history_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_happySupremacy_room_history >&
packetw2c_happySupremacy_history_result::room_history() const {
  return room_history_;
}
inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_happySupremacy_room_history >*
packetw2c_happySupremacy_history_result::mutable_room_history() {
  return &room_history_;
}

// -------------------------------------------------------------------

// msg_carsmagnate_room_history

// optional int32 room_id = 1;
inline bool msg_carsmagnate_room_history::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_carsmagnate_room_history::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_carsmagnate_room_history::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_carsmagnate_room_history::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 msg_carsmagnate_room_history::room_id() const {
  return room_id_;
}
inline void msg_carsmagnate_room_history::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
}

// repeated int32 history_list = 2;
inline int msg_carsmagnate_room_history::history_list_size() const {
  return history_list_.size();
}
inline void msg_carsmagnate_room_history::clear_history_list() {
  history_list_.Clear();
}
inline ::google::protobuf::int32 msg_carsmagnate_room_history::history_list(int index) const {
  return history_list_.Get(index);
}
inline void msg_carsmagnate_room_history::set_history_list(int index, ::google::protobuf::int32 value) {
  history_list_.Set(index, value);
}
inline void msg_carsmagnate_room_history::add_history_list(::google::protobuf::int32 value) {
  history_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_carsmagnate_room_history::history_list() const {
  return history_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_carsmagnate_room_history::mutable_history_list() {
  return &history_list_;
}

// -------------------------------------------------------------------

// packetc2w_carsmagnate_history

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_carsmagnate_history];
inline bool packetc2w_carsmagnate_history::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2w_carsmagnate_history::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2w_carsmagnate_history::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2w_carsmagnate_history::clear_packet_id() {
  packet_id_ = 5118;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetc2w_carsmagnate_history::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2w_carsmagnate_history::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetw2c_carsmagnate_history_result

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_carsmagnate_history_result];
inline bool packetw2c_carsmagnate_history_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetw2c_carsmagnate_history_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetw2c_carsmagnate_history_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetw2c_carsmagnate_history_result::clear_packet_id() {
  packet_id_ = 7629;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetw2c_carsmagnate_history_result::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetw2c_carsmagnate_history_result::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// repeated .client2world_protocols.msg_carsmagnate_room_history room_history = 2;
inline int packetw2c_carsmagnate_history_result::room_history_size() const {
  return room_history_.size();
}
inline void packetw2c_carsmagnate_history_result::clear_room_history() {
  room_history_.Clear();
}
inline const ::client2world_protocols::msg_carsmagnate_room_history& packetw2c_carsmagnate_history_result::room_history(int index) const {
  return room_history_.Get(index);
}
inline ::client2world_protocols::msg_carsmagnate_room_history* packetw2c_carsmagnate_history_result::mutable_room_history(int index) {
  return room_history_.Mutable(index);
}
inline ::client2world_protocols::msg_carsmagnate_room_history* packetw2c_carsmagnate_history_result::add_room_history() {
  return room_history_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_carsmagnate_room_history >&
packetw2c_carsmagnate_history_result::room_history() const {
  return room_history_;
}
inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_carsmagnate_room_history >*
packetw2c_carsmagnate_history_result::mutable_room_history() {
  return &room_history_;
}

// -------------------------------------------------------------------

// msg_fourcolorball_room_history

// optional int32 room_id = 1;
inline bool msg_fourcolorball_room_history::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_fourcolorball_room_history::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_fourcolorball_room_history::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_fourcolorball_room_history::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 msg_fourcolorball_room_history::room_id() const {
  return room_id_;
}
inline void msg_fourcolorball_room_history::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
}

// repeated int32 history_list = 2;
inline int msg_fourcolorball_room_history::history_list_size() const {
  return history_list_.size();
}
inline void msg_fourcolorball_room_history::clear_history_list() {
  history_list_.Clear();
}
inline ::google::protobuf::int32 msg_fourcolorball_room_history::history_list(int index) const {
  return history_list_.Get(index);
}
inline void msg_fourcolorball_room_history::set_history_list(int index, ::google::protobuf::int32 value) {
  history_list_.Set(index, value);
}
inline void msg_fourcolorball_room_history::add_history_list(::google::protobuf::int32 value) {
  history_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_fourcolorball_room_history::history_list() const {
  return history_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_fourcolorball_room_history::mutable_history_list() {
  return &history_list_;
}

// -------------------------------------------------------------------

// packetc2w_fourcolorball_history

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_fourcolorball_history];
inline bool packetc2w_fourcolorball_history::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2w_fourcolorball_history::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2w_fourcolorball_history::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2w_fourcolorball_history::clear_packet_id() {
  packet_id_ = 5119;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetc2w_fourcolorball_history::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2w_fourcolorball_history::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetw2c_fourcolorball_history_result

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_fourcolorball_history_result];
inline bool packetw2c_fourcolorball_history_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetw2c_fourcolorball_history_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetw2c_fourcolorball_history_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetw2c_fourcolorball_history_result::clear_packet_id() {
  packet_id_ = 7630;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetw2c_fourcolorball_history_result::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetw2c_fourcolorball_history_result::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// repeated .client2world_protocols.msg_fourcolorball_room_history room_history = 2;
inline int packetw2c_fourcolorball_history_result::room_history_size() const {
  return room_history_.size();
}
inline void packetw2c_fourcolorball_history_result::clear_room_history() {
  room_history_.Clear();
}
inline const ::client2world_protocols::msg_fourcolorball_room_history& packetw2c_fourcolorball_history_result::room_history(int index) const {
  return room_history_.Get(index);
}
inline ::client2world_protocols::msg_fourcolorball_room_history* packetw2c_fourcolorball_history_result::mutable_room_history(int index) {
  return room_history_.Mutable(index);
}
inline ::client2world_protocols::msg_fourcolorball_room_history* packetw2c_fourcolorball_history_result::add_room_history() {
  return room_history_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_fourcolorball_room_history >&
packetw2c_fourcolorball_history_result::room_history() const {
  return room_history_;
}
inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_fourcolorball_room_history >*
packetw2c_fourcolorball_history_result::mutable_room_history() {
  return &room_history_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace client2world_protocols

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_client2world_5fhistory_2eproto__INCLUDED
