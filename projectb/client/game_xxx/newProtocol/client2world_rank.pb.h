// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2world_rank.proto

#ifndef PROTOBUF_client2world_5frank_2eproto__INCLUDED
#define PROTOBUF_client2world_5frank_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "client2world_msg_type.pb.h"
#include "msg_type_def.pb.h"
#include "msg_info_def.pb.h"
// @@protoc_insertion_point(includes)

namespace client2world_protocols {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_client2world_5frank_2eproto();
void protobuf_AssignDesc_client2world_5frank_2eproto();
void protobuf_ShutdownFile_client2world_5frank_2eproto();

class msg_inviter_ranklist;
class packetc2w_inviter_ranklist;
class packetw2c_inviter_ranklist_result;
class packetc2w_ranklist_receive;
class packetw2c_ranklist_receive_result;

// ===================================================================

class msg_inviter_ranklist : public ::google::protobuf::Message {
 public:
  msg_inviter_ranklist();
  virtual ~msg_inviter_ranklist();

  msg_inviter_ranklist(const msg_inviter_ranklist& from);

  inline msg_inviter_ranklist& operator=(const msg_inviter_ranklist& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_inviter_ranklist& default_instance();

  void Swap(msg_inviter_ranklist* other);

  // implements Message ----------------------------------------------

  msg_inviter_ranklist* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_inviter_ranklist& from);
  void MergeFrom(const msg_inviter_ranklist& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 photo_frame = 1;
  inline bool has_photo_frame() const;
  inline void clear_photo_frame();
  static const int kPhotoFrameFieldNumber = 1;
  inline ::google::protobuf::int32 photo_frame() const;
  inline void set_photo_frame(::google::protobuf::int32 value);

  // optional string nick_name = 2;
  inline bool has_nick_name() const;
  inline void clear_nick_name();
  static const int kNickNameFieldNumber = 2;
  inline const ::std::string& nick_name() const;
  inline void set_nick_name(const ::std::string& value);
  inline void set_nick_name(const char* value);
  inline void set_nick_name(const char* value, size_t size);
  inline ::std::string* mutable_nick_name();
  inline ::std::string* release_nick_name();
  inline void set_allocated_nick_name(::std::string* nick_name);

  // optional int64 total_reward = 3;
  inline bool has_total_reward() const;
  inline void clear_total_reward();
  static const int kTotalRewardFieldNumber = 3;
  inline ::google::protobuf::int64 total_reward() const;
  inline void set_total_reward(::google::protobuf::int64 value);

  // optional int32 player_id = 4;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 4;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // optional int64 reward = 5;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 5;
  inline ::google::protobuf::int64 reward() const;
  inline void set_reward(::google::protobuf::int64 value);

  // optional string icon_custom = 6;
  inline bool has_icon_custom() const;
  inline void clear_icon_custom();
  static const int kIconCustomFieldNumber = 6;
  inline const ::std::string& icon_custom() const;
  inline void set_icon_custom(const ::std::string& value);
  inline void set_icon_custom(const char* value);
  inline void set_icon_custom(const char* value, size_t size);
  inline ::std::string* mutable_icon_custom();
  inline ::std::string* release_icon_custom();
  inline void set_allocated_icon_custom(::std::string* icon_custom);

  // optional int32 viplvl = 7;
  inline bool has_viplvl() const;
  inline void clear_viplvl();
  static const int kViplvlFieldNumber = 7;
  inline ::google::protobuf::int32 viplvl() const;
  inline void set_viplvl(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.msg_inviter_ranklist)
 private:
  inline void set_has_photo_frame();
  inline void clear_has_photo_frame();
  inline void set_has_nick_name();
  inline void clear_has_nick_name();
  inline void set_has_total_reward();
  inline void clear_has_total_reward();
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_icon_custom();
  inline void clear_has_icon_custom();
  inline void set_has_viplvl();
  inline void clear_has_viplvl();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* nick_name_;
  ::google::protobuf::int32 photo_frame_;
  ::google::protobuf::int32 player_id_;
  ::google::protobuf::int64 total_reward_;
  ::google::protobuf::int64 reward_;
  ::std::string* icon_custom_;
  ::google::protobuf::int32 viplvl_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5frank_2eproto();
  friend void protobuf_AssignDesc_client2world_5frank_2eproto();
  friend void protobuf_ShutdownFile_client2world_5frank_2eproto();

  void InitAsDefaultInstance();
  static msg_inviter_ranklist* default_instance_;
};
// -------------------------------------------------------------------

class packetc2w_inviter_ranklist : public ::google::protobuf::Message {
 public:
  packetc2w_inviter_ranklist();
  virtual ~packetc2w_inviter_ranklist();

  packetc2w_inviter_ranklist(const packetc2w_inviter_ranklist& from);

  inline packetc2w_inviter_ranklist& operator=(const packetc2w_inviter_ranklist& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2w_inviter_ranklist& default_instance();

  void Swap(packetc2w_inviter_ranklist* other);

  // implements Message ----------------------------------------------

  packetc2w_inviter_ranklist* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2w_inviter_ranklist& from);
  void MergeFrom(const packetc2w_inviter_ranklist& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_inviter_ranklist];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetc2w_inviter_ranklist)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5frank_2eproto();
  friend void protobuf_AssignDesc_client2world_5frank_2eproto();
  friend void protobuf_ShutdownFile_client2world_5frank_2eproto();

  void InitAsDefaultInstance();
  static packetc2w_inviter_ranklist* default_instance_;
};
// -------------------------------------------------------------------

class packetw2c_inviter_ranklist_result : public ::google::protobuf::Message {
 public:
  packetw2c_inviter_ranklist_result();
  virtual ~packetw2c_inviter_ranklist_result();

  packetw2c_inviter_ranklist_result(const packetw2c_inviter_ranklist_result& from);

  inline packetw2c_inviter_ranklist_result& operator=(const packetw2c_inviter_ranklist_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetw2c_inviter_ranklist_result& default_instance();

  void Swap(packetw2c_inviter_ranklist_result* other);

  // implements Message ----------------------------------------------

  packetw2c_inviter_ranklist_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetw2c_inviter_ranklist_result& from);
  void MergeFrom(const packetw2c_inviter_ranklist_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_inviter_ranklist_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // repeated .client2world_protocols.msg_inviter_ranklist ranking_list = 2;
  inline int ranking_list_size() const;
  inline void clear_ranking_list();
  static const int kRankingListFieldNumber = 2;
  inline const ::client2world_protocols::msg_inviter_ranklist& ranking_list(int index) const;
  inline ::client2world_protocols::msg_inviter_ranklist* mutable_ranking_list(int index);
  inline ::client2world_protocols::msg_inviter_ranklist* add_ranking_list();
  inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_inviter_ranklist >&
      ranking_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_inviter_ranklist >*
      mutable_ranking_list();

  // optional .client2world_protocols.msg_inviter_ranklist self_info = 3;
  inline bool has_self_info() const;
  inline void clear_self_info();
  static const int kSelfInfoFieldNumber = 3;
  inline const ::client2world_protocols::msg_inviter_ranklist& self_info() const;
  inline ::client2world_protocols::msg_inviter_ranklist* mutable_self_info();
  inline ::client2world_protocols::msg_inviter_ranklist* release_self_info();
  inline void set_allocated_self_info(::client2world_protocols::msg_inviter_ranklist* self_info);

  // optional int32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetw2c_inviter_ranklist_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_self_info();
  inline void clear_has_self_info();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_inviter_ranklist > ranking_list_;
  int packet_id_;
  ::google::protobuf::int32 type_;
  ::client2world_protocols::msg_inviter_ranklist* self_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5frank_2eproto();
  friend void protobuf_AssignDesc_client2world_5frank_2eproto();
  friend void protobuf_ShutdownFile_client2world_5frank_2eproto();

  void InitAsDefaultInstance();
  static packetw2c_inviter_ranklist_result* default_instance_;
};
// -------------------------------------------------------------------

class packetc2w_ranklist_receive : public ::google::protobuf::Message {
 public:
  packetc2w_ranklist_receive();
  virtual ~packetc2w_ranklist_receive();

  packetc2w_ranklist_receive(const packetc2w_ranklist_receive& from);

  inline packetc2w_ranklist_receive& operator=(const packetc2w_ranklist_receive& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2w_ranklist_receive& default_instance();

  void Swap(packetc2w_ranklist_receive* other);

  // implements Message ----------------------------------------------

  packetc2w_ranklist_receive* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2w_ranklist_receive& from);
  void MergeFrom(const packetc2w_ranklist_receive& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_ranklist_receive];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetc2w_ranklist_receive)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5frank_2eproto();
  friend void protobuf_AssignDesc_client2world_5frank_2eproto();
  friend void protobuf_ShutdownFile_client2world_5frank_2eproto();

  void InitAsDefaultInstance();
  static packetc2w_ranklist_receive* default_instance_;
};
// -------------------------------------------------------------------

class packetw2c_ranklist_receive_result : public ::google::protobuf::Message {
 public:
  packetw2c_ranklist_receive_result();
  virtual ~packetw2c_ranklist_receive_result();

  packetw2c_ranklist_receive_result(const packetw2c_ranklist_receive_result& from);

  inline packetw2c_ranklist_receive_result& operator=(const packetw2c_ranklist_receive_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetw2c_ranklist_receive_result& default_instance();

  void Swap(packetw2c_ranklist_receive_result* other);

  // implements Message ----------------------------------------------

  packetw2c_ranklist_receive_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetw2c_ranklist_receive_result& from);
  void MergeFrom(const packetw2c_ranklist_receive_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_ranklist_receive_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // repeated int64 reward_day = 2;
  inline int reward_day_size() const;
  inline void clear_reward_day();
  static const int kRewardDayFieldNumber = 2;
  inline ::google::protobuf::int64 reward_day(int index) const;
  inline void set_reward_day(int index, ::google::protobuf::int64 value);
  inline void add_reward_day(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      reward_day() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_reward_day();

  // repeated int64 reward_week = 3;
  inline int reward_week_size() const;
  inline void clear_reward_week();
  static const int kRewardWeekFieldNumber = 3;
  inline ::google::protobuf::int64 reward_week(int index) const;
  inline void set_reward_week(int index, ::google::protobuf::int64 value);
  inline void add_reward_week(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      reward_week() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_reward_week();

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetw2c_ranklist_receive_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > reward_day_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > reward_week_;
  int packet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_client2world_5frank_2eproto();
  friend void protobuf_AssignDesc_client2world_5frank_2eproto();
  friend void protobuf_ShutdownFile_client2world_5frank_2eproto();

  void InitAsDefaultInstance();
  static packetw2c_ranklist_receive_result* default_instance_;
};
// ===================================================================


// ===================================================================

// msg_inviter_ranklist

// optional int32 photo_frame = 1;
inline bool msg_inviter_ranklist::has_photo_frame() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_inviter_ranklist::set_has_photo_frame() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_inviter_ranklist::clear_has_photo_frame() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_inviter_ranklist::clear_photo_frame() {
  photo_frame_ = 0;
  clear_has_photo_frame();
}
inline ::google::protobuf::int32 msg_inviter_ranklist::photo_frame() const {
  return photo_frame_;
}
inline void msg_inviter_ranklist::set_photo_frame(::google::protobuf::int32 value) {
  set_has_photo_frame();
  photo_frame_ = value;
}

// optional string nick_name = 2;
inline bool msg_inviter_ranklist::has_nick_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_inviter_ranklist::set_has_nick_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_inviter_ranklist::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_inviter_ranklist::clear_nick_name() {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    nick_name_->clear();
  }
  clear_has_nick_name();
}
inline const ::std::string& msg_inviter_ranklist::nick_name() const {
  return *nick_name_;
}
inline void msg_inviter_ranklist::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void msg_inviter_ranklist::set_nick_name(const char* value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void msg_inviter_ranklist::set_nick_name(const char* value, size_t size) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* msg_inviter_ranklist::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  return nick_name_;
}
inline ::std::string* msg_inviter_ranklist::release_nick_name() {
  clear_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nick_name_;
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void msg_inviter_ranklist::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    delete nick_name_;
  }
  if (nick_name) {
    set_has_nick_name();
    nick_name_ = nick_name;
  } else {
    clear_has_nick_name();
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 total_reward = 3;
inline bool msg_inviter_ranklist::has_total_reward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_inviter_ranklist::set_has_total_reward() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_inviter_ranklist::clear_has_total_reward() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_inviter_ranklist::clear_total_reward() {
  total_reward_ = GOOGLE_LONGLONG(0);
  clear_has_total_reward();
}
inline ::google::protobuf::int64 msg_inviter_ranklist::total_reward() const {
  return total_reward_;
}
inline void msg_inviter_ranklist::set_total_reward(::google::protobuf::int64 value) {
  set_has_total_reward();
  total_reward_ = value;
}

// optional int32 player_id = 4;
inline bool msg_inviter_ranklist::has_player_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void msg_inviter_ranklist::set_has_player_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void msg_inviter_ranklist::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void msg_inviter_ranklist::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 msg_inviter_ranklist::player_id() const {
  return player_id_;
}
inline void msg_inviter_ranklist::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional int64 reward = 5;
inline bool msg_inviter_ranklist::has_reward() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void msg_inviter_ranklist::set_has_reward() {
  _has_bits_[0] |= 0x00000010u;
}
inline void msg_inviter_ranklist::clear_has_reward() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void msg_inviter_ranklist::clear_reward() {
  reward_ = GOOGLE_LONGLONG(0);
  clear_has_reward();
}
inline ::google::protobuf::int64 msg_inviter_ranklist::reward() const {
  return reward_;
}
inline void msg_inviter_ranklist::set_reward(::google::protobuf::int64 value) {
  set_has_reward();
  reward_ = value;
}

// optional string icon_custom = 6;
inline bool msg_inviter_ranklist::has_icon_custom() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void msg_inviter_ranklist::set_has_icon_custom() {
  _has_bits_[0] |= 0x00000020u;
}
inline void msg_inviter_ranklist::clear_has_icon_custom() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void msg_inviter_ranklist::clear_icon_custom() {
  if (icon_custom_ != &::google::protobuf::internal::kEmptyString) {
    icon_custom_->clear();
  }
  clear_has_icon_custom();
}
inline const ::std::string& msg_inviter_ranklist::icon_custom() const {
  return *icon_custom_;
}
inline void msg_inviter_ranklist::set_icon_custom(const ::std::string& value) {
  set_has_icon_custom();
  if (icon_custom_ == &::google::protobuf::internal::kEmptyString) {
    icon_custom_ = new ::std::string;
  }
  icon_custom_->assign(value);
}
inline void msg_inviter_ranklist::set_icon_custom(const char* value) {
  set_has_icon_custom();
  if (icon_custom_ == &::google::protobuf::internal::kEmptyString) {
    icon_custom_ = new ::std::string;
  }
  icon_custom_->assign(value);
}
inline void msg_inviter_ranklist::set_icon_custom(const char* value, size_t size) {
  set_has_icon_custom();
  if (icon_custom_ == &::google::protobuf::internal::kEmptyString) {
    icon_custom_ = new ::std::string;
  }
  icon_custom_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* msg_inviter_ranklist::mutable_icon_custom() {
  set_has_icon_custom();
  if (icon_custom_ == &::google::protobuf::internal::kEmptyString) {
    icon_custom_ = new ::std::string;
  }
  return icon_custom_;
}
inline ::std::string* msg_inviter_ranklist::release_icon_custom() {
  clear_has_icon_custom();
  if (icon_custom_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = icon_custom_;
    icon_custom_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void msg_inviter_ranklist::set_allocated_icon_custom(::std::string* icon_custom) {
  if (icon_custom_ != &::google::protobuf::internal::kEmptyString) {
    delete icon_custom_;
  }
  if (icon_custom) {
    set_has_icon_custom();
    icon_custom_ = icon_custom;
  } else {
    clear_has_icon_custom();
    icon_custom_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 viplvl = 7;
inline bool msg_inviter_ranklist::has_viplvl() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void msg_inviter_ranklist::set_has_viplvl() {
  _has_bits_[0] |= 0x00000040u;
}
inline void msg_inviter_ranklist::clear_has_viplvl() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void msg_inviter_ranklist::clear_viplvl() {
  viplvl_ = 0;
  clear_has_viplvl();
}
inline ::google::protobuf::int32 msg_inviter_ranklist::viplvl() const {
  return viplvl_;
}
inline void msg_inviter_ranklist::set_viplvl(::google::protobuf::int32 value) {
  set_has_viplvl();
  viplvl_ = value;
}

// -------------------------------------------------------------------

// packetc2w_inviter_ranklist

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_inviter_ranklist];
inline bool packetc2w_inviter_ranklist::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2w_inviter_ranklist::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2w_inviter_ranklist::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2w_inviter_ranklist::clear_packet_id() {
  packet_id_ = 5090;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetc2w_inviter_ranklist::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2w_inviter_ranklist::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// optional int32 type = 2;
inline bool packetc2w_inviter_ranklist::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetc2w_inviter_ranklist::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetc2w_inviter_ranklist::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetc2w_inviter_ranklist::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 packetc2w_inviter_ranklist::type() const {
  return type_;
}
inline void packetc2w_inviter_ranklist::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// packetw2c_inviter_ranklist_result

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_inviter_ranklist_result];
inline bool packetw2c_inviter_ranklist_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetw2c_inviter_ranklist_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetw2c_inviter_ranklist_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetw2c_inviter_ranklist_result::clear_packet_id() {
  packet_id_ = 7598;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetw2c_inviter_ranklist_result::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetw2c_inviter_ranklist_result::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// repeated .client2world_protocols.msg_inviter_ranklist ranking_list = 2;
inline int packetw2c_inviter_ranklist_result::ranking_list_size() const {
  return ranking_list_.size();
}
inline void packetw2c_inviter_ranklist_result::clear_ranking_list() {
  ranking_list_.Clear();
}
inline const ::client2world_protocols::msg_inviter_ranklist& packetw2c_inviter_ranklist_result::ranking_list(int index) const {
  return ranking_list_.Get(index);
}
inline ::client2world_protocols::msg_inviter_ranklist* packetw2c_inviter_ranklist_result::mutable_ranking_list(int index) {
  return ranking_list_.Mutable(index);
}
inline ::client2world_protocols::msg_inviter_ranklist* packetw2c_inviter_ranklist_result::add_ranking_list() {
  return ranking_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_inviter_ranklist >&
packetw2c_inviter_ranklist_result::ranking_list() const {
  return ranking_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::client2world_protocols::msg_inviter_ranklist >*
packetw2c_inviter_ranklist_result::mutable_ranking_list() {
  return &ranking_list_;
}

// optional .client2world_protocols.msg_inviter_ranklist self_info = 3;
inline bool packetw2c_inviter_ranklist_result::has_self_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetw2c_inviter_ranklist_result::set_has_self_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetw2c_inviter_ranklist_result::clear_has_self_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetw2c_inviter_ranklist_result::clear_self_info() {
  if (self_info_ != NULL) self_info_->::client2world_protocols::msg_inviter_ranklist::Clear();
  clear_has_self_info();
}
inline const ::client2world_protocols::msg_inviter_ranklist& packetw2c_inviter_ranklist_result::self_info() const {
  return self_info_ != NULL ? *self_info_ : *default_instance_->self_info_;
}
inline ::client2world_protocols::msg_inviter_ranklist* packetw2c_inviter_ranklist_result::mutable_self_info() {
  set_has_self_info();
  if (self_info_ == NULL) self_info_ = new ::client2world_protocols::msg_inviter_ranklist;
  return self_info_;
}
inline ::client2world_protocols::msg_inviter_ranklist* packetw2c_inviter_ranklist_result::release_self_info() {
  clear_has_self_info();
  ::client2world_protocols::msg_inviter_ranklist* temp = self_info_;
  self_info_ = NULL;
  return temp;
}
inline void packetw2c_inviter_ranklist_result::set_allocated_self_info(::client2world_protocols::msg_inviter_ranklist* self_info) {
  delete self_info_;
  self_info_ = self_info;
  if (self_info) {
    set_has_self_info();
  } else {
    clear_has_self_info();
  }
}

// optional int32 type = 4;
inline bool packetw2c_inviter_ranklist_result::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void packetw2c_inviter_ranklist_result::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void packetw2c_inviter_ranklist_result::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void packetw2c_inviter_ranklist_result::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 packetw2c_inviter_ranklist_result::type() const {
  return type_;
}
inline void packetw2c_inviter_ranklist_result::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// packetc2w_ranklist_receive

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_ranklist_receive];
inline bool packetc2w_ranklist_receive::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2w_ranklist_receive::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2w_ranklist_receive::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2w_ranklist_receive::clear_packet_id() {
  packet_id_ = 5101;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetc2w_ranklist_receive::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2w_ranklist_receive::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// -------------------------------------------------------------------

// packetw2c_ranklist_receive_result

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_ranklist_receive_result];
inline bool packetw2c_ranklist_receive_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetw2c_ranklist_receive_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetw2c_ranklist_receive_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetw2c_ranklist_receive_result::clear_packet_id() {
  packet_id_ = 7610;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetw2c_ranklist_receive_result::packet_id() const {
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetw2c_ranklist_receive_result::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
}

// repeated int64 reward_day = 2;
inline int packetw2c_ranklist_receive_result::reward_day_size() const {
  return reward_day_.size();
}
inline void packetw2c_ranklist_receive_result::clear_reward_day() {
  reward_day_.Clear();
}
inline ::google::protobuf::int64 packetw2c_ranklist_receive_result::reward_day(int index) const {
  return reward_day_.Get(index);
}
inline void packetw2c_ranklist_receive_result::set_reward_day(int index, ::google::protobuf::int64 value) {
  reward_day_.Set(index, value);
}
inline void packetw2c_ranklist_receive_result::add_reward_day(::google::protobuf::int64 value) {
  reward_day_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
packetw2c_ranklist_receive_result::reward_day() const {
  return reward_day_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
packetw2c_ranklist_receive_result::mutable_reward_day() {
  return &reward_day_;
}

// repeated int64 reward_week = 3;
inline int packetw2c_ranklist_receive_result::reward_week_size() const {
  return reward_week_.size();
}
inline void packetw2c_ranklist_receive_result::clear_reward_week() {
  reward_week_.Clear();
}
inline ::google::protobuf::int64 packetw2c_ranklist_receive_result::reward_week(int index) const {
  return reward_week_.Get(index);
}
inline void packetw2c_ranklist_receive_result::set_reward_week(int index, ::google::protobuf::int64 value) {
  reward_week_.Set(index, value);
}
inline void packetw2c_ranklist_receive_result::add_reward_week(::google::protobuf::int64 value) {
  reward_week_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
packetw2c_ranklist_receive_result::reward_week() const {
  return reward_week_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
packetw2c_ranklist_receive_result::mutable_reward_week() {
  return &reward_week_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace client2world_protocols

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_client2world_5frank_2eproto__INCLUDED
