// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_redblack_def.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "game_redblack_def.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace game_redblack_protocols {

namespace {

const ::google::protobuf::EnumDescriptor* e_server_msg_type_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_game_5fredblack_5fdef_2eproto() {
  protobuf_AddDesc_game_5fredblack_5fdef_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "game_redblack_def.proto");
  GOOGLE_CHECK(file != NULL);
  e_server_msg_type_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_game_5fredblack_5fdef_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_game_5fredblack_5fdef_2eproto() {
}

void protobuf_AddDesc_game_5fredblack_5fdef_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027game_redblack_def.proto\022\027game_redblack"
    "_protocols*\237\005\n\021e_server_msg_type\022\024\n\017e_ms"
    "t_start_c2l\020\220N\022\035\n\030e_mst_c2l_get_scene_in"
    "fo\020\221N\022\033\n\026e_mst_c2l_ask_bet_info\020\233N\022\037\n\032e_"
    "mst_c2l_ask_continue_bet\020\234N\022\033\n\026e_mst_c2l"
    "_game_control\020\235N\022\024\n\017e_mst_start_l2c\020\230u\022$"
    "\n\037e_mst_l2c_get_scene_info_result\020\231u\022\036\n\031"
    "e_mst_l2c_bet_info_result\020\243u\022\"\n\035e_mst_l2"
    "c_continue_bet_result\020\244u\022\033\n\026e_mst_l2c_bc"
    "_debuginfo\020\245u\022%\n e_mst_l2c_notice_gm_all"
    "_bet_info\020\246u\022$\n\037e_mst_l2c_bc_scene_prepa"
    "re_into\020\312u\022 \n\033e_mst_l2c_bc_scene_bet_int"
    "o\020\313u\022%\n e_mst_l2c_bc_sync_scene_bet_into"
    "\020\314u\022!\n\034e_mst_l2c_bc_scene_deal_into\020\315u\022#"
    "\n\036e_mst_l2c_bc_scene_result_into\020\316u\022 \n\033e"
    "_mst_l2c_enter_player_info\020\317u\022 \n\033e_mst_l"
    "2c_leave_player_info\020\320u\022\"\n\035e_mst_l2c_gam"
    "e_control_result\020\321u\022\027\n\021e_mst_clend_index"
    "\020\240\234\001", 724);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "game_redblack_def.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_game_5fredblack_5fdef_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_game_5fredblack_5fdef_2eproto {
  StaticDescriptorInitializer_game_5fredblack_5fdef_2eproto() {
    protobuf_AddDesc_game_5fredblack_5fdef_2eproto();
  }
} static_descriptor_initializer_game_5fredblack_5fdef_2eproto_;
const ::google::protobuf::EnumDescriptor* e_server_msg_type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_server_msg_type_descriptor_;
}
bool e_server_msg_type_IsValid(int value) {
  switch(value) {
    case 10000:
    case 10001:
    case 10011:
    case 10012:
    case 10013:
    case 15000:
    case 15001:
    case 15011:
    case 15012:
    case 15013:
    case 15014:
    case 15050:
    case 15051:
    case 15052:
    case 15053:
    case 15054:
    case 15055:
    case 15056:
    case 15057:
    case 20000:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace game_redblack_protocols

// @@protoc_insertion_point(global_scope)
